{"version":3,"sources":["assets/icons/linkedin-4.svg","assets/icons/facebook-2.svg","assets/icons/twitter-2.svg","assets/icons/save.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/clock-thin.svg","assets/icons/comment.svg","assets/icons/iconCheck.svg","assets/icons/time-3.svg","assets/icons/user.svg","components/Dashboard/PctureChoice/PctureChoice.tsx","components/Dashboard/HeaderStyleDropdown/HeaderStyleDropdown.tsx","components/Dashboard/StyleButton/StyleButton.tsx","components/Dashboard/Gallery/Gallery.tsx","components/Dashboard/Media/Media.tsx","components/Modal/Modal.tsx","components/Dashboard/StyleTypes/StyleTypes.tsx","components/Dashboard/MediaBlockRenderer/MediaBlockRenderer.tsx","components/Dashboard/Toolbar/Toolbar.tsx","components/Dashboard/RichEditor/RichEditor.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Picture","props","imgUrl","publicId","handleClick","checked","className","key","onClick","src","alt","type","readOnly","HeaderStyleDropdown","onToggle","active","headerOptions","value","onChange","event","target","heading","label","style","StyleButton","classNames","onMouseDown","preventDefault","require","Gallery","useContext","DataContext","gallery","data","dataDispatch","dataService","DataServices","images","reduce","acc","curr","public_id","useState","checkState","setCheckState","openWidget","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","error","result","payload","info","withCb","cb","checkList","push","length","text","removeImage","Image","Media","entity","contentState","getEntity","block","getEntityAt","getData","getType","media","modalRoot","document","createElement","Modal","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","editorState","onToggleBlock","onToggleInline","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","currentStyle","getCurrentInlineStyle","has","mediaBlockRenderer","component","editable","Toolbar","isOpen","setIsOpen","toggle","setToggle","handleChange","onAddImage","handleSave","variant","RichUtils","toggleBlockType","toggleInlineStyle","SaveIcon","toolbar__buttons","RichEditor","blogPost","blogId","blogs","filter","b","blogState","EditorState","createWithContent","convertFromRaw","JSON","parse","content","createEmpty","setEditorState","stringify","convertToRaw","editorContent","setEditorContent","history","useHistory","editor","createRef","focusEditor","current","focus","hasText","getBlockMap","first","urlValue","contentStateWithEntitiy","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","setTimeout","createNewPost","userId","users","_id","updatePost","ref","blockStyleFn","getBlockStyle","blockRendererFn","handleKeyCommand","command","newState","keyBindingFn","keyCode","onTab","getDefaultKeyBinding","placeholder"],"mappings":"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","file":"static/js/2.33a4ec6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","var map = {\n\t\"./Blockquote.svg\": 148,\n\t\"./Bold.svg\": 149,\n\t\"./CodeBlock.svg\": 150,\n\t\"./Image.svg\": 151,\n\t\"./Italic.svg\": 152,\n\t\"./Monospace.svg\": 153,\n\t\"./OL.svg\": 154,\n\t\"./Strike.svg\": 155,\n\t\"./UL.svg\": 156,\n\t\"./Underline.svg\": 157,\n\t\"./bubble.svg\": 34,\n\t\"./clock-thin.svg\": 158,\n\t\"./comment.svg\": 159,\n\t\"./facebook-2.svg\": 138,\n\t\"./iconCheck.svg\": 160,\n\t\"./linkedin-2.svg\": 33,\n\t\"./linkedin-4.svg\": 137,\n\t\"./save.svg\": 140,\n\t\"./time-3.svg\": 161,\n\t\"./twitter-2.svg\": 139,\n\t\"./user.svg\": 162\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 147;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.808af9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","import React from 'react'\n\ntype Props = {\n  checked: boolean\n  imgUrl: string\n  publicId: string\n  handleClick: (publicId: string) => () => void\n}\n\nexport function Picture(props: Props): JSX.Element {\n  const { imgUrl, publicId, handleClick, checked } = props\n  return (\n    <div className=\"picture\" key={publicId} onClick={handleClick(publicId)}>\n      <img className=\"picture__image\" src={imgUrl} alt=\"pic\" />\n      <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n    </div>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { BlockTypes } from '../StyleTypes/StyleTypes'\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes\n  active: string\n  onToggle: (value: string) => void\n}\nexport function HeaderStyleDropdown(props: HeaderStyleDropdownProps): JSX.Element {\n  const { onToggle, active, headerOptions } = props\n  const handleToggle = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const value = event.target.value\n    onToggle(value)\n  }\n  return (\n    <div className=\"RichEditor-headers\">\n      <select className=\"RichEditor-headers-select\" value={active} onChange={handleToggle}>\n        <option className=\"RichEditor-headers-option\" key=\"unstyled\" value=\"unstyled\">\n          Normal\n        </option>\n        {headerOptions.map(heading => (\n          <option className=\"RichEditor-headers-option\" key={heading.label} value={heading.style}>\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, { MouseEvent } from 'react'\nimport classNames from 'classnames'\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js'\n\nexport type StyleButtonProps = {\n  active: boolean\n  style: DraftBlockType | DraftInlineStyleType\n  onToggle: (style: DraftBlockType | DraftInlineStyleType) => void\n  label: string\n}\n\nexport function StyleButton(props: StyleButtonProps): JSX.Element {\n  const { active, style, onToggle, label } = props\n  const handleToggle = (e: MouseEvent): void => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  return (\n    <span\n      className={classNames('RichEditor-styleButton', {\n        [`RichEditor-styleButton-${label}`]: true,\n        'RichEditor-activeButton': active,\n      })}\n      onMouseDown={handleToggle}\n    >\n      <img className=\"RichEditor-styleButton-icon\" src={require(`../../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Button } from '../../Button/Button'\nimport { Picture } from '../PctureChoice/PctureChoice'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { GalleryInterface } from '../../../reducers/dataReducer'\nimport { DataServices } from 'services/dataService'\n\ninterface Props {\n  withCb: boolean\n  cb: (publicId: string) => void\n}\n\nexport function Gallery(props: Props): JSX.Element {\n  const {\n    data: { gallery },\n    dataDispatch,\n  } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const images = gallery.reduce((acc: any, curr: GalleryInterface) => {\n    acc[curr.public_id] = false\n    return acc\n  }, [])\n\n  const [checkState, setCheckState] = useState(images)\n\n  const openWidget = (): void => {\n    ;(window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: ['xmas'],\n      },\n      (error: Error, result: any) => {\n        if (result.event === 'success') {\n          dataDispatch({\n            type: 'ADD_GALLERY',\n            payload: result.info,\n          })\n        }\n      },\n    )\n  }\n\n  const handleClick = (publicId: string) => (): void => {\n    if (props.withCb) {\n      props.cb(publicId)\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId],\n    })\n  }\n\n  const checkList = gallery.reduce((acc: string[], curr: GalleryInterface) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id)\n    }\n    return acc\n  }, [])\n  const handleDelete = (): void => {\n    dataService.removeImage(checkList[0])\n  }\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? (\n        <div className=\"gallery__empty\">\n          The gallery is empty! <Button text=\"Add picture\" handleClick={openWidget} />{' '}\n        </div>\n      ) : (\n        <>\n          <div>\n            <Button text=\"Add\" handleClick={openWidget} />\n            {checkList[0] && (\n              <Button text={checkList.length > 1 ? 'Delete all' : 'Delete'} handleClick={handleDelete} />\n            )}\n          </div>\n          <div className=\"gallery__contents\">\n            {gallery.map((data: GalleryInterface) => (\n              <Picture\n                checked={checkState[data.public_id]}\n                handleClick={handleClick}\n                key={data.public_id}\n                publicId={data.public_id}\n                imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js'\n\ntype ImageProps = {\n  src: string\n}\ntype MediaProps = {\n  block: ContentBlock\n  contentState: ContentState\n}\nfunction Image(props: ImageProps): JSX.Element | null {\n  if (!!props.src) {\n    return <img src={props.src} alt=\"upload to cloud\" />\n  }\n  return null\n}\nexport function Media(props: MediaProps): JSX.Element {\n  const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0))\n  const { src } = entity.getData()\n  const type = entity.getType()\n\n  let media: JSX.Element = <></>\n\n  if (type === 'image') {\n    media = <Image src={src} />\n  }\n  return media\n}\n","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot: HTMLElement = document.createElement('portal')\n\nexport function Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n","import React from 'react'\nimport { EditorState, DraftBlockType, DraftInlineStyleType } from 'draft-js'\nimport { HeaderStyleDropdown } from '../HeaderStyleDropdown/HeaderStyleDropdown'\nimport { StyleButton } from '../StyleButton/StyleButton'\n\nexport interface BlockType {\n  label: string\n  style: DraftBlockType\n  type: string\n}\n\nexport type BlockTypes = BlockType[]\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: 'Bold', style: 'BOLD', type: 'INLINE_TYPE' },\n  { label: 'Italic', style: 'ITALIC', type: 'INLINE_TYPE' },\n  { label: 'Underline', style: 'UNDERLINE', type: 'INLINE_TYPE' },\n  { label: 'UL', style: 'unordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'OL', style: 'ordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'Blockquote', style: 'blockquote', type: 'BLOCK_TYPE' },\n  { label: 'CodeBlock', style: 'code-block', type: 'BLOCK_TYPE' },\n  { label: 'Monospace', style: 'CODE', type: 'INLINE_TYPE' },\n  { label: 'Strike', style: 'STRIKETHROUGH', type: 'INLINE_TYPE' },\n  { label: 'Image', style: 'image', type: 'IMAGE' },\n]\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: 'Heading 1', style: 'header-one', type: 'BLOCK_TYPE' },\n  { label: 'Heading 2', style: 'header-two', type: 'BLOCK_TYPE' },\n  { label: 'Heading 3', style: 'header-three', type: 'BLOCK_TYPE' },\n  { label: 'Heading 4', style: 'header-four', type: 'BLOCK_TYPE' },\n  { label: 'Heading 5', style: 'header-five', type: 'BLOCK_TYPE' },\n  { label: 'Heading 6', style: 'header-six', type: 'BLOCK_TYPE' },\n]\n\ntype StyleTypesProps = {\n  editorState: EditorState\n  onToggleBlock: (style: DraftBlockType) => void\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void\n}\n\nexport function StyleTypes(props: StyleTypesProps): JSX.Element {\n  const { editorState, onToggleBlock, onToggleInline } = props\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n  const currentStyle = editorState.getCurrentInlineStyle()\n\n  return (\n    <>\n      <HeaderStyleDropdown headerOptions={BLOCK_TYPES_HEADING} active={blockType} onToggle={onToggleBlock} />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={type.type === 'BLOCK_TYPE' ? type.style === blockType : currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={type.type === 'BLOCK_TYPE' ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </>\n  )\n}\n","import { ContentBlock } from 'draft-js'\nimport { Media } from '../Media/Media'\nimport { ReactNode } from 'react'\n\ntype MediaBlock = {\n  component: ReactNode\n  editable: boolean\n}\nexport function mediaBlockRenderer(block: ContentBlock): MediaBlock | null {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false,\n    }\n  }\n  return null\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState } from 'react'\nimport { EditorState, DraftBlockType, RichUtils } from 'draft-js'\nimport classNames from 'classnames'\nimport { Button } from '../../Button/Button'\nimport { StyleTypes } from '../StyleTypes/StyleTypes'\nimport { Modal } from '../../Modal/Modal'\nimport { Gallery } from '../Gallery/Gallery'\nimport SaveIcon from '../../../assets/icons/save.svg'\n\ninterface ToolbarProps {\n  variant: string\n  onAddImage: (publicId: string) => void\n  editorState: EditorState\n  handleChange: (editorState: EditorState) => void\n  handleSave: (type: string) => () => void\n}\nexport function Toolbar(props: ToolbarProps): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const { editorState, handleChange, onAddImage, handleSave, variant } = props\n\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  const handleCb = (publicId: string): void => {\n    onAddImage(publicId)\n    setIsOpen(false)\n  }\n  const handleToggle = (): void => setToggle(!toggle)\n  const toggleBlockType = (blockType: DraftBlockType): void => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  const toggleInlineStyle = (style: DraftBlockType): void => {\n    if (style === 'image') {\n      setIsOpen(!isOpen)\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style))\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes editorState={editorState} onToggleBlock={toggleBlockType} onToggleInline={toggleInlineStyle} />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={SaveIcon} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          'toolbar__buttons-hide': !toggle,\n        })}\n      >\n        <Button text={variant} handleClick={handleSave(variant)} />\n      </div>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Gallery withCb={true} cb={handleCb} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n","import React, { useState, KeyboardEvent, createRef, useContext } from 'react'\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  convertToRaw,\n  AtomicBlockUtils,\n  convertFromRaw,\n} from 'draft-js'\nimport { Toolbar } from '../Toolbar/Toolbar'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { mediaBlockRenderer } from '../MediaBlockRenderer/MediaBlockRenderer'\nimport { useHistory } from 'react-router-dom'\nimport { getBlockStyle } from 'Helper'\nimport { BlogType } from 'pages/Blog/Blog'\nimport { DataServices } from 'services/dataService'\n\ntype HandleKeyCommand = 'handled' | 'not-handled'\ntype Props = {\n  blogId: {\n    id?: string\n  }\n}\nexport function RichEditor(props: Props): JSX.Element {\n  const { data, dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const blogPost = props.blogId ? data.blogs.filter((b: BlogType) => b.id === props.blogId.id)[0] : null\n  const blogState: EditorState = blogPost\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(blogPost.content)))\n    : EditorState.createEmpty()\n\n  const [editorState, setEditorState] = useState<EditorState>(blogState)\n  const content = editorState.getCurrentContent()\n\n  const [editorContent, setEditorContent] = useState<string>(JSON.stringify(convertToRaw(content)))\n\n  const history = useHistory()\n\n  const editor = createRef<Editor>()\n  const focusEditor = (): void => {\n    if (editor.current) {\n      editor.current.focus()\n    }\n  }\n  const handleChange = (editorState: EditorState): void => {\n    setEditorState(editorState)\n    setEditorContent(JSON.stringify(convertToRaw(content)))\n  }\n\n  const handleSave = (type: string) => (): void => {\n    if (type === 'Publish') {\n      dataService.createNewPost({\n        content: editorContent,\n        userId: data.users[0]._id,\n      })\n      history.push('/dashboard/posts')\n    } else {\n      dataService.updatePost(props.blogId.id, editorContent)\n      history.push('/dashboard/posts')\n    }\n  }\n\n  const handleKeyCommand = (command: DraftEditorCommand, editorState: EditorState): HandleKeyCommand => {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      handleChange(newState)\n      return 'handled'\n    } else {\n      return 'not-handled'\n    }\n  }\n  const mapKeyToEditorCommand = (e: KeyboardEvent): any => {\n    if (e.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4)\n      if (newEditorState !== editorState) {\n        handleChange(newEditorState)\n      }\n      return null\n    }\n    return getDefaultKeyBinding(e)\n  }\n\n  const onAddImage = (publicId: string): void => {\n    const urlValue = `https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${publicId}.jpg`\n    const contentState = editorState.getCurrentContent()\n    const contentStateWithEntitiy = contentState.createEntity('image', 'IMMUTABLE', { src: urlValue })\n    const entityKey = contentStateWithEntitiy.getLastCreatedEntityKey()\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntitiy,\n    })\n    setEditorState(AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' '))\n    setTimeout(() => focusEditor(), 0)\n  }\n\n  const contentState = editorState.getCurrentContent()\n  let className = 'RichEditor-editor'\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    ) {\n      className += ' RichEditor-hidePlaceholder'\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <div className=\"RichEditor\">\n        <Toolbar\n          variant={props.blogId ? 'Save' : 'Publish'}\n          onAddImage={onAddImage}\n          editorState={editorState}\n          handleChange={handleChange}\n          handleSave={handleSave}\n        />\n        <div className={className} onClick={focusEditor}>\n          <Editor\n            ref={editor}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={mediaBlockRenderer}\n            editorState={editorState}\n            handleKeyCommand={handleKeyCommand}\n            keyBindingFn={mapKeyToEditorCommand}\n            onChange={handleChange}\n            placeholder=\"Tell a story...\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}