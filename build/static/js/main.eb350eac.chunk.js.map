{"version":3,"sources":["assets/icons/save.svg","assets/images/bio-image.jpg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/clock-thin.svg","assets/icons/facebook-2.svg","assets/icons/facebook.svg","assets/icons/iconCheck.svg","assets/icons/linkedin-2.svg","assets/icons/linkedin.svg","assets/icons/twitter-2.svg","reducers/authReducer.ts","services/customAxios.ts","contexts/authContext.tsx","components/Section.tsx","components/Navbar.tsx","components/Header.tsx","components/Footer.tsx","reducers/dataReducer.ts","contexts/dataContext.tsx","components/Button.tsx","components/Signup.tsx","components/Biography/index.tsx","components/About.tsx","components/PostBlock.tsx","components/Jumbotron.tsx","components/CardPost.tsx","components/BlogBody.tsx","components/Blog.tsx","components/AddComment.tsx","components/Comment.tsx","components/Loading.tsx","components/Post.tsx","components/Login.tsx","custom-hooks/useOnClickOutside.ts","components/Dashboard/Nav.tsx","components/Dashboard/Dashboard.tsx","components/Dashboard/PictureChoice.tsx","components/Dashboard/Gallery.tsx","components/Dashboard/Profile.tsx","components/Dashboard/getBlockStyle.ts","components/Dashboard/HeaderStyleDropdown.tsx","components/Dashboard/StyleButton.tsx","components/Dashboard/StyleTypes.tsx","components/Modal.tsx","components/Dashboard/Toolbar.tsx","components/Dashboard/Media.tsx","components/Dashboard/MediaBlockRenderer.tsx","components/Dashboard/Editor.tsx","components/Comments.tsx","components/Dashboard/Posts.tsx","components/App.tsx","index.tsx","services/authService.ts","services/dataService.ts","assets/images/avatar.png","assets/icons/time-3.svg","assets/icons/user.svg","assets/icons/bubble.svg"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialAuthState","user","localStorage","getItem","token","isLoggedIn","error","authReducer","state","action","console","log","type","payload","firstName","lastName","customAxios","axios","create","baseURL","setAuthToken","defaults","headers","common","Authorization","AuthContext","createContext","Section","props","className","classNames","section__content","flexDirect","style","borderRadius","src","imgUrl","require","alt","title","text","length","to","href","btnText","Nav","React","useState","toggle","setToggle","useContext","authState","useEffect","nav","document","getElementById","sticky","offsetTop","scrollCallBack","window","addEventListener","pageYOffset","classList","add","remove","removeEventListener","navbar__menu","navbar__menu__change","onClick","show","Header","Footer","rel","target","initialDataState","blogs","users","gallery","dataReducer","_id","userId","userToUpdate","filter","imageUrl","obj","sort","a","b","Number","Date","createdAt","concat","blog","img","public_id","post","comments","postBlog","comment","DataContext","Button","handleClick","Signup","authService","email","password","setState","handleChange","name","value","onSubmit","async","preventDefault","signup","location","reload","alert","message","htmlFor","placeholder","onChange","Biography","data","bio","fullname","bioImage","About","PostBlock","sortPosts","posts","slice","p","key","date","Intl","DateTimeFormat","day","month","year","hour","minute","second","format","extractFromDraft","content","split","join","draft","JSON","parse","blocksWithText","blocks","entityMap","url","Jumbotron","backgroundImage","substring","timeIcon","iconUser","iconBubble","formatDate","CardPost","dateTime","itemProp","author","BlogBody","Blog","AddComment","commenter","postId","dataService","closeForm","addComment","rows","cols","Comment","isOpen","setIsOpen","handleToggle","Loading","Post","match","params","find","includes","rawDraft","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","renderHTML","initialState","Login","signin","useOnClickOutside","ref","cb","listener","event","current","contains","avatarUrl","handleLogout","logout","useRef","navList","nav__logout","nav__menu","Dashboard","children","Picture","publicId","checked","readOnly","Gallery","dataDispatch","images","reduce","acc","curr","checkState","setCheckState","openWidget","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","result","info","withCb","checkList","push","removeImage","Profile","imageId","height","updateUser","getBlockStyle","block","getType","HeaderStyleDropdown","onToggle","active","headerOptions","heading","label","StyleButton","onMouseDown","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","onToggleBlock","onToggleInline","selection","getSelection","blockType","getBlockForKey","getStartKey","currentStyle","getCurrentInlineStyle","has","Modal","handleClose","modal","Toolbar","onAddImage","handleSave","variant","RichUtils","toggleBlockType","toggleInlineStyle","toolbar__buttons","Image","Media","media","entity","contentState","getEntity","getEntityAt","getData","mediaBlockRenderer","component","editable","RichEditor","blogPost","blogId","blogState","createEmpty","setEditorState","stringify","convertToRaw","editorContent","setEditorContent","editor","createRef","focusEditor","focus","hasText","getBlockMap","first","urlValue","contentStateWithEntitiy","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","setTimeout","createNewPost","updatePost","blockStyleFn","blockRendererFn","handleKeyCommand","command","newState","keyBindingFn","keyCode","onTab","getDefaultKeyBinding","CommentList","index","commentId","removeComment","Posts","setComments","toISOString","updatedAt","commentList","removePost","App","getPosts","getGallery","getUsers","exact","path","Comp","rest","render","pathname","from","ReactDOM","dispatch","useReducer","authDispatch","values","credentials","then","res","setItem","catch","err","withCredentials","removeItem","Provider","get","resources","newPost","put","delete","objId","removeAssets","publicIds"],"mappings":"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","file":"static/js/main.eb350eac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/bio-image.4cec5674.jpg\";","var map = {\n\t\"./Blockquote.svg\": 300,\n\t\"./Bold.svg\": 301,\n\t\"./CodeBlock.svg\": 302,\n\t\"./Image.svg\": 303,\n\t\"./Italic.svg\": 304,\n\t\"./Monospace.svg\": 305,\n\t\"./OL.svg\": 306,\n\t\"./Strike.svg\": 307,\n\t\"./UL.svg\": 308,\n\t\"./Underline.svg\": 309,\n\t\"./bubble.svg\": 93,\n\t\"./clock-thin.svg\": 310,\n\t\"./facebook-2.svg\": 311,\n\t\"./facebook.svg\": 312,\n\t\"./iconCheck.svg\": 313,\n\t\"./linkedin-2.svg\": 314,\n\t\"./linkedin.svg\": 315,\n\t\"./save.svg\": 144,\n\t\"./time-3.svg\": 91,\n\t\"./twitter-2.svg\": 316,\n\t\"./user.svg\": 92\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 299;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.210cfb81.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.30cb7c0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.1ee6dbdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.86bb45b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.1ef99c59.svg\";","export interface AuthState {\n  isLoggedIn: boolean;\n  token: string | null;\n  user: string | null;\n  id: string | null;\n  error: string | null;\n}\nexport const initialAuthState: AuthState = {\n  user: localStorage.getItem(\"user\"),\n  token: localStorage.getItem(\"token\"),\n  isLoggedIn: localStorage.getItem(\"token\") !== null,\n  id: localStorage.getItem(\"userId\"),\n  error: null\n};\n\nexport type AuthAction =\n  | { type: \"SIGNIN_SUCCESS\"; payload: { firstName: string, lastName: string; id: string, token: string } }\n  | { type: \"SIGNIN_ERROR\"; payload: string }\n  | { type: \"SIGNUP_ERROR\"; payload: string }\n  | { type: \"SET_ERRORS\"; payload: string }\n  | { type: \"SET_USER\"; payload: string }\n  | { type: \"LOGOUT_USER\" };\n\nexport const authReducer = (state: AuthState, action: AuthAction) => {\n  console.log(action);\n  switch (action.type) {\n    case \"SIGNIN_ERROR\":\n    case \"SIGNUP_ERROR\":\n      return { ...state, error: action.payload };\n    case \"SIGNIN_SUCCESS\":\n      return {\n        ...state,\n        user: action.payload.firstName + ' ' + action.payload.lastName,\n        id: action.payload.id,\n        token: action.payload.token,\n        isLoggedIn: true,\n        error: null\n      };\n    case \"LOGOUT_USER\":\n      return { ...state, isLoggedIn: false, error: null };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst baseURL = '/api'\n\nexport const customAxios = axios.create({\n    baseURL\n})\n\nexport const setAuthToken = (token: string) => {\n    if(token) {\n        customAxios.defaults.headers.common.Authorization = `Bearer ${token}`\n    }\n}","import React, { ReactNode, createContext, useReducer } from 'react';\nimport { authReducer, initialAuthState } from \"../reducers/authReducer\";\nimport { useAuthService } from '../services/authService';\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\nexport const AuthContext = createContext({} as any);\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [authState, authDispatch] = useReducer(authReducer, initialAuthState);\n  const authService = useAuthService(authState, authDispatch);\n\n  const values = {\n    authState,\n    authDispatch,\n    authService,\n  };\n  return <AuthContext.Provider value={values}>{children}</AuthContext.Provider>\n};\n","import React from \"react\";\nimport classNames from 'classnames';\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  imgUrl: string;\n  title: string;\n  href: string;\n  btnText: string;\n  text: string;\n  flexDirect: string;\n  borderRadius: string;\n}\nconst Section = (props: Props) => (\n  <div className=\"section\">\n    <section className={classNames({\n      section__content: true,\n      [`section__content--${props.flexDirect}`]: true\n    })}>\n      <img\n      className=\"section__img\"\n        style={{ borderRadius: props.borderRadius }}\n        src={props.imgUrl ? props.imgUrl : require('../assets/images/avatar.png')}\n        alt=\"biography\"\n      />\n      <article className=\"section__article\" >\n        <h2 className=\"section__article--title\" >{props.title}</h2>\n        <span className=\"section__article--span\" ></span>\n        <p className=\"section__article--text\" >{props.text}</p>\n        {props.text.length > 20 &&<div className=\"section__article__link\" >\n          <Link to={props.href}>{props.btnText}</Link>\n        </div>\n        }\n      </article>\n    </section>\n  </div>\n);\n\nexport default Section;\n","import React, { useEffect, useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/authContext\";\n\nconst Nav = () => {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n  const { authState: { isLoggedIn } } = useContext(AuthContext);\n\n  useEffect(() => {\n    const nav = document.getElementById(\"nav\");\n    if (nav) {\n      const sticky = nav.offsetTop;\n      const scrollCallBack = window.addEventListener(\"scroll\", () => {\n        if (window.pageYOffset > sticky) {\n          nav.classList.add(\"sticky\");\n        } else {\n          nav.classList.remove(\"sticky\");\n        }\n      }) as any;\n       return () => \n        window.removeEventListener(\"scroll\", scrollCallBack) as any;\n   \n    }\n  }, []);\n  return (\n    <div id=\"nav\" className=\"navbar\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle\n        })}\n        onClick={() => setToggle(!toggle)}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          show: !toggle\n        })}\n      >\n        <ul>\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/about\">About</NavLink>\n          <NavLink to=\"/blog\">Blog</NavLink>\n          {isLoggedIn &&\n          <NavLink to=\"/dashboard\">Dashboard</NavLink>\n          }\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { Fragment } from \"react\";\nimport Nav from \"./Navbar\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <header className=\"header\">\n        <div className=\"header__content\">\n          <h1 className=\"header__title\">maryam tavakkoli</h1>\n          <span>cloud engineer</span>\n        </div>\n      </header>\n      <div className=\"nav__wrapper\">\n        <Nav />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <section className=\"footer__section\">\n      <h2 className=\"footer__section-h2\">Contact</h2>\n      <ul className=\"footer__section__list\">\n        <li className=\"footer__section__items\">\n          <a\n            className=\"footer__section__link\"\n            href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <div className=\"footer__section__linkedin\"></div>\n          </a>\n        </li>\n        <li className=\"footer__section__items\">\n          <a\n            className=\"footer__section__link\"\n            href=\"https://www.facebook.com/maryam.tavakkoli.39566\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <div className=\"footer__section__facebook\"></div>\n          </a>\n        </li>\n      </ul>\n    </section>\n    <div className=\"footer__subtitle\">\n      site by{\" \"}\n      <a\n        className=\"footer__subtitle__link\"\n        href=\"https://github.com/mnajjarian\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        mahdi najjarian\n      </a>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import { IComment } from \"../components/Blog\";\n\nexport interface User {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  bio: string;\n  imageUrl: string;\n  isAdmin: boolean;\n}\nexport interface Blog {\n  id: string;\n  content: string;\n  createdAt: string;\n  updatedAt: string;\n  comments: IComment[];\n}\nexport interface DataState {\n  blogs: Blog[];\n  gallery: IGallery[];\n  users: User[];\n}\nexport interface IGallery {\n  created_at: string;\n  format: string;\n  height: number;\n  public_id: string;\n  type: string;\n  version: number;\n  width: number;\n}\nexport interface UserUpdateImage {\n  obj: {\n    imageUrl: string;\n  };\n  userId: string;\n}\nexport const initialDataState: DataState = {\n  blogs: [],\n  users: [],\n  gallery: []\n};\n\nexport type DataAction =\n  | { type: \"FETCH_USERS\"; payload: User[] }\n  | { type: \"UPDATE_USER\"; payload: any }\n  | { type: \"UPDATE_USER_IMAGE\"; payload: UserUpdateImage }\n  | { type: \"ADD_POST\"; payload: Blog }\n  | { type: \"REMOVE_POST\"; payload: string }\n  | { type: \"FETCH_POSTS\"; payload: Blog[] }\n  | { type: \"FETCH_GALLERY\"; payload: IGallery[] }\n  | { type: \"ADD_GALLERY\"; payload: IGallery }\n  | { type: \"SET_AVATAR\"; payload: string }\n  | { type: \"REMOVE_IMAGE\"; payload: string }\n  | { type: \"ADD_COMMENT\"; payload: IComment }\n  | { type: \"REMOVE_COMMENT\"; payload: IComment };\n\nconst sortByDate = (obj: any) =>\n  obj.sort(\n    (a: any, b: any) =>\n      Number(new Date(b.createdAt)) - Number(new Date(a.createdAt))\n  );\n\nexport const dataReducer = (state: DataState, action: DataAction) => {\n  switch (action.type) {\n    case \"FETCH_USERS\":\n      return { ...state, users: action.payload };\n    case \"UPDATE_USER\":\n      return {\n        ...state,\n        users: state.users.map((user: User) =>\n          user._id !== action.payload.userId ? user : action.payload\n        )\n      };\n    case \"UPDATE_USER_IMAGE\":\n      let userToUpdate = state.users.filter(\n        (user: User) => user._id === action.payload.userId\n      )[0];\n      userToUpdate.imageUrl = action.payload.obj.imageUrl;\n      return {\n        ...state,\n        users: state.users.map((user: User) =>\n          user._id !== action.payload.userId ? user : userToUpdate\n        )\n      };\n    case \"FETCH_POSTS\":\n      return { ...state, blogs: sortByDate(action.payload) };\n    case \"FETCH_GALLERY\":\n      return { ...state, gallery: action.payload };\n    case \"SET_AVATAR\":\n      return { ...state };\n    case \"ADD_GALLERY\":\n      return { ...state, gallery: state.gallery.concat(action.payload) };\n    case \"ADD_POST\":\n      return { ...state, blogs: state.blogs.concat(action.payload) };\n    case \"REMOVE_POST\":\n      return {\n        ...state,\n        blogs: state.blogs.filter((blog: Blog) => blog.id !== action.payload)\n      };\n    case \"REMOVE_IMAGE\":\n      return {\n        ...state,\n        gallery: state.gallery.filter(\n          (img: IGallery) => img.public_id !== action.payload\n        )\n      };\n    case \"ADD_COMMENT\":\n      const post = state.blogs.filter(\n        (b: Blog) => b.id === action.payload.post\n      )[0];\n      post.comments = post.comments.concat(action.payload);\n      return {\n        ...state,\n        blogs: state.blogs.map((blog: Blog) =>\n          blog.id === action.payload._id ? post : blog\n        )\n      };\n    case \"REMOVE_COMMENT\":\n      const postBlog = state.blogs.filter(\n        (b: Blog) => b.id === action.payload.post\n      )[0];\n      postBlog.comments = postBlog.comments.filter(\n        (comment: IComment) => comment._id !== action.payload._id\n      );\n      return {\n        ...state,\n        blogs: state.blogs.map((blog: Blog) =>\n          blog.id === action.payload.post ? postBlog : blog\n        )\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, createContext, ReactNode } from \"react\";\nimport { dataReducer, initialDataState } from \"../reducers/dataReducer\";\nimport { useDataService } from \"../services/dataService\";\n\ninterface DataProviderProps {\n  children: ReactNode;\n}\nexport const DataContext = createContext({} as any);\n\nexport const DataProvider = ({ children }: DataProviderProps) => {\n  const [data, dataDispatch] = useReducer(dataReducer, initialDataState);\n  const dataService = useDataService(data, dataDispatch);\n\n  const values = {\n    data,\n    dataDispatch,\n    dataService,\n  };\n  return <DataContext.Provider value={values}>{children}</DataContext.Provider>;\n};\n","import React from 'react';\n\ninterface ButtonProps {\n    text: string;\n    handleClick?: () => void;\n}\nconst Button = (props: ButtonProps) => {\n    const { text, handleClick } = props;\n    \n    return(\n        <button type=\"submit\" className=\"button\" onClick={handleClick} >{text}</button>\n    );\n};\n\nexport default Button;","import React, { useState, FormEvent, useContext } from \"react\";\nimport Button from \"./Button\";\nimport { AuthContext } from \"contexts/authContext\";\n\nconst Signup = () => {\n  const {\n    authService, authState\n  } = useContext(AuthContext);\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = (e: FormEvent) => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n      e.preventDefault();\n    try {\n      await authService.signup(state);\n      window.location.reload();\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const { firstName, lastName, email, password } = state;\n\n  return (\n    <div className=\"login\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"firstName\">\n            First Name\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            value={firstName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"lastName\">\n            Last Name\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            value={lastName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Create account\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { Fragment, useContext } from \"react\";\nimport Section from \"../Section\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport Signup from \"components/Signup\";\n\ninterface Profile {\n  name: string;\n  image: string;\n  biography: string;\n}\nconst Biography = () => {\n  const { authState } = useContext(AuthContext);\n  \n  const {\n    data: { users }\n  } = useContext(DataContext);\n  console.log(!users.length, !authState)\n  if (!users.length || !authState) {\n    return <Signup />;\n  }\n  console.log(users, authState)\n  //const user = users.filter((user: any) => user._id === authState.id)[0];\n\n  const { firstName, lastName, bio, imageUrl } = users[0];\n  const fullname = firstName + \" \" + lastName;\n\n  return (\n    <Fragment>\n      <Header />\n      <Section\n        imgUrl={imageUrl}\n        title={fullname}\n        href=\"/about\"\n        btnText=\"read more\"\n        flexDirect=\"row\"\n        borderRadius=\"50%\"\n        text={bio}\n      />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Biography;\n","import React, { Fragment } from \"react\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst bioImage = require(\"../assets/images/bio-image.jpg\");\n\nconst About = () => (\n  <Fragment>\n    <Header />\n    <Section\n      imgUrl={bioImage}\n      title=\"About Me\"\n      href=\"/\"\n      btnText=\"download full CV\"\n      flexDirect=\"row-reverse\"\n      borderRadius=\"0\"\n      text='I am a second-year master student in \"Cloud computing and services\"\n    with minors in \"Entrepreneurship and business\". I am doing my\n    studies in “EIT Digital Master School”, where I will obtain a\n    double-degree from two universities which I have studied in: Aalto\n    University in Finland, and TU Delft in the Netherlands. Currently, I\n    am working at Nokia Bell Labs, in Finland, as a thesis writer. In\n    this position, I am conducting a research study on containerizing of\n    a current telco IoT publish/subscribe application, and suitability\n    of Kubernetes to be used for its deployment. Docker, Kubernetes,\n    Nokia’s cloud environment (NESC), Apache Kafka and GIT are\n    technologies and tools which I am using during my work in Nokia.'\n    />\n    <Footer />\n  </Fragment>\n);\n\nexport default About;\n","import React from 'react'\nimport { BlogType } from './Blog'\nimport { extractFromDraft } from './Jumbotron';\n\nexport const formatDateAndTime = (date: string) =>\nnew Intl.DateTimeFormat(\"en-us\", {\n  day: \"numeric\",\n  month: \"numeric\",\n  year: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n  second: \"numeric\"\n}).format(new Date(date));\n\ninterface Props {\n    posts: BlogType[]\n}\nconst PostBlock = (props: Props) => {\n  const sortPosts = props.posts.slice(1);\n    return(\n        <div className=\"block\">\n          <h2 className=\"block__title\">Latest Posts</h2>\n          <div className=\"block__content\">\n            {sortPosts.map((p: BlogType) => (\n              <div key={p.id} className=\"block__items\">\n                <time className=\"block__time\">\n                  {formatDateAndTime(p.createdAt)}\n                </time>\n                <a\n                  className=\"block__link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`/blog/${extractFromDraft(p.content)\n                    .title.split(\" \")\n                    .join(\"-\")}`}\n                >\n                  {extractFromDraft(p.content).title}\n                </a>\n              </div>\n            ))}\n          </div>\n        </div>\n    )\n}\n\nexport default PostBlock;","import React from \"react\";\nimport {\n  RawDraftContentState,\n  RawDraftContentBlock\n} from \"draft-js\";\nimport { BlogType } from \"./Blog\";\nimport PostBlock from \"./PostBlock\";\n\ntype Props = {\n  posts: BlogType[];\n};\n\nexport const extractFromDraft = (content: string) => {\n  const draft: RawDraftContentState = JSON.parse(content);\n  const { blocks } = draft;\n  const blocksWithText = blocks.filter(\n    (b: RawDraftContentBlock) => b.text.length\n  );\n  const title = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"header-one\"\n  )[0];\n  const p = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"unstyled\"\n  )[0];\n\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data[\"src\"] : null;\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl\n  };\n};\nconst Jumbotron = (props: Props) => {\n  if (!props.posts[0]) {\n    return <div></div>;\n  }\n\n  return (\n    <div\n      className=\"jumbotron\"\n      style={{\n        backgroundImage: `url(${extractFromDraft(props.posts[0].content).url})`\n      }}\n    >\n      <div className=\"jumbotron__overlay\">\n        <div className=\"jumbotron__post\">\n          <h1 className=\"jumbotron__title\">\n            {extractFromDraft(props.posts[0].content).title}\n          </h1>\n          <p className=\"jumbotron__text\">\n            {extractFromDraft(props.posts[0].content).p.substring(0, 200)}...\n          </p>\n          <a\n            href={`/blog/${extractFromDraft(props.posts[0].content)\n              .title.split(\" \")\n              .join(\"-\")}`}\n            className=\"jumbotron__button\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Read more\n          </a>\n        </div>\n        <PostBlock posts={props.posts} />\n      </div>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RawDraftContentBlock, RawDraftContentState } from \"draft-js\";\nimport { BlogType } from \"./Blog\";\n\nconst timeIcon = require(\"../assets/icons/time-3.svg\");\nconst iconUser = require(\"../assets/icons/user.svg\");\nconst iconBubble = require(\"../assets/icons/bubble.svg\");\n\n\n\ninterface PostProps {\n  post: BlogType;\n};\nexport const formatDate = (date: string) =>\nnew Intl.DateTimeFormat(\"en-us\", {\n  year: \"numeric\",\n  month: \"short\",\n  day: \"2-digit\"\n}).format(new Date(date));\nconst CardPost = (props: PostProps) => {\n  const {\n    post,\n    post: { content }\n  } = props;\n\n  const draft: RawDraftContentState = JSON.parse(content);\n  const { blocks } = draft;\n  const blocksWithText = blocks.filter(\n    (b: RawDraftContentBlock) => b.text.length\n  );\n  const title = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"header-one\"\n  )[0];\n  const p = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"unstyled\"\n  )[0];\n  const imgUrl: string = draft.entityMap[0]\n    ? draft.entityMap[0].data[\"src\"]\n    : null;\n\n  return (\n    <div className=\"card__post\">\n      <section className=\"card__post__section\">\n        <div className=\"card__post__content\">\n          <h2>{title.text}</h2>\n          <div className=\"card__post__header\">\n            <span className=\"card__post__icon\">\n              <img src={timeIcon} alt=\"clock icon\" />\n              <strong>\n                <time dateTime=\"2019-09-12\" itemProp={post.createdAt}>\n                  {formatDate(post.createdAt)}\n                </time>\n              </strong>\n            </span>\n            <span className=\"card__post__icon\">\n              <img src={iconUser} alt=\"user icon\" />\n              <strong>{post.author}</strong>\n            </span>\n            <span className=\"card__post__icon\">\n              <img src={iconBubble} alt=\"comment icon\" />\n              <strong>{post.comments.length === 0 ? 'No' : post.comments.length} Comments</strong>\n            </span>\n          </div>\n          <div className=\"card__post__items\">\n            <p>\n              {p.text.substring(0, 380) + \"... \"}\n              <Link to={`/blog/${title.text.split(\" \").join(\"-\")}`}>\n                read more\n              </Link>\n            </p>\n            {imgUrl && (\n              <div className=\"card__post__image\">\n                <img\n                  className=\"card__post__image\"\n                  src={imgUrl}\n                  alt={title.text}\n                />\n              </div>\n            )}\n          </div>\n          <ul className=\"card__post__tags\">\n            {/*         Tags:\n            {post.tags.map(tag => (\n              <li key={tag}>\n                <a href=\"/\">{tag}</a>\n              </li>\n            ))} */}\n          </ul>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default CardPost;\n","import React from \"react\";\nimport CardPost from \"./CardPost\";\nimport { BlogType } from \"./Blog\";\n\ntype Props = {\n  posts: BlogType[];\n};\nconst BlogBody = (props: Props) => {\n  const { posts } = props;\n  if (posts.length < 1) {\n    return (\n      <div className=\"blog\">\n        <div className=\"blog__empty\">\n          <div>You don't have any post in your blog!</div>\n          <div>You can create new posts through your <a className=\"blog__empty__link\" href=\"/dashboard/create\">Dashboard</a>.</div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"blog\">\n      <div className=\"blog__posts\">\n        {posts.map(post => (\n          <CardPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BlogBody;\n","import React, { Fragment, useContext } from \"react\";\nimport Jumbotron from \"./Jumbotron\";\nimport BlogBody from \"./BlogBody\";\nimport Nav from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nexport interface IComment {\n  _id: string;\n  comment: string;\n  post: string;\n  commenter: string;\n  email: string;\n  createdAt: string;\n}\nexport interface BlogType {\n  id: string;\n  content: string;\n  author: string;\n  createdAt: string;\n  updatedAt: string;\n  comments: IComment[]\n}\n\nconst Blog = () => {\n  const {\n    data: { blogs }\n  } = useContext(DataContext);\n\n  return (\n    <Fragment>\n      <Nav />\n      <Jumbotron posts={blogs} />\n      <BlogBody posts={blogs} />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Blog;\n","import React, { useState, useContext, FormEvent } from \"react\";\nimport Button from \"./Button\";\nimport { DataContext } from \"../contexts/dataContext\";\n\ninterface CommentForm {\n  closeForm: () => void;\n  postId: string;\n}\n\ninterface State {\n  commenter: string;\n  email: string;\n  comment: string;\n  post: string;\n}\n\nconst AddComment = (props: CommentForm) => {\n  const [state, setState] = useState<State>({\n    commenter: \"\",\n    email: \"\",\n    comment: \"\",\n    post: props.postId\n  });\n  const { dataService } = useContext(DataContext);\n\n  const handleChange = (e: FormEvent) => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    try {\n      dataService.addComment(state);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const { closeForm } = props;\n  const { commenter, email, comment } = state;\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <div className=\"form__group\">\n        <label className=\"form__label\" htmlFor=\"commentor\">\n          Name\n        </label>\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          name=\"commenter\"\n          value={commenter}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form__group\">\n        <label className=\"form__label\" htmlFor=\"email\">\n          Email\n        </label>\n        <input\n          className=\"form__input\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form__group\">\n        <label className=\"form__label\" htmlFor=\"comment\">\n          Comment\n        </label>\n        <textarea\n          className=\"form__textarea\"\n          name=\"comment\"\n          value={comment}\n          onChange={handleChange}\n          rows={10}\n          cols={14}\n        />\n      </div>\n      <div className=\"form__button\">\n        <Button text=\"Cancel\" handleClick={closeForm} />\n        <Button text=\"ADD\" />\n      </div>\n    </form>\n  );\n};\n\nexport default AddComment;\n","import React, { useState } from \"react\";\nimport { IComment } from \"./Blog\";\nimport { formatDate } from \"./CardPost\";\nimport Button from \"./Button\";\nimport AddComment from \"./AddComment\";\n\ninterface Props {\n  comments: IComment[];\n  postId: string;\n}\n\nexport const formatTime = (date: string) =>\n  new Intl.DateTimeFormat(\"en-us\", {\n    hour: \"numeric\",\n    minute: \"numeric\"\n  }).format(new Date(date));\n\n\nconst Comment = (props: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleToggle = () => setIsOpen(!isOpen);\n  return (\n    <div className=\"comment\">\n      <div className=\"comment__board\">\n        <h3>Comments</h3>\n        {!isOpen && <Button text=\"ADD\" handleClick={handleToggle} />}\n      </div>\n      {isOpen && <AddComment closeForm={handleToggle} postId={props.postId} />}\n      {props.comments.length > 0 &&\n        props.comments.map((comment: IComment) => (\n          <div className=\"comment__card\">\n            <div className=\"comment__body\" key={comment._id}>\n              <div className=\"comment__title\">\n                <strong>{comment.commenter}</strong>\n                <div>\n                  {formatDate(comment.createdAt)}\n                  {\",  \" + formatTime(comment.createdAt)}\n                </div>\n              </div>\n              <p className=\"comment__text\">{comment.comment}</p>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"loading\" >Loading</div>\n    )\n}\n\nexport default Loading;","import React, { Fragment, useContext } from \"react\";\nimport Nav from \"./Navbar\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport { convertFromRaw, EditorState, RawDraftContentState } from \"draft-js\";\nimport renderHTML from \"react-render-html\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { BlogType } from \"./Blog\";\nimport Comment from \"./Comment\";\nimport Loading from './Loading';\n\nconst Post = ({ match }: { match: any }) => {\n  const {\n    data: { blogs }\n  } = useContext(DataContext);\n  const {\n    params: { id }\n  } = match;\n  if (!id) {\n    return <div></div>;\n  }\n\n  const title: string = id.split(\"-\").join(\" \");\n  const post: BlogType = blogs.find((p: BlogType) => p.content.includes(title));\n\n  if (!post) {\n    return <Loading />\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content);\n\n  const content = convertFromRaw(rawDraft);\n  const editorState: EditorState = EditorState.createWithContent(content);\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent());\n\n  return (\n    <Fragment>\n      <div className=\"nav__wrapper\">\n        <Nav />\n      </div>\n      <main className=\"post\">\n        <article className=\"post__article\">\n          <header className=\"post__header\">\n            <p>\n              {\"By \"}\n              {post.author}\n              <time className=\"post__time\">\n                {\" . \"}\n                {new Intl.DateTimeFormat(\"en-us\", {\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"2-digit\"\n                }).format(new Date(post.createdAt))}\n              </time>{\" \"}\n            </p>\n          </header>\n          {renderHTML(editorContentHtml)}\n          <footer className=\"post__footer\">\n            <div className=\"post__social\">\n             {/*  <span className=\"post__social__title\">Share the blog post</span> */}\n              <div className=\"post__social__buttons\">\n                <div className=\"post__social__facebook\"></div>\n                <div className=\"post__social__linkedin\"></div>\n                <div className=\"post__social__twitter\"></div>\n              </div>\n            </div>\n          </footer>\n         {/*  {post.comments.length > 0 && */}\n        <Comment comments={post.comments} postId={post.id} />\n       {/*  } */}\n        </article>\n        \n{/*         <div className=\"related__posts\">\n          <h2 className=\"related__posts__title\">Related blog posts</h2>\n          <span className=\"related__posts--line\"></span>\n          <div className=\"related__posts__card\">\n            <ul className=\"related__posts__list\">\n              <li className=\"related__posts__items\">\n                <img\n                  className=\"related__posts--img\"\n                  src={require(`../assets/images/tech-image.jpg`)}\n                  alt=\"related post\"\n                />\n                <p className=\"related__posts--text\">{title}</p>\n              </li>\n            </ul>\n          </div>\n        </div> */}\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, FormEvent } from \"react\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Redirect } from \"react-router\";\nimport Button from \"./Button\";\n\ninterface InitialState {\n  email: string;\n  password: string;\n}\nconst initialState: InitialState = { email: \"\", password: \"\" };\n\nconst Login = () => {\n  const [state, setState] = useState<InitialState>(initialState);\n  const {\n    authService,\n    authState: { isLoggedIn }\n  } = useContext(AuthContext);\n\n  const { email, password } = state;\n\n  const handleChange = (e: FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    try {\n      await authService.signin(state);\n      return <Redirect to=\"/dashboard\" />;\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"login\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Username\"\n            value={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Login\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useEffect, MutableRefObject } from 'react';\n\nexport const useOnClickOutside = (ref: MutableRefObject<HTMLElement | null>,\n    cb: Function): void => {\n    useEffect(() => {\n        const listener = (event: MouseEvent) => {\n            if(!ref.current || ref.current.contains(event.target as Node)) {\n                return;\n            }\n            cb();\n        };\n        document.addEventListener('mousedown', listener);\n        return () => {\n            document.removeEventListener('mousedown', listener);\n        }\n    }, [ref, cb])\n}","import React, { useState, useContext, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { useOnClickOutside } from \"../../custom-hooks/useOnClickOutside\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { User } from \"../../reducers/dataReducer\";\n\nconst Nav = () => {\n  const [toggle, setToggle] = useState(false);\n  const { authService } = useContext(AuthContext);\n  const {\n    data: { users }\n  } = useContext(DataContext);\n\n  const user: User = users.filter(\n    (user: User) =>\n      user.firstName + \" \" + user.lastName === localStorage.getItem(\"user\")\n  )[0];\n  const avatarUrl = user\n    ? user.imageUrl\n    : require(\"../../assets/images/avatar.png\");\n\n  const handleToggle = () => setToggle(!toggle);\n  const handleLogout = () => {\n    authService.logout();\n  };\n\n  let ref = useRef<HTMLDivElement>(null);\n  useOnClickOutside(ref, () => setToggle(false));\n  const navList = () => (\n    <>\n      <div className=\"nav__list__group\">\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/profile\">Profile</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/gallery\">Gallery</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/posts\">Posts</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/create\">Create new</Link>\n      </div>\n      <div className=\"nav__list__logout\">\n        <li onClick={handleLogout}>Logout</li>\n      </div>\n    </>\n  );\n  return (\n    <div className=\"nav\">\n      <ul className=\"nav__list\">{navList()}</ul>\n      <div ref={ref} className=\"nav__icon\" onClick={handleToggle}>\n        <img className=\"nav__icon__image\" src={avatarUrl || require('../../assets/images/avatar.png')} alt=\"admin\" />\n        <ul\n          className={classNames({\n            nav__logout: true,\n            \"nav__logout-hide\": !toggle\n          })}\n        >\n          <li onClick={handleLogout}>Logout</li>\n        </ul>\n        <ul\n          className={classNames({\n            nav__menu: true,\n            \"nav__menu-hide\": !toggle\n          })}\n        >\n          {navList()}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { ReactNode } from \"react\";\nimport Nav from \"./Nav\";\n\n\nconst Dashboard = ({ children }: { children: ReactNode }) => {\n  return (\n    <div className=\"dashboard\">\n      <Nav />\n      {children}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react'\n\ninterface PicProps {\n    checked: boolean\n    imgUrl: string;\n    publicId: string;\n    handleClick: (publicId: string) => any;\n  }\n  \n  export const Picture = (props: PicProps) => {\n    const { imgUrl, publicId, handleClick, checked } = props;\n    return(\n      <div\n      className=\"picture\"\n      key={publicId}\n      onClick={handleClick(publicId)}\n      >\n         <img\n            className='picture__image'\n            src={imgUrl}\n            alt=\"pic\"\n          />\n           <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n      </div>\n         \n    )\n  }\n\n  export default Picture;","import React, { useContext, useState } from \"react\";\nimport Button from \"../Button\";\nimport Picture from \"./PictureChoice\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { IGallery } from \"../../reducers/dataReducer\";\n\ninterface Props {\n  withCb: boolean;\n  cb: (publicId: string) => void;\n}\n\nconst Gallery = (props: Props) => {\n  const {\n    data: { gallery },\n    dataDispatch,\n    dataService\n  } = useContext(DataContext);\n\n  const images = gallery.reduce((acc: any, curr: IGallery) => {\n    acc[curr.public_id] = false;\n    return acc;\n  }, []);\n\n  const [checkState, setCheckState] = useState(images);\n\n  const openWidget = () => {\n    (window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: [\"xmas\"]\n      },\n      (error: Error, result: any) => {\n        if (result.event === \"success\") {\n          dataDispatch({\n            type: \"ADD_GALLERY\",\n            payload: result.info\n          });\n        }\n      }\n    );\n  };\n\n  const handleClick = (publicId: string) => () => {\n    if (props.withCb) {\n      props.cb(publicId);\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId]\n    });\n  };\n\n  const checkList = gallery.reduce((acc: any, curr: IGallery) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id);\n    }\n    return acc;\n  }, []);\n  const handleDelete = () => {\n    dataService.removeImage(checkList[0]);\n  };\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? <div className=\"gallery__empty\">The gallery is empty!  <Button text=\"Add picture\" handleClick={openWidget} /> </div> :\n      <>\n      <div>\n        <Button text=\"Add\" handleClick={openWidget} />\n        {checkList[0] && (\n          <Button\n            text={checkList.length > 1 ? \"Delete all\" : \"Delete\"}\n            handleClick={handleDelete}\n          />\n        )}\n      </div>\n      \n      <div className=\"gallery__contents\">\n        {gallery.map((data: IGallery) => (\n          <Picture\n            checked={checkState[data.public_id]}\n            handleClick={handleClick}\n            key={data.public_id}\n            publicId={data.public_id}\n            imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n          />\n        ))}\n      </div>\n      </>\n}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useState, FormEvent, useContext } from \"react\";\nimport Button from \"../Button\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\ninterface InitialState {\n  fullname: string;\n  email: string;\n  imageUrl?: string;\n  bio: string;\n}\n\nconst Profile = () => {\n  const {\n    data: { users },\n    dataDispatch,\n    dataService\n  } = useContext(DataContext);\n  const { authState } = useContext(AuthContext);\n\n  const user = users.filter((user: any) => user._id === authState.id)[0];\n\n  const initialState: InitialState = {\n    email: user ? user.email : \"\",\n    fullname: user ? user.firstName + \" \" + user.lastName : \"\",\n    bio: user ? user.bio : \"\",\n    imageUrl: user ? user.imageUrl : \"\"\n  };\n  const [state, setState] = useState<InitialState>(initialState);\n\n  const handleChange = (e: FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const { fullname, email, bio, imageUrl } = state;\n  const imageId = imageUrl ? imageUrl.split(\"/\") : \"\";\n  const publicId = imageId.length ? imageId[imageId.length - 1].split(\".\")[0] : '';\n\n  const openWidget = () => {\n    (window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: \"dfjemz4f7\",\n        uploadPreset: \"no2bkme1\",\n        tags: [\"profile\"]\n      },\n      (error: Error, result: any) => {\n        if (result.event === \"success\") {\n          dataDispatch({\n            type: \"UPDATE_USER_IMAGE\",\n            payload: { userId: user._id, obj: { imageUrl: result.info.url } }\n          });\n          dataService.updateUser(\n            user._id,\n            {\n              imageUrl: result.info.url\n            },\n            publicId\n          );\n        }\n      }\n    );\n  };\n\n  const handleSubmit = () => {\n    dataService.updateUser(user._id, state);\n  };\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__content\">\n        <div className=\"profile__photo\">\n          <img\n            className=\"profile__img\"\n            src={\n              imageUrl ? imageUrl : require(`../../assets/images/avatar.png`)\n            }\n            height=\"200px\"\n            alt=\"avatar\"\n          />\n          <div className=\"profile__photo__overlay\">\n            <button className=\"profile__photo__edit\" onClick={openWidget}>\n              Change\n            </button>\n          </div>\n        </div>\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"fullname\">\n              Name\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"fullname\"\n              value={fullname}\n              onChange={handleChange}\n              placeholder=\"First name and Last Name\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"bio\">\n              About\n            </label>\n            <textarea\n              className=\"form__textarea\"\n              cols={12}\n              rows={9}\n              name=\"bio\"\n              value={bio}\n              onChange={handleChange}\n              placeholder=\"Biography\"\n            ></textarea>\n          </div>\n          <div className=\"form__button\">\n            <Button text=\"Save\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { ContentBlock } from \"draft-js\";\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n    switch (block.getType()) {\n      case \"blockquote\":\n        return \"RichEditor-blockquote\";\n      case \"unstyled\":\n        return \"RichEditor-paragraph\";\n      case \"CODE\":\n        return \"RichEditor-blockcode\";\n      case \"STRIKETHROUGH\":\n        return \"RichEditor-strikethrough\"\n      default:\n        return \"\";\n    }\n};","import React from \"react\";\nimport { BlockTypes } from \"./StyleTypes\";\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes;\n  active: string;\n  onToggle: (value: string) => void;\n}\nconst HeaderStyleDropdown = (props: HeaderStyleDropdownProps) => {\n  const { onToggle, active, headerOptions } = props;\n  const handleToggle = (event: any) => {\n    let value = event.target.value;\n    onToggle(value);\n  };\n  return (\n    <div className=\"RichEditor-headers\">\n      <select\n        className=\"RichEditor-headers-select\"\n        value={active}\n        onChange={handleToggle}\n      >\n          <option\n             className=\"RichEditor-headers-option\"\n             key='unstyled'\n             value='unstyled'\n          >Normal</option>\n        {headerOptions.map(heading => (\n          <option\n            className=\"RichEditor-headers-option\"\n            key={heading.label}\n            value={heading.style}\n          >\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default HeaderStyleDropdown;\n","import React, { MouseEvent } from 'react';\nimport classNames from 'classnames';\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js';\n\nexport interface StyleButtonProps {\n    active: boolean;\n    style: DraftBlockType | DraftInlineStyleType;\n    onToggle: (style: DraftBlockType | DraftInlineStyleType) => void;\n    label: string;\n}\n\nconst StyleButton = (props: StyleButtonProps) => {\n  const { active, style, onToggle, label } = props;\n  const handleToggle = (e: MouseEvent) => {\n    e.preventDefault();\n    onToggle(style);\n  };\n\n  return (\n    <span\n      className={classNames(\"RichEditor-styleButton\", {\n        [`RichEditor-styleButton-${label}`]: true,\n        \"RichEditor-activeButton\": active\n      })}\n      onMouseDown={handleToggle}\n    >\n    <img className=\"RichEditor-styleButton-icon\" src={require(`../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  );\n};\n\nexport default StyleButton;","import React, { Fragment } from \"react\";\nimport {\n  EditorState,\n  DraftBlockType,\n  DraftInlineStyleType\n} from \"draft-js\";\nimport HeaderStyleDropdown from \"./HeaderStyleDropdown\";\nimport StyleButton from \"./StyleButton\";\n\nexport interface BlockType {\n  label: string;\n  style: DraftBlockType;\n  type: string;\n}\n\nexport type BlockTypes = BlockType[];\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: \"Bold\", style: \"BOLD\", type: \"INLINE_TYPE\" },\n  { label: \"Italic\", style: \"ITALIC\", type: \"INLINE_TYPE\" },\n  { label: \"Underline\", style: \"UNDERLINE\", type: \"INLINE_TYPE\" },\n  { label: \"UL\", style: \"unordered-list-item\", type: \"BLOCK_TYPE\" },\n  { label: \"OL\", style: \"ordered-list-item\", type: \"BLOCK_TYPE\" },\n  { label: \"Blockquote\", style: \"blockquote\", type: \"BLOCK_TYPE\" },\n  { label: \"CodeBlock\", style: \"code-block\", type: \"BLOCK_TYPE\" },\n  { label: \"Monospace\", style: \"CODE\", type: \"INLINE_TYPE\" },\n  { label: \"Strike\", style: \"STRIKETHROUGH\", type: \"INLINE_TYPE\"},\n  { label: \"Image\", style: \"image\", type: \"IMAGE\"},\n];\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: \"Heading 1\", style: \"header-one\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 2\", style: \"header-two\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 3\", style: \"header-three\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 4\", style: \"header-four\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 5\", style: \"header-five\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 6\", style: \"header-six\", type: \"BLOCK_TYPE\" }\n];\n\n\n\ninterface StyleTypesProps {\n  editorState: EditorState;\n  onToggleBlock: (style: DraftBlockType) => void;\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void;\n}\nconst StyleTypes = (props: StyleTypesProps) => {\n  const { editorState, onToggleBlock, onToggleInline } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <Fragment>\n      <HeaderStyleDropdown\n        headerOptions={BLOCK_TYPES_HEADING}\n        active={blockType}\n        onToggle={onToggleBlock}\n      />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={\n            type.type === \"BLOCK_TYPE\"\n              ? type.style === blockType\n              : currentStyle.has(type.style)\n          }\n          label={type.label}\n          onToggle={type.type === \"BLOCK_TYPE\" ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default StyleTypes;\n","import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose?: () => void;\n  children: ReactNode;\n}\nconst Modal = (props: Props) => {\n  const { handleClose, isOpen, children } = props;\n  return (\n    <div\n      className={classNames({\n        modal: true,\n        \"modal-isOpen\": isOpen\n      })}\n    >\n      <div className=\"modal__content\">\n        <div className=\"modal__close\" onClick={handleClose}>\n          &times;\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useRef } from \"react\";\nimport { EditorState, DraftBlockType, RichUtils } from \"draft-js\";\nimport classNames from \"classnames\";\nimport { useOnClickOutside } from \"../../custom-hooks/useOnClickOutside\";\nimport Button from \"../Button\";\nimport StyleTypes from \"./StyleTypes\";\nimport Modal from \"../Modal\";\nimport Gallery from \"./Gallery\";\n\ninterface ToolbarProps {\n  variant: string;\n  onAddImage: (publicId: string) => void;\n  editorState: EditorState;\n  handleChange: (editorState: EditorState) => void;\n  handleSave: (type: string) => any;\n}\nconst Toolbar = (props: ToolbarProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  const { editorState, handleChange, onAddImage, handleSave, variant } = props;\n\n  const handleCb = (publicId: string) => {\n    onAddImage(publicId);\n    setIsOpen(false);\n  };\n  const handleToggle = () => setToggle(!toggle);\n  const toggleBlockType = (blockType: DraftBlockType) => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = (style: DraftBlockType) => {\n    if (style === \"image\") {\n      setIsOpen(!isOpen);\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style));\n  };\n  const ref = useRef<HTMLDivElement>(null);\n  useOnClickOutside(ref, () => setIsOpen(false));\n  return (\n    <div ref={ref} className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes\n          editorState={editorState}\n          onToggleBlock={toggleBlockType}\n          onToggleInline={toggleInlineStyle}\n        />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={require(\"../../assets/icons/save.svg\")} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          \"toolbar__buttons-hide\": !toggle\n        })}\n      >\n        <Button text={variant} handleClick={handleSave(variant)} />\n      </div>\n      <Modal isOpen={isOpen} handleClose={() => setIsOpen(false)}>\n        <Gallery withCb={true} cb={handleCb} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js';\n\ninterface ImageProps {\n    src: string;\n}\ninterface MediaProps {\n    block: ContentBlock;\n    contentState: ContentState;\n}\nconst Image = (props: ImageProps) => {\n    if(!!props.src) {\n        return <img src={props.src} alt=\"upload to cloud\" />;\n    }\n    return null;\n}\nconst Media = (props: MediaProps) => {\n    const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0));\n    const { src } = entity.getData();\n    const type = entity.getType();\n\n    let media;\n\n    if(type === 'image') {\n        media = <Image src={src} />\n    }\n    return media;\n}\n\nexport default Media;","import { ContentBlock } from 'draft-js';\nimport Media from './Media';\n\nexport const mediaBlockRenderer = (block: ContentBlock) => {\n    if(block.getType() === 'atomic') {\n        return {\n            component: Media,\n            editable: false\n        }\n    }\n    return null;\n}","import React, { useState, KeyboardEvent, createRef, useContext } from \"react\";\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  convertToRaw,\n  AtomicBlockUtils,\n  convertFromRaw\n} from \"draft-js\";\nimport { getBlockStyle } from \"./getBlockStyle\";\nimport Toolbar from \"./Toolbar\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { mediaBlockRenderer } from \"./MediaBlockRenderer\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\ninterface EditorProps {\n  blogId?: any;\n}\nconst RichEditor = (props: EditorProps) => {\n  const { data, dataService } = useContext(DataContext);\n  const blogPost = props.blogId\n    ? data.blogs.filter((b: any) => b.id === props.blogId.id)[0]\n    : null;\n  const blogState: EditorState = blogPost\n    ? EditorState.createWithContent(\n        convertFromRaw(JSON.parse(blogPost.content))\n      )\n    : EditorState.createEmpty();\n\n  const [editorState, setEditorState] = useState<EditorState>(blogState);\n  const content = editorState.getCurrentContent();\n\n  const [editorContent, setEditorContent] = useState<string>(\n    JSON.stringify(convertToRaw(content))\n  );\n\n  const { authState } = useContext(AuthContext);\n  \n  let editor = createRef<Editor>();\n  const focusEditor = () => {\n    if (editor.current) {\n      editor.current.focus();\n    }\n  };\n  const handleChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n    setEditorContent(JSON.stringify(convertToRaw(content)));\n  };\n\n  const handleSave = (type: string) => () => {\n    if(type === 'Publish') {\n      dataService.createNewPost({\n        content: editorContent,\n        author: authState.user\n      });\n    } else {\n      dataService.updatePost(props.blogId.id, editorContent);\n    }\n  };\n\n  const handleKeyCommand = (\n    command: DraftEditorCommand,\n    editorState: EditorState\n  ) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleChange(newState);\n      return \"handled\";\n    } else {\n      return \"not-handled\";\n    }\n  };\n  const mapKeyToEditorCommand = (e: KeyboardEvent) => {\n    if (e.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4);\n      if (newEditorState !== editorState) {\n        handleChange(newEditorState);\n      }\n      return null;\n    }\n    return getDefaultKeyBinding(e);\n  };\n\n  const onAddImage = (publicId: string) => {\n    const urlValue = `https://res.cloudinary.com/dfjemz4f7/image/upload/${publicId}.jpg`;\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntitiy = contentState.createEntity(\n      \"image\",\n      \"IMMUTABLE\",\n      { src: urlValue }\n    );\n    const entityKey = contentStateWithEntitiy.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntitiy\n    });\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n    setTimeout(() => focusEditor(), 0);\n  };\n\n  let contentState = editorState.getCurrentContent();\n  let className = \"RichEditor-editor\";\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== \"unstyled\"\n    ) {\n      className += \" RichEditor-hidePlaceholder\";\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <div className=\"RichEditor\">\n        <Toolbar\n          variant={props.blogId ? 'Save' : 'Publish'}\n          onAddImage={onAddImage}\n          editorState={editorState}\n          handleChange={handleChange}\n          handleSave={handleSave}\n        />\n        <div className={className} onClick={focusEditor}>\n          <Editor\n            ref={editor}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={mediaBlockRenderer}\n            editorState={editorState}\n            handleKeyCommand={handleKeyCommand}\n            keyBindingFn={mapKeyToEditorCommand}\n            onChange={handleChange}\n            placeholder=\"Tell a story...\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RichEditor;\n","import React, { useContext } from \"react\";\nimport { IComment } from \"./Blog\";\nimport Button from \"./Button\";\nimport { DataContext } from \"../contexts/dataContext\";\n\ninterface Props {\n  comments: IComment[];\n}\nconst CommentList = (props: Props) => {\n    const { dataService } = useContext(DataContext);\n    const handleDelete = (commentId: string) => () => {\n        dataService.removeComment(commentId)\n    }\n  return (\n    <div className=\"comments\">\n      <table>\n        <thead>\n          <tr>\n            <th>Number</th>\n            <th>Comment</th>\n            <th>Commenter</th>\n            <th>Email</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.comments.map((comment: IComment, index: number) => (\n            <tr key={comment._id} >\n              <td>{index + 1}</td>\n              <td>{comment.comment}</td>\n              <td>{comment.commenter}</td>\n              <td>{comment.email}</td>\n              <td>\n                <Button text=\"Delete\" handleClick={handleDelete(comment._id)} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CommentList;\n","import React, { useContext, useState } from \"react\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport Button from \"../Button\";\nimport { BlogType, IComment } from \"../Blog\";\nimport { extractFromDraft } from \"../Jumbotron\";\nimport Modal from \"../Modal\";\nimport CommentList from \"../Comments\";\n\nconst Posts = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [comments, setComments] = useState<IComment[]>([\n    {\n      commenter: \"\",\n      email: \"\",\n      comment: \"\",\n      createdAt: \"\",\n      _id: \"\",\n      post: \"\"\n    }\n  ]);\n  const {\n    data: { blogs },\n    dataService\n  } = useContext(DataContext);\n  if (!blogs.length) {\n    return <div className=\"posts\">You don't have any post in your blog.</div>;\n  }\n\n  const handleClick = (blogId: string) => () => {\n    dataService.removePost(blogId);\n  };\n\n  const toggleModal = (commentList: IComment[]) => () => {\n    setComments(commentList);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"posts\">\n      <Modal isOpen={isOpen} handleClose={() => setIsOpen(!isOpen)}>\n        <CommentList comments={comments} />\n      </Modal>\n      <div className=\"posts-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Post</th>\n              <th>Title</th>\n              <th>Created</th>\n              <th>Updated</th>\n              <th>Comments</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {blogs.map((blog: BlogType, index: number) => (\n              <tr key={blog.id}>\n                <td>{index + 1}</td>\n                <td>\n                  <a\n                    href={`/blog/${extractFromDraft(blog.content)\n                      .title.split(\" \")\n                      .join(\"-\")}`}\n                  >\n                    {extractFromDraft(blog.content).title}\n                  </a>\n                </td>\n                <td>{new Date(blog.createdAt).toISOString().slice(0, 10)}</td>\n                <td>{new Date(blog.updatedAt).toISOString().slice(0, 10)}</td>\n                <td>\n                  <a href=\"/#\" onClick={toggleModal(blog.comments)}>\n                    {blog.comments.length}\n                  </a>\n                </td>\n                <td>\n                  <a href={`/dashboard/edit/${blog.id}`}>\n                    <Button text=\"Edit\" />\n                  </a>\n                </td>\n                <td>\n                  <Button text=\"Delete\" handleClick={handleClick(blog.id)} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useContext, useEffect } from \"react\";\nimport { Switch, Route, Redirect, match } from \"react-router-dom\";\nimport Biography from \"./Biography\";\nimport About from \"./About\";\nimport Blog from \"./Blog\";\nimport Post from \"./Post\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport Gallery from \"./Dashboard/Gallery\";\nimport Profile from \"./Dashboard/Profile\";\nimport RichEditor from \"./Dashboard/Editor\";\nimport Posts from \"./Dashboard/Posts\";\n\ninterface Props {\n  component: any;\n  path: string;\n}\nconst App = () => {\n  const {\n    authState: { isLoggedIn }\n  } = useContext(AuthContext);\n\n  const { dataService } = useContext(DataContext);\n\n  const fetchData = () => {\n    dataService.getPosts();\n    dataService.getGallery();\n    dataService.getUsers();\n  };\n  useEffect(() => {\n    fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const PrivateRoutes = ({ component: Comp, path, ...rest }: Props) => (\n    <Route\n      path={path}\n      render={props =>\n        isLoggedIn ? (\n          <Comp {...props} {...rest} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Biography} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/blog\" component={Blog} />\n        <Route\n          exact\n          path=\"/blog/:id\"\n          component={(props: any) => (props ? <Post {...props} /> : null)}\n        />\n        <PrivateRoutes\n          path=\"/dashboard\"\n          component={({ match: { url } }: { match: match }) => (\n            <Dashboard>\n              <Route path={`${url}/profile`} component={Profile} exact />\n              <Route path={`${url}/gallery`} component={Gallery} exact />\n              <Route path={`${url}/create`} component={RichEditor} exact />\n              <Route\n                path={`${url}/edit/:id`}\n                component={({ match }: { match: match }) => (\n                  <RichEditor blogId={match.params} />\n                )}\n                exact\n              />\n              <Route path={`${url}/posts`} component={Posts} exact />\n            </Dashboard>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"./contexts/authContext\";\nimport App from \"./components/App\";\nimport \"./styles/_main.scss\";\nimport { DataProvider } from \"./contexts/dataContext\";\n\nReactDOM.render(\n  <AuthProvider>\n    <DataProvider>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </DataProvider>\n  </AuthProvider>,\n  document.getElementById(\"root\")\n);\n","import { Dispatch } from \"react\";\nimport { customAxios, setAuthToken } from \"./customAxios\";\nimport { AuthAction, AuthState } from \"../reducers/authReducer\";\n\nexport const useAuthService = (\n  state: AuthState,\n  dispatch: Dispatch<AuthAction>\n) => {\n  const signup = (credentials: any) => {\n    customAxios\n      .post(\"/signup\", credentials)\n      .then(res => {\n        console.log(res.data)\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.firstName + ' ' + res.data.lastName);\n        localStorage.setItem(\"userId\", res.data.id);\n        setAuthToken(res.data.token);\n        dispatch({\n          type: \"SIGNIN_SUCCESS\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          payload: err.message\n        });\n      });\n  };\n  const signin = (credentials: any) => {\n    customAxios\n      .post(\"/login\", credentials, { withCredentials: true })\n      .then(res => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.firstName + ' ' + res.data.lastName);\n        localStorage.setItem(\"userId\", res.data.id);\n        setAuthToken(res.data.token);\n        console.log(res.data);\n        dispatch({\n          type: \"SIGNIN_SUCCESS\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          payload: err.message\n        });\n      });\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\");\n    dispatch({\n      type: \"LOGOUT_USER\"\n    });\n  };\n  return {\n    signup,\n    signin,\n    logout\n  };\n};\n","import { Dispatch } from 'react';\nimport axios from 'axios';\nimport { customAxios } from './customAxios';\nimport { DataState, DataAction } from '../reducers/dataReducer';\n\nexport interface CommentState { \n    commenter?: string, \n    email?: string, \n    comment: string \n}\n\nexport const useDataService = (state: DataState, dispatch: Dispatch<DataAction>) => {\n    const getPosts = () => {\n        customAxios.get('/posts')\n        .then(res => {\n             dispatch({\n                type: 'FETCH_POSTS',\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    };\n    const createNewPost = (newPost: {author: string, content: string }) => {\n         customAxios\n        .post('/posts', newPost)\n        .then(res => {\n            dispatch({\n                type: 'ADD_POST',\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    };\n    const updatePost = (blogId: string, content: string) => {\n        customAxios.put(`/posts/${blogId}`, { content: content })\n        .then(res => {\n            console.log(res.data)\n        })\n    };\n    const getUsers = () => {\n        customAxios.get('/users')\n        .then(res => {\n            dispatch({\n                type: 'FETCH_USERS',\n                payload: res.data\n            })\n        })\n    }\n    const updateUser = (objId: string, obj: any, publicId: string) => {\n        customAxios.put(`/users/${objId}`, { obj: obj, publicId: publicId } )\n        .then(res => {\n            dispatch({\n                type: 'UPDATE_USER',\n                payload: res.data\n            })\n        })\n    }\n    const removeImage = (publicId: string) => {\n        customAxios.delete(`/assets/${publicId}`)\n        .then(res => {\n            dispatch({\n                type: 'REMOVE_IMAGE',\n                payload: publicId\n            })\n        })\n    }\n    const removeAssets = (publicIds: string[]) => {\n        customAxios.post('/assets', publicIds)\n        .then(res => {\n            console.log(res.data)\n        })\n    }\n    const removePost = (blogId: string) => {\n        customAxios\n        .delete(`/posts/${blogId}`)\n        .then(res => {\n            dispatch({\n                type: 'REMOVE_POST',\n                payload: blogId\n            })\n        })\n    };\n    const addComment = (comment: CommentState) => {\n        customAxios\n        .post('/comments', comment)\n        .then(res => {\n            dispatch({\n                type: 'ADD_COMMENT',\n                payload: res.data\n            })\n        })\n        .catch((err: Error) => {\n            console.log(err)\n        })\n    };\n    const removeComment = (commentId: string) => {\n        customAxios\n        .delete(`/comments/${commentId}`)\n        .then(res => {\n            dispatch({\n                type: 'REMOVE_COMMENT',\n                payload: res.data\n            });\n        })\n        .catch((err: Error) => {\n            console.log(err)\n        })\n    };\n    const getGallery = () => {\n    axios\n      .get(`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/list/xmas.json`)\n      .then(res => {\n        dispatch({\n            type: 'FETCH_GALLERY',\n            payload: res.data.resources\n        })\n      })\n      .catch((err: Error) => {\n          console.log(err)\n      })\n    }\n    return {\n        getPosts,\n        getGallery,\n        createNewPost,\n        updatePost,\n        removePost,\n        getUsers,\n        updateUser,\n        removeAssets,\n        removeImage,\n        addComment,\n        removeComment\n    };\n};","module.exports = __webpack_public_path__ + \"static/media/avatar.41c9a2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";"],"sourceRoot":""}