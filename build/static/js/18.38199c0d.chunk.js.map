{"version":3,"sources":["components/Dashboard/HeaderStyleDropdown/HeaderStyleDropdown.tsx"],"names":["HeaderStyleDropdown","props","onToggle","active","headerOptions","className","value","onChange","event","target","key","map","heading","label","style"],"mappings":"wGAAA,+EAOO,SAASA,EAAoBC,GAA+C,IACzEC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,cAK1B,OACE,yBAAKC,UAAU,sBACb,4BAAQA,UAAU,4BAA4BC,MAAOH,EAAQI,SAN5C,SAACC,GACpB,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BJ,EAASI,KAKL,4BAAQD,UAAU,4BAA4BK,IAAI,WAAWJ,MAAM,YAAnE,UAGCF,EAAcO,KAAI,SAAAC,GAAO,OACxB,4BAAQP,UAAU,4BAA4BK,IAAKE,EAAQC,MAAOP,MAAOM,EAAQE,OAC9EF,EAAQC","file":"static/js/18.38199c0d.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react'\nimport { BlockTypes } from '../StyleTypes/StyleTypes'\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes\n  active: string\n  onToggle: (value: string) => void\n}\nexport function HeaderStyleDropdown(props: HeaderStyleDropdownProps): JSX.Element {\n  const { onToggle, active, headerOptions } = props\n  const handleToggle = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const value = event.target.value\n    onToggle(value)\n  }\n  return (\n    <div className=\"RichEditor-headers\">\n      <select className=\"RichEditor-headers-select\" value={active} onChange={handleToggle}>\n        <option className=\"RichEditor-headers-option\" key=\"unstyled\" value=\"unstyled\">\n          Normal\n        </option>\n        {headerOptions.map(heading => (\n          <option className=\"RichEditor-headers-option\" key={heading.label} value={heading.style}>\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n"],"sourceRoot":""}