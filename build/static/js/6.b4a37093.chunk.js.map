{"version":3,"sources":["components/Dashboard/Media/Media.tsx","components/Dashboard/MediaBlockRenderer/MediaBlockRenderer.tsx"],"names":["Image","props","src","alt","Media","entity","contentState","getEntity","block","getEntityAt","getData","type","getType","media","mediaBlockRenderer","component","editable"],"mappings":"yGAAA,iEAUA,SAASA,EAAMC,GACb,OAAMA,EAAMC,IACH,yBAAKA,IAAKD,EAAMC,IAAKC,IAAI,oBAE3B,KAEF,SAASC,EAAMH,GACpB,IAAMI,EAAyBJ,EAAMK,aAAaC,UAAUN,EAAMO,MAAMC,YAAY,IAC5EP,EAAQG,EAAOK,UAAfR,IACFS,EAAON,EAAOO,UAEhBC,EAAqB,qCAKzB,MAHa,UAATF,IACFE,EAAQ,kBAACb,EAAD,CAAOE,IAAKA,KAEfW,I,gCCzBT,sEAOO,SAASC,EAAmBN,GACjC,MAAwB,WAApBA,EAAMI,UACD,CACLG,UAAWX,QACXY,UAAU,GAGP","file":"static/js/6.b4a37093.chunk.js","sourcesContent":["import React from 'react'\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js'\n\ntype ImageProps = {\n  src: string\n}\ntype MediaProps = {\n  block: ContentBlock\n  contentState: ContentState\n}\nfunction Image(props: ImageProps): JSX.Element | null {\n  if (!!props.src) {\n    return <img src={props.src} alt=\"upload to cloud\" />\n  }\n  return null\n}\nexport function Media(props: MediaProps): JSX.Element {\n  const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0))\n  const { src } = entity.getData()\n  const type = entity.getType()\n\n  let media: JSX.Element = <></>\n\n  if (type === 'image') {\n    media = <Image src={src} />\n  }\n  return media\n}\n","import { ContentBlock } from 'draft-js'\nimport { Media } from '../Media/Media'\nimport { ReactNode } from 'react'\n\ntype MediaBlock = {\n  component: ReactNode\n  editable: boolean\n}\nexport function mediaBlockRenderer(block: ContentBlock): MediaBlock | null {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false,\n    }\n  }\n  return null\n}\n"],"sourceRoot":""}