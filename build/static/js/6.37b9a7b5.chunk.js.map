{"version":3,"sources":["components/Button/index.tsx","Helper/index.ts","../node_modules/classnames/index.js","components/Modal/index.tsx","assets/icons/linkedin-2.svg","assets/icons/time-3.svg","assets/icons/user.svg","assets/icons/bubble.svg","components/Subscription/index.tsx","components/Navbar/index.tsx","components/Footer/index.tsx","components/Layout/index.tsx","components/PostBlock/index.tsx","components/CardPost/index.tsx","components/Jumbotron/index.tsx","components/BlogBody/index.tsx","components/Blog/index.tsx"],"names":["Button","text","handleClick","type","className","onClick","formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","length","title","p","imgUrl","entityMap","data","url","formatDateAndTime","second","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","modalRoot","document","createElement","Modal","props","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","Subscription","handleToggle","useState","state","setState","shake","setShake","errorMsg","setErrorMsg","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","console","log","setTimeout","Nav","React","toggle","setToggle","isLoggedIn","useContext","AuthContext","authState","navbar__menu","navbar__menu__change","id","navbar__items","show","to","href","rel","src","LinkedinIcon","alt","Footer","isOpen","setIsOpen","role","Layout","style","position","height","minHeight","display","flexDirection","BlockCard","createdAt","split","PostBlock","sortPosts","DataContext","blogs","slice","map","CardIcon","post","fullName","user","firstName","lastName","comment","comments","time","dateTime","itemProp","IconBubble","IconUser","TimeIcon","CardPost","substring","Jumbotron","backgroundImage","BlogBody","Blog"],"mappings":"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","file":"static/js/6.37b9a7b5.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ButtonProps {\n    text: string;\n    handleClick?: () => void;\n}\nconst Button: React.FC<ButtonProps> = ({ text, handleClick }) => {    \n    return(\n        <button type=\"submit\" className=\"button\" onClick={handleClick} >{text}</button>\n    );\n};\n\nexport default Button;","import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot = document.createElement('portal')\nfunction Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n\nexport default Modal\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport Button from '../Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\ntype Props = {\n  handleToggle: () => void\n}\nconst Subscription: React.FC<Props> = ({ handleToggle }) => {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = () => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('*Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = () => {\n    if (emailValidation(state)) {\n      setTimeout(() => {\n        handleToggle()\n      }, 500)\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription\">\n      <h2>Subscription</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Subscription\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useContext } from 'react'\nimport classNames from 'classnames'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\n\nfunction Nav(): JSX.Element {\n  const [toggle, setToggle] = React.useState<boolean>(false)\n  const handleToggle = (): void => setToggle(!toggle)\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n  return (\n    <div className=\"navbar\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle,\n        })}\n        onClick={handleToggle}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          navbar__items: true,\n          show: !toggle,\n        })}\n      >\n        <ul className=\"navbar__items__list\">\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/about\">About</NavLink>\n          <NavLink to=\"/blog\">Blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n          <li className=\"navbar__social\">\n            <a\n              className=\"navbar__social__link\"\n              href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport Modal from '../Modal'\nimport Subscription from '../Subscription'\n\nfunction Footer(): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__subtitle\">\n        site by{' '}\n        <a\n          className=\"footer__subtitle__link\"\n          href=\"https://github.com/mnajjarian\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          mahdi najjarian\n        </a>\n      </div>\n      <span className=\"footer__subscribe\" role=\"button\" onClick={toggleModal}>\n        subscribe\n      </span>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Subscription handleToggle={toggleModal} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { ReactNode } from 'react'\nimport Nav from '../Navbar'\nimport Footer from '../Footer'\n\ntype Props = {\n  children: ReactNode\n}\nconst Layout = ({ children }: Props): JSX.Element => (\n  <div\n    style={{\n      position: 'relative',\n      height: '100%',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n  >\n    <Nav />\n    {children}\n    <Footer />\n  </div>\n)\n\nexport default Layout\n","import React, { useContext } from 'react'\nimport { BlogType } from '../Blog'\nimport { extractFromDraft, formatDateAndTime } from '../../Helper'\nimport { DataContext } from 'contexts/dataContext'\n\ninterface Props {\n  posts: BlogType[]\n}\ntype BlockType = {\n  block: BlogType\n}\nfunction BlockCard({ block }: BlockType): JSX.Element {\n  return (\n    <div key={block.id} className=\"block__items\">\n      <time className=\"block__time\">{formatDateAndTime(block.createdAt)}</time>\n      <a\n        className=\"block__link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={`/blog/${extractFromDraft(block.content)\n          .title.split(' ')\n          .join('-')}`}\n      >\n        {extractFromDraft(block.content).title}\n      </a>\n    </div>\n  )\n}\n\nfunction PostBlock(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  const sortPosts = blogs.slice(1)\n  return (\n    <div className=\"block\">\n      <h2 className=\"block__title\">Latest Posts</h2>\n      <div className=\"block__content\">\n        {sortPosts.map((block: BlogType) => (\n          <BlockCard key={block.id} block={block} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PostBlock\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { RawDraftContentBlock, RawDraftContentState } from 'draft-js'\nimport { BlogType } from '../Blog'\nimport TimeIcon from '../../assets/icons/time-3.svg'\nimport IconUser from '../../assets/icons/user.svg'\nimport IconBubble from '../../assets/icons/bubble.svg'\nimport { formatDate } from '../../Helper'\n\ntype PostProps = {\n  post: BlogType\n  type?: string\n}\n\nfunction CardIcon({ post, type }: PostProps): JSX.Element {\n  const fullName = post.user.firstName + ' ' + post.user.lastName\n  const comment = post.comments.length === 0 ? 'No Comments' : post.comments.length + ' Comments'\n  const time = (\n    <time dateTime=\"2019-09-12\" itemProp={post.createdAt}>\n      {formatDate(post.createdAt)}\n    </time>\n  )\n  return (\n    <span className=\"card__post__icon\">\n      <img src={type === 'comment' ? IconBubble : type === 'user' ? IconUser : TimeIcon} alt=\"comment icon\" />\n      <strong>{type === 'comment' ? comment : type === 'user' ? fullName : time}</strong>\n    </span>\n  )\n}\n\nfunction CardPost(props: PostProps): JSX.Element {\n  const {\n    post,\n    post: { content },\n  } = props\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl: string = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n\n  return (\n    <div className=\"card__post\">\n      <section className=\"card__post__section\">\n        <div className=\"card__post__content\">\n          <h2>{title.text}</h2>\n          <div className=\"card__post__header\">\n            <CardIcon post={post} type=\"time\" />\n            <CardIcon post={post} type=\"user\" />\n            <CardIcon post={post} type=\"comment\" />\n          </div>\n          <div className=\"card__post__items\">\n            <p>\n              {p.text.substring(0, 380) + '... '}\n              <Link to={`/blog/${title.text.split(' ').join('-')}`}>read more</Link>\n            </p>\n            {imgUrl && (\n              <div className=\"card__post__image\">\n                <img className=\"card__post__image\" src={imgUrl} alt={title.text} />\n              </div>\n            )}\n          </div>\n          <ul className=\"card__post__tags\">\n            {/*         Tags:\n            {post.tags.map(tag => (\n              <li key={tag}>\n                <a href=\"/\">{tag}</a>\n              </li>\n            ))} */}\n          </ul>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default CardPost\n","import React, { useContext } from 'react'\nimport PostBlock from '../PostBlock'\nimport { extractFromDraft } from '../../Helper'\nimport { DataContext } from 'contexts/dataContext'\n\nfunction Jumbotron(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  if (!blogs[0]) {\n    return <div></div>\n  }\n\n  return (\n    <div\n      className=\"jumbotron\"\n      style={{\n        backgroundImage: `url(${extractFromDraft(blogs[0].content).url})`,\n      }}\n    >\n      <div className=\"jumbotron__overlay\">\n        <div className=\"jumbotron__post\">\n          <h1 className=\"jumbotron__title\">{extractFromDraft(blogs[0].content).title}</h1>\n          <p className=\"jumbotron__text\">{extractFromDraft(blogs[0].content).p.substring(0, 200)}...</p>\n          <a\n            href={`/blog/${extractFromDraft(blogs[0].content)\n              .title.split(' ')\n              .join('-')}`}\n            className=\"jumbotron__button\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Read more\n          </a>\n        </div>\n        {blogs.length > 1 && <PostBlock />}\n      </div>\n    </div>\n  )\n}\n\nexport default Jumbotron\n","import React, { useContext } from 'react'\nimport CardPost from '../CardPost'\nimport { BlogType } from '../Blog'\nimport { DataContext } from 'contexts/dataContext'\n\nfunction BlogBody(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  if (!blogs.length) {\n    return (\n      <div className=\"blog\">\n        <div className=\"blog__empty\">\n          <div>There is nothing here!</div>\n          <div>\n            You can create new post through your{' '}\n            <a className=\"blog__empty__link\" href=\"/dashboard/create\">\n              Dashboard\n            </a>\n            .\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className=\"blog\">\n      <div className=\"blog__posts\">\n        {blogs.map((post: BlogType) => (\n          <CardPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default BlogBody\n","import React, { useContext } from 'react'\nimport Jumbotron from '../Jumbotron'\nimport BlogBody from '../BlogBody'\nimport { DataContext } from '../../contexts/dataContext'\nimport { User } from 'reducers/dataReducer'\nimport Layout from '../Layout'\n\nexport interface CommentInterface {\n  _id: string\n  comment: string\n  post: string\n  commenter: string\n  email: string\n  createdAt: string\n}\nexport interface BlogType {\n  id: string\n  content: string\n  user: User\n  createdAt: string\n  updatedAt: string\n  comments: CommentInterface[]\n}\n\nfunction Blog(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n\n  if (!blogs.length) {\n    return <div></div>\n  }\n  return (\n    <Layout>\n      <Jumbotron />\n      <BlogBody />\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}