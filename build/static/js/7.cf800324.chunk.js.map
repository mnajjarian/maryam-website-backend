{"version":3,"sources":["components/Button/index.tsx","Helper/index.ts","../node_modules/classnames/index.js","components/Modal/index.tsx","assets/icons/linkedin-2.svg","assets/icons/facebook-2.svg","assets/icons/twitter-2.svg","components/Subscription/index.tsx","components/Navbar/index.tsx","components/Footer/index.tsx","components/Layout/index.tsx","components/AddComment/index.tsx","components/Comment/index.tsx","components/Loading/index.tsx","components/Post/index.tsx"],"names":["Button","text","handleClick","type","className","onClick","formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","length","title","p","imgUrl","entityMap","data","url","formatDateAndTime","second","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","modalRoot","document","createElement","Modal","props","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","Subscription","handleToggle","useState","state","setState","shake","setShake","errorMsg","setErrorMsg","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","console","log","setTimeout","Nav","React","toggle","setToggle","isLoggedIn","useContext","AuthContext","authState","navbar__menu","navbar__menu__change","id","navbar__items","show","to","href","rel","src","LinkedinIcon","alt","Footer","isOpen","setIsOpen","role","Layout","style","position","height","minHeight","display","flexDirection","AddComment","commenter","comment","post","postId","dataService","DataContext","handleChange","onSubmit","preventDefault","addComment","error","htmlFor","rows","cols","CommentCard","item","createdAt","Comment","comments","map","_id","closeForm","Loading","Post","blogs","params","split","find","includes","rawDraft","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","user","firstName","lastName","renderHTML","FacebookIcon","TwitterIcon"],"mappings":"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","file":"static/js/7.cf800324.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ButtonProps {\n    text: string;\n    handleClick?: () => void;\n}\nconst Button: React.FC<ButtonProps> = ({ text, handleClick }) => {    \n    return(\n        <button type=\"submit\" className=\"button\" onClick={handleClick} >{text}</button>\n    );\n};\n\nexport default Button;","import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot = document.createElement('portal')\nfunction Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n\nexport default Modal\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.bfe75be2.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.cb645bcf.svg\";","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport Button from '../Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\ntype Props = {\n  handleToggle: () => void\n}\nconst Subscription: React.FC<Props> = ({ handleToggle }) => {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = () => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('*Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = () => {\n    if (emailValidation(state)) {\n      setTimeout(() => {\n        handleToggle()\n      }, 500)\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription\">\n      <h2>Subscription</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Subscription\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useContext } from 'react'\nimport classNames from 'classnames'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\n\nfunction Nav(): JSX.Element {\n  const [toggle, setToggle] = React.useState<boolean>(false)\n  const handleToggle = (): void => setToggle(!toggle)\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n  return (\n    <div className=\"navbar\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle,\n        })}\n        onClick={handleToggle}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          navbar__items: true,\n          show: !toggle,\n        })}\n      >\n        <ul className=\"navbar__items__list\">\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/about\">About</NavLink>\n          <NavLink to=\"/blog\">Blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n          <li className=\"navbar__social\">\n            <a\n              className=\"navbar__social__link\"\n              href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport Modal from '../Modal'\nimport Subscription from '../Subscription'\n\nfunction Footer(): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__subtitle\">\n        site by{' '}\n        <a\n          className=\"footer__subtitle__link\"\n          href=\"https://github.com/mnajjarian\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          mahdi najjarian\n        </a>\n      </div>\n      <span className=\"footer__subscribe\" role=\"button\" onClick={toggleModal}>\n        subscribe\n      </span>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Subscription handleToggle={toggleModal} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { ReactNode } from 'react'\nimport Nav from '../Navbar'\nimport Footer from '../Footer'\n\ntype Props = {\n  children: ReactNode\n}\nconst Layout = ({ children }: Props): JSX.Element => (\n  <div\n    style={{\n      position: 'relative',\n      height: '100%',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n  >\n    <Nav />\n    {children}\n    <Footer />\n  </div>\n)\n\nexport default Layout\n","import React, { useState, useContext, FormEvent, ChangeEvent } from 'react'\nimport Button from '../Button'\nimport { DataContext } from '../../contexts/dataContext'\n\ninterface CommentForm {\n  closeForm: () => void\n  postId: string\n}\n\ninterface State {\n  commenter: string\n  email: string\n  comment: string\n  post: string\n}\n\nconst AddComment = (props: CommentForm) => {\n  const [state, setState] = useState<State>({\n    commenter: '',\n    email: '',\n    comment: '',\n    post: props.postId,\n  })\n  const { dataService } = useContext(DataContext)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    try {\n      dataService.addComment(state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const { commenter, email, comment } = state\n  return (\n    <div className=\"comments\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input className=\"form__input\" type=\"text\" name=\"commenter\" value={commenter} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={7}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n          {/*           <Button text=\"Cancel\" handleClick={closeForm} /> */}\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddComment\n","import React, { useState } from 'react'\nimport { CommentInterface } from '../Blog'\nimport { formatDate, formatTime } from '../../Helper'\nimport AddComment from '../AddComment'\n\ntype Props = {\n  comments: CommentInterface[]\n  postId: string\n}\n\nfunction Comment(props: Props): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleToggle = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"comment\">\n      {props.comments.length ? <p className=\"comment__header\">Comments</p> : ''}\n      {props.comments.length > 0 &&\n        props.comments.map((comment: CommentInterface) => <CommentCard key={comment._id} item={comment} />)}\n      <AddComment closeForm={handleToggle} postId={props.postId} />\n    </div>\n  )\n}\n\nexport default Comment\n\nfunction CommentCard(props: { item: CommentInterface }): JSX.Element {\n  const { comment, commenter, createdAt } = props.item\n  return (\n    <div className=\"comment__card\">\n      <div className=\"comment__body\">\n        <div className=\"comment__title\">\n          <strong>{commenter}</strong>\n          <div className=\"comment__date\">\n            {formatDate(createdAt)}\n            {',  ' + formatTime(createdAt)}\n          </div>\n        </div>\n        <p className=\"comment__text\">{comment}</p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nfunction Loading(): JSX.Element {\n  return <div className=\"loading\">Loading</div>\n}\n\nexport default Loading\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../contexts/dataContext'\nimport { convertFromRaw, EditorState, RawDraftContentState } from 'draft-js'\nimport renderHTML from 'react-render-html'\nimport { stateToHTML } from 'draft-js-export-html'\nimport { BlogType } from '../Blog'\nimport Comment from '../Comment'\nimport Loading from '../Loading'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\nimport FacebookIcon from '../../assets/icons/facebook-2.svg'\nimport TwitterIcon from '../../assets/icons/twitter-2.svg'\nimport Layout from 'components/Layout'\n\ntype Match = {\n  match: {\n    params: {\n      id: string\n    }\n  }\n}\nfunction Post({ match }: Match): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  const {\n    params: { id },\n  } = match\n  if (!id) {\n    return <div></div>\n  }\n\n  const title: string = id.split('-').join(' ')\n  const post: BlogType = blogs.find((p: BlogType) => p.content.includes(title))\n\n  if (!post) {\n    return <Loading />\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content)\n\n  const content = convertFromRaw(rawDraft)\n  const editorState: EditorState = EditorState.createWithContent(content)\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent())\n\n  return (\n    <Layout>\n      <main className=\"post\">\n        <article className=\"post__article\">\n          <header className=\"post__header\">\n            <p>\n              {'By '}\n              <strong>{post.user.firstName + ' ' + post.user.lastName}</strong>\n              <time className=\"post__time\">\n                {' '}\n                {new Intl.DateTimeFormat('en-us', {\n                  year: 'numeric',\n                  month: 'long',\n                  day: '2-digit',\n                }).format(new Date(post.createdAt))}\n              </time>\n            </p>\n          </header>\n          {renderHTML(editorContentHtml)}\n          <footer className=\"post__footer\">\n            <div className=\"post__social\">\n              <div className=\"post__social__buttons \">\n                <div className=\"post__social__facebook\">\n                  <img src={FacebookIcon} alt=\"facebook\" />\n                </div>\n                <div className=\"post__social__linkedin\">\n                  <img src={LinkedinIcon} alt=\"linkedin\" />\n                </div>\n                <div className=\"post__social__twitter\">\n                  <img src={TwitterIcon} alt=\"twitter\" />\n                </div>\n              </div>\n            </div>\n          </footer>\n          <Comment comments={post.comments} postId={post.id} />\n        </article>\n      </main>\n    </Layout>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}