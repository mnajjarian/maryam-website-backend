{"version":3,"sources":["assets/icons/linkedin-4.svg","assets/icons/facebook-2.svg","assets/icons/twitter-2.svg","pages/Post/AddComment/AddComment.tsx","pages/Post/Comment/Comment.tsx","pages/Post/Post.tsx","components/Loading/Loading.tsx"],"names":["module","exports","AddComment","props","useState","commenter","email","comment","post","postId","state","setState","dataDispatch","useContext","DataContext","dataService","DataServices","handleChange","e","target","name","value","className","onSubmit","preventDefault","addComment","error","console","log","htmlFor","type","onChange","rows","cols","Button","text","Comment","isOpen","setIsOpen","comments","length","map","CommentCard","key","_id","item","closeForm","createdAt","formatDate","formatTime","Post","match","blogs","data","id","params","title","split","join","find","p","content","includes","Loading","rawDraft","JSON","parse","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","Layout","user","firstName","lastName","renderHTML","href","rel","src","FacebookIcon","alt","LinkedinIcon","TwitterIcon"],"mappings":"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","file":"static/js/40.6a745530.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","import React, { useState, useContext, FormEvent, ChangeEvent } from 'react'\nimport { Button } from '../../../components/Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { DataServices } from 'services/dataService'\n\ninterface CommentForm {\n  closeForm: () => void\n  postId: string\n}\n\ninterface State {\n  commenter: string\n  email: string\n  comment: string\n  post: string\n}\n\nexport function AddComment(props: CommentForm): JSX.Element {\n  const [state, setState] = useState<State>({\n    commenter: '',\n    email: '',\n    comment: '',\n    post: props.postId,\n  })\n  const { dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n    try {\n      dataService.addComment(state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const { commenter, email, comment } = state\n  return (\n    <div className=\"comment__form\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input className=\"form__input\" type=\"text\" name=\"commenter\" value={commenter} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={3}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n          {/*           <Button text=\"Cancel\" handleClick={closeForm} /> */}\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { CommentInterface } from '../../Blog/Blog'\nimport { formatDate, formatTime } from '../../../Helper'\nimport { AddComment } from '../AddComment/AddComment'\n\ntype Props = {\n  comments: CommentInterface[]\n  postId: string\n}\n\nexport function Comment(props: Props): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleToggle = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"comment\">\n      {props.comments.length ? <p className=\"comment__header\">Comments</p> : ''}\n      {props.comments.length > 0 &&\n        props.comments.map((comment: CommentInterface) => <CommentCard key={comment._id} item={comment} />)}\n      <AddComment closeForm={handleToggle} postId={props.postId} />\n    </div>\n  )\n}\n\nfunction CommentCard(props: { item: CommentInterface }): JSX.Element {\n  const { comment, commenter, createdAt } = props.item\n  return (\n    <div className=\"comment__card\">\n      <div className=\"comment__body\">\n        <div className=\"comment__title\">\n          <strong>{commenter}</strong>\n          <div className=\"comment__date\">\n            {formatDate(createdAt)}\n            &nbsp;{formatTime(createdAt)}\n          </div>\n        </div>\n        <p className=\"comment__text\">{comment}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../contexts/dataContext'\nimport { convertFromRaw, EditorState, RawDraftContentState } from 'draft-js'\nimport renderHTML from 'react-render-html'\nimport { stateToHTML } from 'draft-js-export-html'\nimport { BlogType } from '../Blog/Blog'\nimport { Comment } from './Comment/Comment'\nimport Loading from '../../components/Loading/Loading'\nimport LinkedinIcon from '../../assets/icons/linkedin-4.svg'\nimport FacebookIcon from '../../assets/icons/facebook-2.svg'\nimport TwitterIcon from '../../assets/icons/twitter-2.svg'\nimport { Layout } from '../../components/Layout/Layout'\nimport { formatDate } from 'Helper'\n\nexport function Post({ match }: any): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  const {\n    params: { id },\n  } = match\n  if (!id) {\n    return <div></div>\n  }\n\n  const title: string = id.split('-').join(' ')\n  const post: BlogType | undefined = blogs.find((p: BlogType) => p.content.includes(title))\n\n  if (!post) {\n    return <Loading />\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content)\n\n  const content = convertFromRaw(rawDraft)\n  const editorState: EditorState = EditorState.createWithContent(content)\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent())\n\n  return (\n    <Layout>\n      <div className=\"post row\">\n        <h1 className=\"post__title\">{title}</h1>\n        <div className=\"col-md-8\">\n          <p className=\"post__info\">\n            Published&nbsp;\n            <time>{formatDate(post.createdAt)}</time>\n            &nbsp;|&nbsp;By&nbsp;{post.user.firstName + ' ' + post.user.lastName}\n          </p>\n          <div className=\"post__content \">{renderHTML(editorContentHtml)}</div>\n\n          <div className=\"post__social\">\n            <a\n              href={`https://www.facebook.com/sharer/sharer.php?u=https://maryamtavakkoli.com/blog/${id}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"post__social__icon\"\n            >\n              <img src={FacebookIcon} alt=\"facebook\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.linkedin.com/shareArticle?mini=true&url=https://maryamtavakkoli.com/blog/${id}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={LinkedinIcon} alt=\"linkedin\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.twitter.com/intent/tweet?url=https://maryamtavakkoli.com/blog/${id}&text=${title}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={TwitterIcon} alt=\"twitter\" />\n            </a>\n          </div>\n          <span className=\"post__line\"></span>\n          <Comment comments={post.comments} postId={post.id} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React from 'react'\n\nfunction Loading(): JSX.Element {\n  return <div className=\"loading\">Loading</div>\n}\n\nexport default Loading\n"],"sourceRoot":""}