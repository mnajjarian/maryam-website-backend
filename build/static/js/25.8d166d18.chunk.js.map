{"version":3,"sources":["Helper/index.ts","assets/icons/time-3.svg","assets/icons/user.svg","assets/icons/bubble.svg","components/CardPost/CardPost.tsx","components/BlogBody/BlogBody.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","formatDateAndTime","second","module","exports","CardIcon","post","fullName","user","firstName","lastName","comment","comments","time","dateTime","itemProp","createdAt","className","src","IconBubble","IconUser","TimeIcon","alt","CardPost","props","substring","to","split","join","BlogBody","blogs","useContext","DataContext","map","key","id","href"],"mappings":"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","file":"static/js/25.8d166d18.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { RawDraftContentBlock, RawDraftContentState } from 'draft-js'\nimport { BlogType } from '../Blog/Blog'\nimport TimeIcon from '../../assets/icons/time-3.svg'\nimport IconUser from '../../assets/icons/user.svg'\nimport IconBubble from '../../assets/icons/bubble.svg'\nimport { formatDate } from '../../Helper'\n\ntype PostProps = {\n  post: BlogType\n  type?: string\n}\n\nfunction CardIcon({ post, type }: PostProps): JSX.Element {\n  const fullName = post.user.firstName + ' ' + post.user.lastName\n  const comment = post.comments.length === 0 ? 'No Comments' : post.comments.length + ' Comments'\n  const time = (\n    <time dateTime=\"2019-09-12\" itemProp={post.createdAt}>\n      {formatDate(post.createdAt)}\n    </time>\n  )\n  return (\n    <span className=\"card__post__icon\">\n      <img src={type === 'comment' ? IconBubble : type === 'user' ? IconUser : TimeIcon} alt=\"comment icon\" />\n      <strong>{type === 'comment' ? comment : type === 'user' ? fullName : time}</strong>\n    </span>\n  )\n}\n\nexport function CardPost(props: PostProps): JSX.Element {\n  const {\n    post,\n    post: { content },\n  } = props\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl: string = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n\n  return (\n    <div className=\"card__post\">\n      <section className=\"card__post__section\">\n        <div className=\"card__post__content\">\n          <h2>{title.text}</h2>\n          <div className=\"card__post__header\">\n            <CardIcon post={post} type=\"time\" />\n            <CardIcon post={post} type=\"user\" />\n            <CardIcon post={post} type=\"comment\" />\n          </div>\n          <div className=\"card__post__items\">\n            <p>\n              {p.text.substring(0, 380) + '... '}\n              <Link to={`/blog/${title.text.split(' ').join('-')}`}>read more</Link>\n            </p>\n            {imgUrl && (\n              <div className=\"card__post__image\">\n                <img className=\"card__post__image\" src={imgUrl} alt={title.text} />\n              </div>\n            )}\n          </div>\n          <ul className=\"card__post__tags\">\n            {/*         Tags:\n            {post.tags.map(tag => (\n              <li key={tag}>\n                <a href=\"/\">{tag}</a>\n              </li>\n            ))} */}\n          </ul>\n        </div>\n      </section>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CardPost } from '../CardPost/CardPost'\nimport { BlogType } from '../Blog/Blog'\nimport { DataContext } from 'contexts/dataContext'\n\nexport function BlogBody(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  if (!blogs.length) {\n    return (\n      <div className=\"blog\">\n        <div className=\"blog__empty\">\n          <div>There is nothing here!</div>\n          <div>\n            You can create new post through your{' '}\n            <a className=\"blog__empty__link\" href=\"/dashboard/create\">\n              Dashboard\n            </a>\n            .\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"blog\">\n      <div className=\"blog__posts\">\n        {blogs.map((post: BlogType) => (\n          <CardPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}