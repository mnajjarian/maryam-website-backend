{"version":3,"sources":["assets/icons/save.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/clock-thin.svg","assets/icons/comment.svg","assets/icons/iconCheck.svg","reducers/authReducer.ts","services/customAxios.ts","contexts/authContext.tsx","components/PostBlock.tsx","components/Jumbotron.tsx","components/CardPost.tsx","components/BlogBody.tsx","components/Navbar.tsx","components/Modal.tsx","components/Button.tsx","Helper/index.ts","components/Subscription.tsx","components/Footer.tsx","reducers/dataReducer.ts","contexts/dataContext.tsx","components/Blog.tsx","components/AddComment.tsx","components/Comment.tsx","components/Loading.tsx","components/Post.tsx","components/Login.tsx","custom-hooks/useOnClickOutside.ts","components/Dashboard/Nav.tsx","components/Dashboard/Dashboard.tsx","components/Dashboard/PictureChoice.tsx","components/Dashboard/Gallery.tsx","components/Dashboard/Profile.tsx","components/Dashboard/getBlockStyle.ts","components/Dashboard/HeaderStyleDropdown.tsx","components/Dashboard/StyleButton.tsx","components/Dashboard/StyleTypes.tsx","components/Dashboard/Toolbar.tsx","components/Dashboard/Media.tsx","components/Dashboard/MediaBlockRenderer.tsx","components/Dashboard/Editor.tsx","components/Table.tsx","components/Comments.tsx","components/Dashboard/Posts.tsx","components/LatestPost.tsx","components/Header.tsx","components/Section.tsx","components/About.tsx","components/App.tsx","serviceWorker.ts","index.tsx","services/authService.ts","services/dataService.ts","assets/icons/linkedin-2.svg","assets/images/avatar.png","assets/icons/facebook-2.svg","assets/icons/twitter-2.svg","assets/icons/time-3.svg","assets/icons/user.svg","assets/icons/bubble.svg"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialAuthState","isLoggedIn","authReducer","state","action","type","error","payload","auth","customAxios","axios","create","withCredentials","baseURL","AuthContext","createContext","PostBlock","props","sortPosts","posts","slice","className","p","key","date","createdAt","Intl","DateTimeFormat","day","month","year","hour","minute","second","format","Date","target","rel","href","extractFromDraft","content","title","split","join","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","imgUrl","entityMap","data","url","Jumbotron","style","backgroundImage","substring","timeIcon","require","iconUser","iconBubble","formatDate","CardPost","post","src","alt","dateTime","itemProp","user","firstName","lastName","comments","to","BlogBody","Nav","React","useState","toggle","setToggle","useContext","authState","classNames","navbar__menu","navbar__menu__change","onClick","show","Modal","handleClose","isOpen","children","modal","height","width","background","Button","handleClick","emailValidation","email","match","Subscription","handleToggle","setState","shake","setShake","errorMsg","setErrorMsg","subscription__error","subscription__shake","name","placeholder","onChange","value","onBlur","console","log","setTimeout","Footer","setIsOpen","initialDataState","isFetched","blogs","users","gallery","dataReducer","_id","userId","userToUpdate","imageUrl","obj","sort","a","Number","concat","blog","img","public_id","postBlog","comment","DataContext","Blog","AddComment","commenter","postId","dataService","handleChange","onSubmit","preventDefault","addComment","htmlFor","rows","cols","Comment","closeForm","Loading","Post","params","find","includes","rawDraft","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","renderHTML","initialState","username","password","Login","authService","handleSubmit","signin","alert","message","useOnClickOutside","ref","cb","useEffect","listener","event","current","contains","document","addEventListener","removeEventListener","history","useHistory","avatarUrl","handleLogout","logout","push","useRef","navList","nav__logout","nav__menu","Dashboard","Picture","publicId","checked","readOnly","Gallery","dataDispatch","images","reduce","acc","curr","checkState","setCheckState","openWidget","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","result","info","withCb","checkList","removeImage","Profile","bio","imageId","secure_url","updateUser","getBlockStyle","block","getType","HeaderStyleDropdown","onToggle","active","headerOptions","heading","label","StyleButton","onMouseDown","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","onToggleBlock","onToggleInline","selection","getSelection","blockType","getBlockForKey","getStartKey","currentStyle","getCurrentInlineStyle","has","Toolbar","onAddImage","handleSave","variant","RichUtils","toggleBlockType","toggleInlineStyle","toolbar__buttons","Image","Media","media","entity","contentState","getEntity","getEntityAt","getData","mediaBlockRenderer","component","editable","RichEditor","blogPost","blogId","blogState","createEmpty","setEditorState","stringify","convertToRaw","editorContent","setEditorContent","editor","createRef","focusEditor","focus","hasText","getBlockMap","first","urlValue","contentStateWithEntitiy","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","createNewPost","updatePost","blockStyleFn","blockRendererFn","handleKeyCommand","command","newState","keyBindingFn","keyCode","onTab","getDefaultKeyBinding","Table","heads","head","CommentList","index","commentId","removeComment","Posts","setComments","toISOString","updatedAt","commentList","toggleModal","confirm","removePost","LastPost","lastPosts","Header","fullName","Section","About","App","authenticate","getPosts","getGallery","getUsers","exact","path","Comp","rest","render","pathname","from","location","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","dispatch","useReducer","authDispatch","values","signup","credentials","res","err","get","response","Provider","resources","newPost","put","delete","objId","removeAssets","publicIds","getElementById","URL","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.606779aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","var map = {\n\t\"./Blockquote.svg\": 302,\n\t\"./Bold.svg\": 303,\n\t\"./CodeBlock.svg\": 304,\n\t\"./Image.svg\": 305,\n\t\"./Italic.svg\": 306,\n\t\"./Monospace.svg\": 307,\n\t\"./OL.svg\": 308,\n\t\"./Strike.svg\": 309,\n\t\"./UL.svg\": 310,\n\t\"./Underline.svg\": 311,\n\t\"./bubble.svg\": 96,\n\t\"./clock-thin.svg\": 312,\n\t\"./comment.svg\": 313,\n\t\"./facebook-2.svg\": 81,\n\t\"./iconCheck.svg\": 314,\n\t\"./linkedin-2.svg\": 46,\n\t\"./save.svg\": 148,\n\t\"./time-3.svg\": 94,\n\t\"./twitter-2.svg\": 82,\n\t\"./user.svg\": 95\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 301;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.808af9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","export interface AuthState {\n  isLoggedIn: boolean;\n  id?: string | null;\n  error?: string | null;\n}\nexport const initialAuthState: AuthState = {\n  isLoggedIn: false,\n};\n\nexport type AuthAction =\n  | { type: \"SIGNIN_SUCCESS\"; payload: { name: string; id: string, token: string } }\n  | { type: \"SIGNIN_ERROR\"; payload: string }\n  | { type: \"SIGNUP_ERROR\"; payload: string }\n  | { type: \"SET_ERRORS\"; payload: string }\n  | { type: \"SET_USER\"; payload: string }\n  | { type: \"SET_AUTH\"; payload: { auth: boolean } }\n  | { type: \"LOGOUT_USER\" };\n\nexport const authReducer = (state: AuthState = initialAuthState, action: AuthAction) => {\n  switch (action.type) {\n    case \"SIGNIN_ERROR\":\n    case \"SIGNUP_ERROR\":\n      return { ...state, error: action.payload };\n    case \"SIGNIN_SUCCESS\":\n      return {\n        ...state,\n        id: action.payload.id,\n        isLoggedIn: true,\n        error: null\n      };\n    case \"LOGOUT_USER\":\n      return { ...state, isLoggedIn: false, error: null };\n\n    case \"SET_AUTH\":\n      return { ...state, isLoggedIn: action.payload.auth }\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst baseURL = '/api'\n\nexport const customAxios = axios.create({\n    withCredentials: true,\n    baseURL\n})\n\nexport const setAuthToken = (token: string) => {\n    if(token) {\n        customAxios.defaults.headers.common.Authorization = `Bearer ${token}`\n    }\n}","import React, { ReactNode, createContext, useReducer } from 'react';\nimport { authReducer, initialAuthState } from \"../reducers/authReducer\";\nimport { useAuthService } from '../services/authService';\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\nexport const AuthContext = createContext({} as any);\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [authState, authDispatch] = useReducer(authReducer, initialAuthState);\n  const authService = useAuthService(authState, authDispatch);\n\n  const values = {\n    authState,\n    authDispatch,\n    authService,\n  };\n  return <AuthContext.Provider value={values}>{children}</AuthContext.Provider>\n};\n","import React from 'react'\nimport { BlogType } from './Blog'\nimport { extractFromDraft } from './Jumbotron';\n\nexport const formatDateAndTime = (date: string) =>\nnew Intl.DateTimeFormat(\"en-us\", {\n  day: \"numeric\",\n  month: \"numeric\",\n  year: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n  second: \"numeric\"\n}).format(new Date(date));\n\ninterface Props {\n    posts: BlogType[]\n}\nconst PostBlock = (props: Props) => {\n  const sortPosts = props.posts.slice(1);\n    return(\n        <div className=\"block\">\n          <h2 className=\"block__title\">Latest Posts</h2>\n          <div className=\"block__content\">\n            {sortPosts.map((p: BlogType) => (\n              <div key={p.id} className=\"block__items\">\n                <time className=\"block__time\">\n                  {formatDateAndTime(p.createdAt)}\n                </time>\n                <a\n                  className=\"block__link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`/blog/${extractFromDraft(p.content)\n                    .title.split(\" \")\n                    .join(\"-\")}`}\n                >\n                  {extractFromDraft(p.content).title}\n                </a>\n              </div>\n            ))}\n          </div>\n        </div>\n    )\n}\n\nexport default PostBlock;","import React from \"react\";\nimport { RawDraftContentState, RawDraftContentBlock } from \"draft-js\";\nimport { BlogType } from \"./Blog\";\nimport PostBlock from \"./PostBlock\";\n\ntype Props = {\n  posts: BlogType[];\n};\n\nexport const extractFromDraft = (content: string) => {\n  const draft: RawDraftContentState = JSON.parse(content);\n  const { blocks } = draft;\n  const blocksWithText = blocks.filter(\n    (b: RawDraftContentBlock) => b.text.length\n  );\n  const title = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"header-one\"\n  )[0];\n  const p = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"unstyled\"\n  )[0];\n\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data[\"src\"] : null;\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl\n  };\n};\nconst Jumbotron = (props: Props) => {\n  if (!props.posts[0]) {\n    return <div></div>;\n  }\n\n  return (\n    <div\n      className=\"jumbotron\"\n      style={{\n        backgroundImage: `url(${extractFromDraft(props.posts[0].content).url})`\n      }}\n    >\n      <div className=\"jumbotron__overlay\">\n        <div className=\"jumbotron__post\">\n          <h1 className=\"jumbotron__title\">\n            {extractFromDraft(props.posts[0].content).title}\n          </h1>\n          <p className=\"jumbotron__text\">\n            {extractFromDraft(props.posts[0].content).p.substring(0, 200)}...\n          </p>\n          <a\n            href={`/blog/${extractFromDraft(props.posts[0].content)\n              .title.split(\" \")\n              .join(\"-\")}`}\n            className=\"jumbotron__button\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Read more\n          </a>\n        </div>\n        {props.posts.length > 1 && <PostBlock posts={props.posts} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RawDraftContentBlock, RawDraftContentState } from \"draft-js\";\nimport { BlogType } from \"./Blog\";\n\nconst timeIcon = require(\"../assets/icons/time-3.svg\");\nconst iconUser = require(\"../assets/icons/user.svg\");\nconst iconBubble = require(\"../assets/icons/bubble.svg\");\n\ninterface PostProps {\n  post: BlogType;\n}\nexport const formatDate = (date: string) =>\n  new Intl.DateTimeFormat(\"en-us\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"2-digit\"\n  }).format(new Date(date));\nconst CardPost = (props: PostProps) => {\n  const {\n    post,\n    post: { content }\n  } = props;\n  const draft: RawDraftContentState = JSON.parse(content);\n  const { blocks } = draft;\n  const blocksWithText = blocks.filter(\n    (b: RawDraftContentBlock) => b.text.length\n  );\n  const title = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"header-one\"\n  )[0];\n  const p = blocksWithText.filter(\n    (b: RawDraftContentBlock) => b.type === \"unstyled\"\n  )[0];\n  const imgUrl: string = draft.entityMap[0]\n    ? draft.entityMap[0].data[\"src\"]\n    : null;\n\n  return (\n    <div className=\"card__post\">\n      <section className=\"card__post__section\">\n        <div className=\"card__post__content\">\n          <h2>{title.text}</h2>\n          <div className=\"card__post__header\">\n            <span className=\"card__post__icon\">\n              <img src={timeIcon} alt=\"clock icon\" />\n              <strong>\n                <time dateTime=\"2019-09-12\" itemProp={post.createdAt}>\n                  {formatDate(post.createdAt)}\n                </time>\n              </strong>\n            </span>\n            <span className=\"card__post__icon\">\n              <img src={iconUser} alt=\"user icon\" />\n              <strong>{post.user.firstName + \" \" + post.user.lastName}</strong>\n            </span>\n            <span className=\"card__post__icon\">\n              <img src={iconBubble} alt=\"comment icon\" />\n              <strong>\n                {post.comments.length === 0 ? \"No\" : post.comments.length}{\" \"}\n                Comments\n              </strong>\n            </span>\n          </div>\n          <div className=\"card__post__items\">\n            <p>\n              {p.text.substring(0, 380) + \"... \"}\n              <Link to={`/blog/${title.text.split(\" \").join(\"-\")}`}>\n                read more\n              </Link>\n            </p>\n            {imgUrl && (\n              <div className=\"card__post__image\">\n                <img\n                  className=\"card__post__image\"\n                  src={imgUrl}\n                  alt={title.text}\n                />\n              </div>\n            )}\n          </div>\n          <ul className=\"card__post__tags\">\n            {/*         Tags:\n            {post.tags.map(tag => (\n              <li key={tag}>\n                <a href=\"/\">{tag}</a>\n              </li>\n            ))} */}\n          </ul>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default CardPost;\n","import React from \"react\";\nimport CardPost from \"./CardPost\";\nimport { BlogType } from \"./Blog\";\n\ntype Props = {\n  posts: BlogType[];\n};\nconst BlogBody: React.FC<Props> = ({ posts }) => {\n  \n  if (!posts.length) {\n    return (\n      <div className=\"blog\">\n        <div className=\"blog__empty\">\n          <div>There is nothing here!</div>\n          <div>You can create new post through your <a className=\"blog__empty__link\" href=\"/dashboard/create\">Dashboard</a>.</div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"blog\">\n      <div className=\"blog__posts\">\n        {posts.map(post => (\n          <CardPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BlogBody;\n","import React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/authContext\";\n\nconst Nav = () => {\n  const [toggle, setToggle] = React.useState<boolean>(false);\n  const { authState: { isLoggedIn } } = useContext(AuthContext);\n\n/*   useEffect(() => {\n    const nav = document.getElementById(\"nav\");\n    if (nav) {\n      const sticky = nav.offsetTop;\n      const scrollCallBack = window.addEventListener(\"scroll\", () => {\n        if (window.pageYOffset > sticky) {\n          nav.classList.add(\"sticky\");\n        } else {\n          nav.classList.remove(\"sticky\");\n        }\n      }) as any;\n       return () => \n        window.removeEventListener(\"scroll\", scrollCallBack) as any;\n   \n    }\n  }, []); */\n  return (\n    <div id=\"nav\" className=\"navbar sticky\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle\n        })}\n        onClick={() => setToggle(!toggle)}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          show: !toggle\n        })}\n      >\n        <ul className=\"navbar__list\" >\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/about\">About</NavLink>\n          <NavLink to=\"/blog\">Blog</NavLink>\n          {isLoggedIn &&\n          <NavLink to=\"/dashboard\">Dashboard</NavLink>\n          }\n           <li className=\"navbar__social\">\n          <a\n            className=\"navbar__social__link\"\n            href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <img className=\"navbar__social__icon\" src={require(\"../assets/icons/linkedin-2.svg\")} alt=\"icon\" />\n          </a>\n        </li>\n        </ul>\n       \n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose?: () => void;\n  children: ReactNode;\n}\nconst Modal = (props: Props) => {\n  const { handleClose, isOpen, children } = props;\n  return (\n    <div\n      className={classNames({\n        modal: true,\n        \"modal-isOpen\": isOpen\n      })}\n    >\n      <div className=\"modal__content\" style={{height: '60%', width: '70%', background: 'lightblue'}}>\n        <div className=\"modal__close\" onClick={handleClose}>\n          &times;\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\ninterface ButtonProps {\n    text: string;\n    handleClick?: () => void;\n}\nconst Button: React.FC<ButtonProps> = ({ text, handleClick }) => {    \n    return(\n        <button type=\"submit\" className=\"button\" onClick={handleClick} >{text}</button>\n    );\n};\n\nexport default Button;","export const emailValidation = (email: string) => email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)","import React, { useState, ChangeEvent } from \"react\";\nimport Button from \"./Button\";\nimport { emailValidation } from \"Helper\";\nimport classNames from 'classnames';\n\ntype Props = {\n  handleToggle: () => void;\n};\nconst Subscription: React.FC<Props> = ({ handleToggle }) => {\n  const [state, setState] = useState(\"\");\n  const [shake, setShake] = useState(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setState(e.target.value);\n   \n  };\n\n  const validateEmail = () => {\n      console.log('blur')\n    if(state.length > 0 && !emailValidation(state)) {\n        setErrorMsg('*Please enter a valid email address')\n    } else {\n        setErrorMsg(null)\n    }\n  }\n  const handleSubmit = () => {\n    if(emailValidation(state)) {\n        setTimeout(() => {\n            handleToggle();\n          }, 500);\n    } else {\n        setShake(true)\n        setTimeout(() => {setShake(false)},500)\n    }\n  };\n  return (\n    <div className=\"subscription\">\n      <h2>Subscription</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your\n        email below\n      </div>\n      <div className=\"form\">\n      <p className={classNames({\n          subscription__error: true,\n          subscription__shake: shake\n      })} >{errorMsg}</p>\n      <div className=\"form__group\" >\n        <input\n          className=\"form__input\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n          onChange={handleChange}\n          onBlur={validateEmail}\n        />\n        <Button text=\"submit\" handleClick={handleSubmit} />\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Subscription;\n","import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Subscription from \"./Subscription\";\n\nconst Footer = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  return(\n  <div className=\"footer\">\n    {/*     <section className=\"footer__section\">\n      <ul className=\"footer__section__link\">\n        <NavLink to=\"/\">Home</NavLink>\n        <NavLink to=\"/about\">About</NavLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n      </ul>\n    </section>\n     <section className=\"footer__section\">\n      <ul className=\"footer__section__list\">\n        <li className=\"footer__section__items\">\n          <a\n            className=\"footer__section__link\"\n            href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <img src={require(\"../assets/icons/linkedin-2.svg\")} alt=\"icon\" />\n          </a>\n        </li>\n        <li className=\"footer__section__items\">\n          <a\n            className=\"footer__section__link\"\n            href=\"https://www.facebook.com/maryam.tavakkoli.39566\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <img src={require(\"../assets/icons/facebook-2.svg\")} alt=\"icon\" />\n          </a>\n        </li>\n        <li className=\"footer__section__items\">\n          <a\n            className=\"footer__section__link\"\n            href=\"https://www.facebook.com/maryam.tavakkoli.39566\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <img src={require(\"../assets/icons/instagram-2.svg\")} alt=\"icon\" />\n          </a>\n        </li>\n      </ul>\n    </section> */}\n    <div className=\"footer__subtitle\">\n      site by{\" \"}\n      <a\n        className=\"footer__subtitle__link\"\n        href=\"https://github.com/mnajjarian\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        mahdi najjarian\n      </a>\n    </div>\n    <div className=\"footer__subscribe\">\n      <a className=\"footer__subscribe__link\" href=\"/#\" onClick={() => setIsOpen(!isOpen)}>\n        subscribe\n      </a>\n    </div>\n      <Modal isOpen={isOpen} handleClose={() => setIsOpen(!isOpen)}>\n        <Subscription handleToggle={() => setIsOpen(!isOpen)} />\n      </Modal>\n  </div>\n)};\n\nexport default Footer;\n","import { IComment } from \"../components/Blog\";\n\nexport interface User {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  bio: string;\n  imageUrl: string;\n  isAdmin: boolean;\n}\nexport interface Blog {\n  id: string;\n  content: string;\n  createdAt: string;\n  updatedAt: string;\n  comments: IComment[];\n  user: User;\n}\nexport interface DataState {\n  isFetched: boolean;\n  blogs: Blog[];\n  gallery: IGallery[];\n  users: User[];\n}\nexport interface IGallery {\n  created_at: string;\n  format: string;\n  height: number;\n  public_id: string;\n  type: string;\n  version: number;\n  width: number;\n}\nexport interface UserUpdateImage {\n  obj: {\n    imageUrl: string;\n  };\n  userId: string;\n}\nexport const initialDataState: DataState = {\n  isFetched: false,\n  blogs: [],\n  users: [],\n  gallery: []\n};\n\nexport type DataAction =\n  | { type: \"FETCH_USERS\"; payload: User[] }\n  | { type: \"UPDATE_USER\"; payload: any }\n  | { type: \"UPDATE_USER_IMAGE\"; payload: UserUpdateImage }\n  | { type: \"ADD_POST\"; payload: Blog }\n  | { type: \"EDIT_POST\"; payload: Blog }\n  | { type: \"REMOVE_POST\"; payload: string }\n  | { type: \"FETCH_POSTS\"; payload: Blog[] }\n  | { type: \"POSTS_FECHED\" }\n  | { type: \"FETCH_GALLERY\"; payload: IGallery[] }\n  | { type: \"ADD_GALLERY\"; payload: IGallery }\n  | { type: \"SET_AVATAR\"; payload: string }\n  | { type: \"REMOVE_IMAGE\"; payload: string }\n  | { type: \"ADD_COMMENT\"; payload: IComment }\n  | { type: \"REMOVE_COMMENT\"; payload: IComment };\n\nconst sortByDate = (obj: any) =>\n  obj.sort(\n    (a: any, b: any) =>\n      Number(new Date(b.createdAt)) - Number(new Date(a.createdAt))\n  );\n\nexport const dataReducer = (state: DataState, action: DataAction) => {\n  switch (action.type) {\n    case \"FETCH_USERS\":\n      return { ...state, users: action.payload };\n    case \"UPDATE_USER\":\n      return {\n        ...state,\n        users: state.users.map((user: User) =>\n          user._id !== action.payload.userId ? user : action.payload\n        )\n      };\n    case \"UPDATE_USER_IMAGE\":\n      let userToUpdate = state.users.filter(\n        (user: User) => user._id === action.payload.userId\n      )[0];\n      userToUpdate.imageUrl = action.payload.obj.imageUrl;\n      return {\n        ...state,\n        users: state.users.map((user: User) =>\n          user._id !== action.payload.userId ? user : userToUpdate\n        )\n      };\n    case \"FETCH_POSTS\":\n      return { ...state, blogs: sortByDate(action.payload) };\n    case \"POSTS_FECHED\":\n      return { ...state, isFetched: true };\n    case \"FETCH_GALLERY\":\n      return { ...state, gallery: action.payload };\n    case \"SET_AVATAR\":\n      return { ...state };\n    case \"ADD_GALLERY\":\n      return { ...state, gallery: state.gallery.concat(action.payload) };\n    case \"ADD_POST\":\n      return { ...state, blogs: state.blogs.concat(action.payload) };\n    case \"EDIT_POST\":\n      return {\n        ...state,\n        blogs: state.blogs.map(blog =>\n          blog.id !== action.payload.id ? blog : action.payload\n        )\n      };\n    case \"REMOVE_POST\":\n      return {\n        ...state,\n        blogs: state.blogs.filter((blog: Blog) => blog.id !== action.payload)\n      };\n    case \"REMOVE_IMAGE\":\n      return {\n        ...state,\n        gallery: state.gallery.filter(\n          (img: IGallery) => img.public_id !== action.payload\n        )\n      };\n    case \"ADD_COMMENT\":\n      const post = state.blogs.filter(\n        (b: Blog) => b.id === action.payload.post\n      )[0];\n      post.comments = post.comments.concat(action.payload);\n      return {\n        ...state,\n        blogs: state.blogs.map((blog: Blog) =>\n          blog.id === action.payload._id ? post : blog\n        )\n      };\n    case \"REMOVE_COMMENT\":\n      const postBlog = state.blogs.filter(\n        (b: Blog) => b.id === action.payload.post\n      )[0];\n      postBlog.comments = postBlog.comments.filter(\n        (comment: IComment) => comment._id !== action.payload._id\n      );\n      return {\n        ...state,\n        blogs: state.blogs.map((blog: Blog) =>\n          blog.id === action.payload.post ? postBlog : blog\n        )\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, createContext, ReactNode } from \"react\";\nimport { dataReducer, initialDataState } from \"../reducers/dataReducer\";\nimport { useDataService } from \"../services/dataService\";\n\ninterface DataProviderProps {\n  children: ReactNode;\n}\nexport const DataContext = createContext({} as any);\n\nexport const DataProvider = ({ children }: DataProviderProps) => {\n  const [data, dataDispatch] = useReducer(dataReducer, initialDataState);\n  const dataService = useDataService(data, dataDispatch);\n\n  const values = {\n    data,\n    dataDispatch,\n    dataService,\n  };\n  return <DataContext.Provider value={values}>{children}</DataContext.Provider>;\n};\n","import React, { Fragment, useContext } from \"react\";\nimport Jumbotron from \"./Jumbotron\";\nimport BlogBody from \"./BlogBody\";\nimport Nav from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport { User } from \"reducers/dataReducer\";\n\nexport interface IComment {\n  _id: string;\n  comment: string;\n  post: string;\n  commenter: string;\n  email: string;\n  createdAt: string;\n}\nexport interface BlogType {\n  id: string;\n  content: string;\n  user: User;\n  createdAt: string;\n  updatedAt: string;\n  comments: IComment[]\n}\n\nconst Blog = () => {\n  const {\n    data: { blogs }\n  } = useContext(DataContext);\n\n  if(!blogs.length) {\n    return <div></div>\n  }\n  return (\n    <Fragment>\n      <Nav />\n      <Jumbotron posts={blogs} />\n      <BlogBody posts={blogs} />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Blog;\n","import React, { useState, useContext, FormEvent, ChangeEvent } from \"react\";\nimport Button from \"./Button\";\nimport { DataContext } from \"../contexts/dataContext\";\n\ninterface CommentForm {\n  closeForm: () => void;\n  postId: string;\n}\n\ninterface State {\n  commenter: string;\n  email: string;\n  comment: string;\n  post: string;\n}\n\nconst AddComment = (props: CommentForm) => {\n  const [state, setState] = useState<State>({\n    commenter: \"\",\n    email: \"\",\n    comment: \"\",\n    post: props.postId\n  });\n  const { dataService } = useContext(DataContext);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    try {\n      dataService.addComment(state);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { commenter, email, comment } = state;\n  return (\n    <div className=\"comments\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"commenter\"\n            value={commenter}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={7}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n{/*           <Button text=\"Cancel\" handleClick={closeForm} /> */}\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddComment;\n","import React, { useState } from \"react\";\nimport { IComment } from \"./Blog\";\nimport { formatDate } from \"./CardPost\";\nimport AddComment from \"./AddComment\";\n\ninterface Props {\n  comments: IComment[];\n  postId: string;\n}\n\nexport const formatTime = (date: string) =>\n  new Intl.DateTimeFormat(\"en-us\", {\n    hour: \"numeric\",\n    minute: \"numeric\"\n  }).format(new Date(date));\n\nconst Comment = (props: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleToggle = () => setIsOpen(!isOpen);\n  return (\n    <div className=\"comment\">\n      {props.comments.length ? <p className=\"comment__header\">Comments</p> : \"\"}\n      {/*         {!isOpen && \n        <div className='comment__btn'>\n          <img onClick={handleToggle} src={require('../assets/icons/comment.svg')} alt=\"comment\" />\n        </div>\n        } */}\n\n      {props.comments.length > 0 &&\n        props.comments.map((comment: IComment) => (\n          <div className=\"comment__card\">\n            <div className=\"comment__body\" key={comment._id}>\n              <div className=\"comment__title\">\n                <strong>{comment.commenter}</strong>\n                <div className=\"comment__date\">\n                  {formatDate(comment.createdAt)}\n                  {\",  \" + formatTime(comment.createdAt)}\n                </div>\n              </div>\n              <p className=\"comment__text\">{comment.comment}</p>\n            </div>\n          </div>\n        ))}\n      <AddComment closeForm={handleToggle} postId={props.postId} />\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"loading\" >Loading</div>\n    )\n}\n\nexport default Loading;","import React, { Fragment, useContext } from \"react\";\nimport Nav from \"./Navbar\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport { convertFromRaw, EditorState, RawDraftContentState } from \"draft-js\";\nimport renderHTML from \"react-render-html\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { BlogType } from \"./Blog\";\nimport Comment from \"./Comment\";\nimport Loading from \"./Loading\";\n\nconst Post = ({ match }: { match: any }) => {\n  const {\n    data: { blogs }\n  } = useContext(DataContext);\n  const {\n    params: { id }\n  } = match;\n  if (!id) {\n    return <div></div>;\n  }\n\n  const title: string = id.split(\"-\").join(\" \");\n  const post: BlogType = blogs.find((p: BlogType) => p.content.includes(title));\n\n  if (!post) {\n    return <Loading />;\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content);\n\n  const content = convertFromRaw(rawDraft);\n  const editorState: EditorState = EditorState.createWithContent(content);\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent());\n\n  return (\n    <Fragment>\n      <div className=\"nav__wrapper\">\n        <Nav />\n      </div>\n      <main className=\"post\">\n        <article className=\"post__article\">\n          <header className=\"post__header\">\n            <p>\n              {\"By \"}\n              {post.user.firstName + \" \" + post.user.lastName}\n              <time className=\"post__time\">\n                {\" . \"}\n                {new Intl.DateTimeFormat(\"en-us\", {\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"2-digit\"\n                }).format(new Date(post.createdAt))}\n              </time>{\" \"}\n            </p>\n          </header>\n          {renderHTML(editorContentHtml)}\n          <footer className=\"post__footer\">\n            <div className=\"post__social\">\n              {/*  <span className=\"post__social__title\">Share the blog post</span> */}\n              <div className=\"post__social__buttons \">\n                <div className=\"post__social__facebook\">\n                  <img src={require('../assets/icons/facebook-2.svg')} alt='facebook' />\n                </div>\n                <div className=\"post__social__linkedin\">\n                <img src={require('../assets/icons/linkedin-2.svg')} alt='linkedin' />\n                </div>\n                <div className=\"post__social__twitter\">\n                <img src={require('../assets/icons/twitter-2.svg')} alt='twitter' />\n                </div>\n              </div>\n            </div>\n          </footer>\n          {/*  {post.comments.length > 0 && */}\n          <Comment comments={post.comments} postId={post.id} />\n          {/*  } */}\n        </article>\n\n        {/*         <div className=\"related__posts\">\n          <h2 className=\"related__posts__title\">Related blog posts</h2>\n          <span className=\"related__posts--line\"></span>\n          <div className=\"related__posts__card\">\n            <ul className=\"related__posts__list\">\n              <li className=\"related__posts__items\">\n                <img\n                  className=\"related__posts--img\"\n                  src={require(`../assets/images/tech-image.jpg`)}\n                  alt=\"related post\"\n                />\n                <p className=\"related__posts--text\">{title}</p>\n              </li>\n            </ul>\n          </div>\n        </div> */}\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, FormEvent, ChangeEvent } from \"react\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Redirect } from \"react-router\";\nimport Button from \"./Button\";\n\ninterface InitialState {\n  username: string;\n  password: string;\n}\nconst initialState: InitialState = { username: \"\", password: \"\" };\n\nconst Login = () => {\n  const [state, setState] = useState<InitialState>(initialState);\n  const {\n    authService,\n    authState: { isLoggedIn }\n  } = useContext(AuthContext);\n\n  const { username, password } = state;\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    try {\n      await authService.signin(state);\n      return <Redirect to=\"/dashboard\" />;\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"login\">\n      <h1>Please login to continue</h1>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Login\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useEffect, MutableRefObject } from 'react';\n\nexport const useOnClickOutside = (ref: MutableRefObject<HTMLElement | null>,\n    cb: Function): void => {\n    useEffect(() => {\n        const listener = (event: MouseEvent) => {\n            if(!ref.current || ref.current.contains(event.target as Node)) {\n                return;\n            }\n            cb();\n        };\n        document.addEventListener('mousedown', listener);\n        return () => {\n            document.removeEventListener('mousedown', listener);\n        }\n    }, [ref, cb])\n}","import React, { useState, useContext, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { useOnClickOutside } from \"../../custom-hooks/useOnClickOutside\";\nimport { DataContext } from \"../../contexts/dataContext\";\n//import { User } from \"../../reducers/dataReducer\";\n\nconst Nav = () => {\n  const [toggle, setToggle] = useState(false);\n  const { authService } = useContext(AuthContext);\n  const {\n    data: { users }\n  } = useContext(DataContext);\nconst history = useHistory()\n/*   const user: User = users.filter(\n    (user: User) =>\n      user.firstName + \" \" + user.lastName === localStorage.getItem(\"user\")\n  )[0]; */\n  const user = users[0]\n  const avatarUrl = user\n    ? user.imageUrl\n    : require(\"../../assets/images/avatar.png\");\n\n  const handleToggle = () => setToggle(!toggle);\n  const handleLogout = () => {\n    authService.logout();\n    history.push('/')\n  };\n\n  let ref = useRef<HTMLDivElement>(null);\n  useOnClickOutside(ref, () => setToggle(false));\n  const navList = () => (\n    <>\n      <div className=\"nav__list__group\">\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/profile\">Profile</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/gallery\">Gallery</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/posts\">Posts</Link>\n      </div>\n      <div className=\"nav__list__group\">\n        <Link to=\"/dashboard/create\">Create new</Link>\n      </div>\n      <div className=\"nav__list__logout\">\n        <li onClick={handleLogout}>Logout</li>\n      </div>\n    </>\n  );\n  return (\n    <div className=\"nav\">\n      <ul className=\"nav__list\">{navList()}</ul>\n      <div ref={ref} className=\"nav__icon\" onClick={handleToggle}>\n        <img className=\"nav__icon__image\" src={avatarUrl || require('../../assets/images/avatar.png')} alt=\"admin\" />\n        <ul\n          className={classNames({\n            nav__logout: true,\n            \"nav__logout-hide\": !toggle\n          })}\n        >\n          <li onClick={handleLogout}>Logout</li>\n        </ul>\n        <ul\n          className={classNames({\n            nav__menu: true,\n            \"nav__menu-hide\": !toggle\n          })}\n        >\n          {navList()}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { ReactNode } from \"react\";\nimport Nav from \"./Nav\";\n\n\nconst Dashboard = ({ children }: { children: ReactNode }) => {\n  return (\n    <div className=\"dashboard\">\n      <Nav />\n      {children}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react'\n\ninterface PicProps {\n    checked: boolean\n    imgUrl: string;\n    publicId: string;\n    handleClick: (publicId: string) => any;\n  }\n  \n  export const Picture = (props: PicProps) => {\n    const { imgUrl, publicId, handleClick, checked } = props;\n    return(\n      <div\n      className=\"picture\"\n      key={publicId}\n      onClick={handleClick(publicId)}\n      >\n         <img\n            className='picture__image'\n            src={imgUrl}\n            alt=\"pic\"\n          />\n           <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n      </div>\n         \n    )\n  }\n\n  export default Picture;","import React, { useContext, useState } from \"react\";\nimport Button from \"../Button\";\nimport Picture from \"./PictureChoice\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { IGallery } from \"../../reducers/dataReducer\";\n\ninterface Props {\n  withCb: boolean;\n  cb: (publicId: string) => void;\n}\n\nconst Gallery = (props: Props) => {\n  const {\n    data: { gallery },\n    dataDispatch,\n    dataService\n  } = useContext(DataContext);\n\n  const images = gallery.reduce((acc: any, curr: IGallery) => {\n    acc[curr.public_id] = false;\n    return acc;\n  }, []);\n\n  const [checkState, setCheckState] = useState(images);\n\n  const openWidget = () => {\n    (window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: [\"xmas\"]\n      },\n      (error: Error, result: any) => {\n        if (result.event === \"success\") {\n          dataDispatch({\n            type: \"ADD_GALLERY\",\n            payload: result.info\n          });\n        }\n      }\n    );\n  };\n\n  const handleClick = (publicId: string) => () => {\n    if (props.withCb) {\n      props.cb(publicId);\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId]\n    });\n  };\n\n  const checkList = gallery.reduce((acc: any, curr: IGallery) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id);\n    }\n    return acc;\n  }, []);\n  const handleDelete = () => {\n    dataService.removeImage(checkList[0]);\n  };\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? <div className=\"gallery__empty\">The gallery is empty!  <Button text=\"Add picture\" handleClick={openWidget} /> </div> :\n      <>\n      <div>\n        <Button text=\"Add\" handleClick={openWidget} />\n        {checkList[0] && (\n          <Button\n            text={checkList.length > 1 ? \"Delete all\" : \"Delete\"}\n            handleClick={handleDelete}\n          />\n        )}\n      </div>\n      \n      <div className=\"gallery__contents\">\n        {gallery.map((data: IGallery) => (\n          <Picture\n            checked={checkState[data.public_id]}\n            handleClick={handleClick}\n            key={data.public_id}\n            publicId={data.public_id}\n            imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n          />\n        ))}\n      </div>\n      </>\n}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useState, FormEvent, useContext } from \"react\";\nimport Button from \"../Button\";\nimport { DataContext } from \"../../contexts/dataContext\";\n\ninterface InitialState {\n  firstName: string;\n  lastName: string;\n  username: string;\n  imageUrl?: string;\n  title: string;\n  bio: string;\n}\n\nconst Profile = () => {\n  const {\n    data: { users },\n    dataDispatch,\n    dataService\n  } = useContext(DataContext);\n\n  //const user = users.filter((user: any) => user._id === authState.id)[0];\n  const user = users[0];\n\n  const initialState: InitialState = {\n    username: user ? user.username : \"\",\n    firstName: user ? user.firstName : \"\",\n    lastName: user ? user.lastName : \"\",\n    title: user ? user.title : \"\",\n    bio: user ? user.bio : \"\",\n    imageUrl: user ? user.imageUrl : \"\"\n  };\n  const [state, setState] = useState<InitialState>(initialState);\n\n  const handleChange = (e: FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const { firstName, lastName, username, title, bio, imageUrl } = state;\n  const imageId = imageUrl ? imageUrl.split(\"/\") : \"\";\n  const publicId = imageId.length ? imageId[imageId.length - 1].split(\".\")[0] : '';\n\n  const openWidget = () => {\n    (window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: [\"profile\"]\n      },\n      (error: Error, result: any) => {\n        if (result.event === \"success\") {\n          dataDispatch({\n            type: \"UPDATE_USER_IMAGE\",\n            payload: { userId: user._id, obj: { imageUrl: result.info.secure_url } }\n          });\n          dataService.updateUser(\n            user._id,\n            {\n              imageUrl: result.info.secure_url\n            },\n            publicId\n          );\n        }\n      }\n    );\n  };\n\n  const handleSubmit = () => {\n    dataService.updateUser(user._id, state);\n  };\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__content\">\n        <div className=\"profile__photo\">\n          <img\n            className=\"profile__img\"\n            src={\n              imageUrl ? imageUrl : require(`../../assets/images/avatar.png`)\n            }\n            height=\"200px\"\n            alt=\"avatar\"\n          />\n          <div className=\"profile__photo__overlay\">\n            <button className=\"profile__photo__edit\" onClick={openWidget}>\n              Change\n            </button>\n          </div>\n        </div>\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={handleChange}\n              placeholder=\"First name\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"lastName\">\n              Last Name\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={handleChange}\n              placeholder=\"Last Name\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"username\">\n              Email\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"title\">\n              Title\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n              placeholder=\"title\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"bio\">\n              About\n            </label>\n            <textarea\n              className=\"form__textarea\"\n              rows={6}\n              name=\"bio\"\n              value={bio}\n              onChange={handleChange}\n              placeholder=\"Biography\"\n            ></textarea>\n          </div>\n          <div className=\"form__button\">\n            <Button text=\"Save\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { ContentBlock } from \"draft-js\";\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n    switch (block.getType()) {\n      case \"blockquote\":\n        return \"RichEditor-blockquote\";\n      case \"unstyled\":\n        return \"RichEditor-paragraph\";\n      case \"CODE\":\n        return \"RichEditor-blockcode\";\n      case \"STRIKETHROUGH\":\n        return \"RichEditor-strikethrough\"\n      default:\n        return \"\";\n    }\n};","import React from \"react\";\nimport { BlockTypes } from \"./StyleTypes\";\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes;\n  active: string;\n  onToggle: (value: string) => void;\n}\nconst HeaderStyleDropdown = (props: HeaderStyleDropdownProps) => {\n  const { onToggle, active, headerOptions } = props;\n  const handleToggle = (event: any) => {\n    let value = event.target.value;\n    onToggle(value);\n  };\n  return (\n    <div className=\"RichEditor-headers\">\n      <select\n        className=\"RichEditor-headers-select\"\n        value={active}\n        onChange={handleToggle}\n      >\n          <option\n             className=\"RichEditor-headers-option\"\n             key='unstyled'\n             value='unstyled'\n          >Normal</option>\n        {headerOptions.map(heading => (\n          <option\n            className=\"RichEditor-headers-option\"\n            key={heading.label}\n            value={heading.style}\n          >\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default HeaderStyleDropdown;\n","import React, { MouseEvent } from 'react';\nimport classNames from 'classnames';\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js';\n\nexport interface StyleButtonProps {\n    active: boolean;\n    style: DraftBlockType | DraftInlineStyleType;\n    onToggle: (style: DraftBlockType | DraftInlineStyleType) => void;\n    label: string;\n}\n\nconst StyleButton = (props: StyleButtonProps) => {\n  const { active, style, onToggle, label } = props;\n  const handleToggle = (e: MouseEvent) => {\n    e.preventDefault();\n    onToggle(style);\n  };\n\n  return (\n    <span\n      className={classNames(\"RichEditor-styleButton\", {\n        [`RichEditor-styleButton-${label}`]: true,\n        \"RichEditor-activeButton\": active\n      })}\n      onMouseDown={handleToggle}\n    >\n    <img className=\"RichEditor-styleButton-icon\" src={require(`../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  );\n};\n\nexport default StyleButton;","import React, { Fragment } from \"react\";\nimport {\n  EditorState,\n  DraftBlockType,\n  DraftInlineStyleType\n} from \"draft-js\";\nimport HeaderStyleDropdown from \"./HeaderStyleDropdown\";\nimport StyleButton from \"./StyleButton\";\n\nexport interface BlockType {\n  label: string;\n  style: DraftBlockType;\n  type: string;\n}\n\nexport type BlockTypes = BlockType[];\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: \"Bold\", style: \"BOLD\", type: \"INLINE_TYPE\" },\n  { label: \"Italic\", style: \"ITALIC\", type: \"INLINE_TYPE\" },\n  { label: \"Underline\", style: \"UNDERLINE\", type: \"INLINE_TYPE\" },\n  { label: \"UL\", style: \"unordered-list-item\", type: \"BLOCK_TYPE\" },\n  { label: \"OL\", style: \"ordered-list-item\", type: \"BLOCK_TYPE\" },\n  { label: \"Blockquote\", style: \"blockquote\", type: \"BLOCK_TYPE\" },\n  { label: \"CodeBlock\", style: \"code-block\", type: \"BLOCK_TYPE\" },\n  { label: \"Monospace\", style: \"CODE\", type: \"INLINE_TYPE\" },\n  { label: \"Strike\", style: \"STRIKETHROUGH\", type: \"INLINE_TYPE\"},\n  { label: \"Image\", style: \"image\", type: \"IMAGE\"},\n];\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: \"Heading 1\", style: \"header-one\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 2\", style: \"header-two\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 3\", style: \"header-three\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 4\", style: \"header-four\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 5\", style: \"header-five\", type: \"BLOCK_TYPE\" },\n  { label: \"Heading 6\", style: \"header-six\", type: \"BLOCK_TYPE\" }\n];\n\n\n\ninterface StyleTypesProps {\n  editorState: EditorState;\n  onToggleBlock: (style: DraftBlockType) => void;\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void;\n}\nconst StyleTypes = (props: StyleTypesProps) => {\n  const { editorState, onToggleBlock, onToggleInline } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <Fragment>\n      <HeaderStyleDropdown\n        headerOptions={BLOCK_TYPES_HEADING}\n        active={blockType}\n        onToggle={onToggleBlock}\n      />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={\n            type.type === \"BLOCK_TYPE\"\n              ? type.style === blockType\n              : currentStyle.has(type.style)\n          }\n          label={type.label}\n          onToggle={type.type === \"BLOCK_TYPE\" ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default StyleTypes;\n","import React, { useState, useRef } from \"react\";\nimport { EditorState, DraftBlockType, RichUtils } from \"draft-js\";\nimport classNames from \"classnames\";\nimport { useOnClickOutside } from \"../../custom-hooks/useOnClickOutside\";\nimport Button from \"../Button\";\nimport StyleTypes from \"./StyleTypes\";\nimport Modal from \"../Modal\";\nimport Gallery from \"./Gallery\";\n\ninterface ToolbarProps {\n  variant: string;\n  onAddImage: (publicId: string) => void;\n  editorState: EditorState;\n  handleChange: (editorState: EditorState) => void;\n  handleSave: (type: string) => any;\n}\nconst Toolbar = (props: ToolbarProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  const { editorState, handleChange, onAddImage, handleSave, variant } = props;\n\n  const handleCb = (publicId: string) => {\n    onAddImage(publicId);\n    setIsOpen(false);\n  };\n  const handleToggle = () => setToggle(!toggle);\n  const toggleBlockType = (blockType: DraftBlockType) => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = (style: DraftBlockType) => {\n    if (style === \"image\") {\n      setIsOpen(!isOpen);\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style));\n  };\n  const ref = useRef<HTMLDivElement>(null);\n  useOnClickOutside(ref, () => setIsOpen(false));\n  return (\n    <div ref={ref} className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes\n          editorState={editorState}\n          onToggleBlock={toggleBlockType}\n          onToggleInline={toggleInlineStyle}\n        />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={require(\"../../assets/icons/save.svg\")} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          \"toolbar__buttons-hide\": !toggle\n        })}\n      >\n        <Button text={variant} handleClick={handleSave(variant)} />\n      </div>\n      <Modal isOpen={isOpen} handleClose={() => setIsOpen(false)}>\n        <Gallery withCb={true} cb={handleCb} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js';\n\ninterface ImageProps {\n    src: string;\n}\ninterface MediaProps {\n    block: ContentBlock;\n    contentState: ContentState;\n}\nconst Image = (props: ImageProps) => {\n    if(!!props.src) {\n        return <img src={props.src} alt=\"upload to cloud\" />;\n    }\n    return null;\n}\nconst Media = (props: MediaProps) => {\n    const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0));\n    const { src } = entity.getData();\n    const type = entity.getType();\n\n    let media;\n\n    if(type === 'image') {\n        media = <Image src={src} />\n    }\n    return media;\n}\n\nexport default Media;","import { ContentBlock } from 'draft-js';\nimport Media from './Media';\n\nexport const mediaBlockRenderer = (block: ContentBlock) => {\n    if(block.getType() === 'atomic') {\n        return {\n            component: Media,\n            editable: false\n        }\n    }\n    return null;\n}","import React, { useState, KeyboardEvent, createRef, useContext } from \"react\";\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  convertToRaw,\n  AtomicBlockUtils,\n  convertFromRaw\n} from \"draft-js\";\nimport { getBlockStyle } from \"./getBlockStyle\";\nimport Toolbar from \"./Toolbar\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport { mediaBlockRenderer } from \"./MediaBlockRenderer\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface EditorProps {\n  blogId?: any;\n}\nconst RichEditor = (props: EditorProps) => {\n  const { data, dataService } = useContext(DataContext);\n  const blogPost = props.blogId\n    ? data.blogs.filter((b: any) => b.id === props.blogId.id)[0]\n    : null;\n  const blogState: EditorState = blogPost\n    ? EditorState.createWithContent(\n        convertFromRaw(JSON.parse(blogPost.content))\n      )\n    : EditorState.createEmpty();\n\n  const [editorState, setEditorState] = useState<EditorState>(blogState);\n  const content = editorState.getCurrentContent();\n\n  const [editorContent, setEditorContent] = useState<string>(\n    JSON.stringify(convertToRaw(content))\n  );\n\n  const history = useHistory();\n\n  let editor = createRef<Editor>();\n  const focusEditor = () => {\n    if (editor.current) {\n      editor.current.focus();\n    }\n  };\n  const handleChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n    setEditorContent(JSON.stringify(convertToRaw(content)));\n  };\n\n  const handleSave = (type: string) => () => {\n    if(type === 'Publish') {\n      dataService.createNewPost({\n        content: editorContent,\n        userId: data.users[0]._id\n      });\n      history.push('/dashboard/posts')\n    } else {\n      dataService.updatePost(props.blogId.id, editorContent);\n      history.push('/dashboard/posts')\n    }\n  };\n\n  const handleKeyCommand = (\n    command: DraftEditorCommand,\n    editorState: EditorState\n  ) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      handleChange(newState);\n      return \"handled\";\n    } else {\n      return \"not-handled\";\n    }\n  };\n  const mapKeyToEditorCommand = (e: KeyboardEvent) => {\n    if (e.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4);\n      if (newEditorState !== editorState) {\n        handleChange(newEditorState);\n      }\n      return null;\n    }\n    return getDefaultKeyBinding(e);\n  };\n\n  const onAddImage = (publicId: string) => {\n    const urlValue = `https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${publicId}.jpg`;\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntitiy = contentState.createEntity(\n      \"image\",\n      \"IMMUTABLE\",\n      { src: urlValue }\n    );\n    const entityKey = contentStateWithEntitiy.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntitiy\n    });\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n    setTimeout(() => focusEditor(), 0);\n  };\n\n  let contentState = editorState.getCurrentContent();\n  let className = \"RichEditor-editor\";\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== \"unstyled\"\n    ) {\n      className += \" RichEditor-hidePlaceholder\";\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <div className=\"RichEditor\">\n        <Toolbar\n          variant={props.blogId ? 'Save' : 'Publish'}\n          onAddImage={onAddImage}\n          editorState={editorState}\n          handleChange={handleChange}\n          handleSave={handleSave}\n        />\n        <div className={className} onClick={focusEditor}>\n          <Editor\n            ref={editor}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={mediaBlockRenderer}\n            editorState={editorState}\n            handleKeyCommand={handleKeyCommand}\n            keyBindingFn={mapKeyToEditorCommand}\n            onChange={handleChange}\n            placeholder=\"Tell a story...\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RichEditor;\n","import React, { ReactNode } from \"react\";\n\ninterface TableProps {\n  children: ReactNode;\n  heads: string[];\n}\nconst Table = (props: TableProps) => (\n  <table>\n    <thead>\n      <tr>\n        {props.heads.map(head => (\n          <th key={head} >{head}</th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>{props.children}</tbody>\n  </table>\n);\n\nexport default Table;\n","import React, { useContext } from \"react\";\nimport { IComment } from \"./Blog\";\nimport Button from \"./Button\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport Table from \"./Table\";\n\n\ninterface Props {\n  comments: IComment[];\n}\nconst CommentList = (props: Props) => {\n  const { dataService } = useContext(DataContext);\n  const handleDelete = (commentId: string) => () => {\n    dataService.removeComment(commentId);\n  };\n\n  const heads = [\"number\", \"comment\", \"commenter\", \"email\", \"action\"];\n\n  return (\n    <div className=\"comments\">\n      <Table heads={heads}>\n        {props.comments.map((comment: IComment, index: number) => (\n          <tr key={comment._id}>\n            <td>{index + 1}</td>\n            <td>{comment.comment}</td>\n            <td>{comment.commenter}</td>\n            <td>{comment.email}</td>\n            <td>\n              <Button text=\"Delete\" handleClick={handleDelete(comment._id)} />\n            </td>\n          </tr>\n        ))}\n      </Table>\n    </div>\n  );\n};\n\nexport default CommentList;\n","import React, { useContext, useState } from \"react\";\nimport { DataContext } from \"../../contexts/dataContext\";\nimport Button from \"../Button\";\nimport { BlogType, IComment } from \"../Blog\";\nimport { extractFromDraft } from \"../Jumbotron\";\nimport Modal from \"../Modal\";\nimport CommentList from \"../Comments\";\nimport Table from \"components/Table\";\nimport { Link } from \"react-router-dom\";\n\nconst Posts = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [comments, setComments] = useState<IComment[]>([\n    {\n      commenter: \"\",\n      email: \"\",\n      comment: \"\",\n      createdAt: \"\",\n      _id: \"\",\n      post: \"\"\n    }\n  ]);\n  const {\n    data: { blogs },\n    dataService\n  } = useContext(DataContext);\n  if (!blogs.length) {\n    return <div className=\"posts\">You don't have any post in your blog.</div>;\n  }\n\n  const handleClick = (blogId: string) => () => {\n    const alert = `Are you sure you want to delete this post?`\n    if(window.confirm(alert)) {\n      dataService.removePost(blogId);\n    } else {\n      return null\n    }\n  };\n\n  const toggleModal = (e: Event, commentList: IComment[]) => {\n    e.preventDefault();\n    setComments(commentList);\n    setIsOpen(!isOpen);\n  };\n  const heads = [\n    \"post\",\n    \"title\",\n    \"created\",\n    \"updated\",\n    \"comments\",\n    \"edit\",\n    \"delete\"\n  ];\n  return (\n    <div className=\"posts\">\n      <Modal isOpen={isOpen} handleClose={() => setIsOpen(!isOpen)}>\n        <CommentList comments={comments} />\n      </Modal>\n      <div className=\"posts-table\">\n        <Table heads={heads}>\n          {blogs.map((blog: BlogType, index: number) => (\n            <tr key={blog.id}>\n              <td>{index + 1}</td>\n              <td>\n                <a\n                  href={`/blog/${extractFromDraft(blog.content)\n                    .title.split(\" \")\n                    .join(\"-\")}`}\n                >\n                  {extractFromDraft(blog.content).title}\n                </a>\n              </td>\n              <td>{new Date(blog.createdAt).toISOString().slice(0, 10)}</td>\n              <td>{new Date(blog.updatedAt).toISOString().slice(0, 10)}</td>\n              <td>\n                <a\n                  href=\"/#\"\n                  onClick={(e: any) => toggleModal(e, blog.comments)}\n                >\n                  {blog.comments.length}\n                </a>\n              </td>\n              <td>\n                <Link to={`/dashboard/edit/${blog.id}`}>\n                  <Button text=\"Edit\" />\n                </Link>\n              </td>\n              <td>\n                <Button text=\"Delete\" handleClick={handleClick(blog.id)} />\n              </td>\n            </tr>\n          ))}\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useContext } from \"react\";\nimport { extractFromDraft } from \"./Jumbotron\";\nimport { DataContext } from \"contexts/dataContext\";\nimport { BlogType } from \"./Blog\";\n\ntype Props = {\n  post: BlogType\n}\nexport const CardPost: React.FC<Props> = ({ post }) => (\n    <a className=\"latest__card\" href={`/blog/${extractFromDraft(post.content).title.split(' ').join('-')}`}>\n          <img\n            className=\"latest__card__img\"\n            src={extractFromDraft(post.content).url}\n            alt=\"related post\"\n          />\n          <div className=\"latest__card__body\" >\n          <p className=\"latest__card__text\">{extractFromDraft(post.content).title}</p>\n          </div>\n    </a>\n);\n\nexport const LastPost = () => {\n  const { data: { blogs } } = useContext(DataContext)\n\n  const lastPosts = blogs.slice(0, 3)\n\n  return(\n    <div className=\"latest\">\n      <h2 className=\"latest__text\" >Latest posts</h2>\n      <span className=\"latest__line\" ></span>\n      <div className=\"latest__posts\" >\n      {lastPosts.map((blog: BlogType) => \n      <CardPost key={blog.id} post={blog} />\n      )}\n      </div>\n    </div>\n  );\n}\n\n","import React, { Fragment, useContext } from \"react\";\nimport Nav from \"./Navbar\";\nimport { DataContext } from \"contexts/dataContext\";\nimport { LastPost } from \"./LatestPost\";\nimport Footer from \"./Footer\";\n\nconst Header = () => {\n  const { data } = useContext(DataContext);\n  if (!data.users.length) {\n    return <div></div>;\n  }\n  const fullName = data.users[0].firstName + \" \" + data.users[0].lastName;\n\n  return (\n    <Fragment>\n      <div className=\"nav__wrapper\">\n        <Nav />\n      </div>\n      <header className=\"header\">\n        <div className=\"header__content\">\n          <h1 className=\"header__title\">{fullName}</h1>\n          <span>{data.users[0].title}</span>\n        </div>\n      </header>\n      <LastPost />\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\ninterface Props {\n  imgUrl: string;\n  text: string;\n}\nconst Section: React.FC<Props> = ({ imgUrl, text}) => (\n  <div className=\"section\">\n    <section\n      className=\"section__content\"\n    >\n      <img\n        className=\"section__img\"\n        src={\n          imgUrl ? imgUrl : require(\"../assets/images/avatar.png\")\n        }\n        alt=\"biography\"\n      />\n      <article className=\"section__article\">\n        <h2 className=\"section__article--title\">Hello,</h2>\n        <h3>a bit about me</h3>\n        <span className=\"section__article--span\"></span>\n        <div className=\"section__links\">\n          <a href=\"/about#\" className=\"section__item\">my resume</a>\n          <a href=\"/about#\" className=\"section__item\">my resume</a>\n          <a href=\"/about#\" className=\"section__item\">my resume</a>\n        </div>\n        <span className=\"section__article--span\"></span>\n        <p className=\"section__article--text\">{text}</p>\n        {/* {props.text.length > 20 && <Link to={props.href}>{props.btnText}</Link>} */}\n      </article>\n    </section>\n  </div>\n);\n\nexport default Section;\n\nconst FooterX = (): JSX.Element => {\n  return (\n    <div className=\"section__footer\">\n      <ul className=\"section__footer__list\">\n        <li className=\"section__footer__link\">\n          <a href=\"/#\">home</a>\n        </li>\n        <li className=\"section__footer__link\">\n          <a href=\"/#\">projects</a>\n        </li>\n        <li className=\"section__footer__link\">\n          <a href=\"/#\">skills</a>\n        </li>\n        <li className=\"section__footer__link\">\n          <a href=\"/#\">contact</a>\n        </li>\n        <li className=\"section__footer__link\">\n          <a href=\"/blog\">blog</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst Social = (): JSX.Element => (\n  <ul className=\"section__social\">\n    <li className=\"section__social__link\">\n      <a\n        href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <img src={require(\"../assets/icons/linkedin-2.svg\")} alt=\"icon\" />\n      </a>\n    </li>\n    <li className=\"section__social__link\">\n      <a\n        href=\"https://www.facebook.com/maryam.tavakkoli.39566\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <img src={require(\"../assets/icons/facebook-2.svg\")} alt=\"icon\" />\n      </a>\n    </li>\n    <li className=\"section__social__link\">\n      <a\n        href=\"https://www.facebook.com/maryam.tavakkoli.39566\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <img src={require(\"../assets/icons/twitter-2.svg\")} alt=\"icon\" />\n      </a>\n    </li>\n  </ul>\n);\n","import React, { useContext } from \"react\";\nimport Section from \"./Section\";\n\nimport { DataContext } from \"../contexts/dataContext\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport Footer from \"components/Footer\";\nimport Nav from \"components/Navbar\";\n\n\nconst About = () => {\n  const { authState } = useContext(AuthContext);\n\n  const {\n    data: { users }\n  } = useContext(DataContext);\n\n  if (!users.length || !authState) {\n    return <div></div>;\n  }\n\n  //const user = users.filter((user: any) => user._id === authState.id)[0];\n\n  const { firstName, lastName, bio, imageUrl } = users[0];\n  const fullname = firstName + \" \" + lastName;\n\n  return (\n    <div className='about'>\n      <Nav />\n      <Section\n        imgUrl={imageUrl}\n        text={bio}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useContext, useEffect } from \"react\";\nimport { Switch, Route, Redirect, match } from \"react-router-dom\";\nimport Blog from \"./Blog\";\nimport Post from \"./Post\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { DataContext } from \"../contexts/dataContext\";\nimport Gallery from \"./Dashboard/Gallery\";\nimport Profile from \"./Dashboard/Profile\";\nimport RichEditor from \"./Dashboard/Editor\";\nimport Posts from \"./Dashboard/Posts\";\nimport Header from \"./Header\";\nimport About from \"./About\";\n\ninterface Props {\n  component: any;\n  path: string;\n}\nconst App = () => {\n  const {\n    authState: { isLoggedIn }, authService\n  } = useContext(AuthContext);\n  const { dataService } = useContext(DataContext);\n\n  const fetchData = () => {\n    authService.authenticate();\n    dataService.getPosts();\n    dataService.getGallery();\n    dataService.getUsers();\n  };\n  useEffect(() => {\n    fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const PrivateRoutes = ({ component: Comp, path, ...rest }: Props) => (\n    <Route\n      path={path}\n      render={props =>\n        isLoggedIn ? (\n          <Comp {...props} {...rest} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n\n  return (\n      <Switch>\n        <Route exact path=\"/\" component={Header} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/blog\" component={Blog} />\n        <Route\n          exact\n          path=\"/blog/:id\"\n          component={(props: any) => (props ? <Post {...props} /> : null)}\n        />\n        <PrivateRoutes\n          path=\"/dashboard\"\n          component={({ match: { url } }: { match: match }) => (\n            <Dashboard>\n              <Route path={`${url}/profile`} component={Profile} exact />\n              <Route path={`${url}/gallery`} component={Gallery} exact />\n              <Route path={`${url}/create`} component={RichEditor} exact />\n              <Route\n                path={`${url}/edit/:id`}\n                component={({ match }: { match: match }) => (\n                  <RichEditor blogId={match.params} />\n                )}\n                exact\n              />\n              <Route path={`${url}/posts`} component={Posts} exact />\n            </Dashboard>\n          )}\n        />\n      </Switch>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL,\n        window.location.href\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"./contexts/authContext\";\nimport App from \"./components/App\";\nimport \"./styles/_main.scss\";\nimport { DataProvider } from \"./contexts/dataContext\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <AuthProvider>\n    <DataProvider>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </DataProvider>\n  </AuthProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","import { Dispatch } from \"react\";\nimport { customAxios } from \"./customAxios\";\nimport { AuthAction, AuthState } from \"../reducers/authReducer\";\n\nexport const useAuthService = (\n  state: AuthState,\n  dispatch: Dispatch<AuthAction>\n) => {\n  const signup = (credentials: any) => {\n    customAxios\n      .post(\"/signup\", credentials)\n      .then(res => {\n        dispatch({\n          type: \"SIGNIN_SUCCESS\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          payload: err.message\n        });\n      });\n  };\n  const signin = (credentials: any) => {\n    customAxios\n      .post(\"/login\", credentials, { withCredentials: true })\n      .then(res => {\n        dispatch({\n          type: \"SIGNIN_SUCCESS\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        dispatch({\n          type: \"SET_ERRORS\",\n          payload: err.message\n        });\n      });\n  };\n  const logout = async () => {\n    customAxios\n      .get(\"/logout\")\n      .then(response => {\n        dispatch({\n          type: \"LOGOUT_USER\"\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const authenticate = () => {\n    customAxios.get(\"/auth\").then(response => {\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: response.data\n      });\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  };\n\n  return {\n    signup,\n    signin,\n    logout,\n    authenticate\n  };\n};\n","import { Dispatch } from \"react\";\nimport axios from \"axios\";\nimport { customAxios } from \"./customAxios\";\nimport { DataState, DataAction } from \"../reducers/dataReducer\";\n\nexport interface CommentState {\n  commenter?: string;\n  email?: string;\n  comment: string;\n}\n\nexport const useDataService = (\n  state: DataState,\n  dispatch: Dispatch<DataAction>\n) => {\n  const getPosts = () => {\n    customAxios\n      .get(\"/posts\")\n      .then(res => {\n        dispatch({\n          type: \"FETCH_POSTS\",\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  const createNewPost = (newPost: { userId: string; content: string }) => {\n    customAxios\n      .post(\"/posts\", newPost)\n      .then(res => {\n        dispatch({\n          type: \"ADD_POST\",\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  const updatePost = (blogId: string, content: string) => {\n    customAxios.put(`/posts/${blogId}`, { content: content }).then(res => {\n      dispatch({\n        type: \"EDIT_POST\",\n        payload: res.data\n      })\n    }).catch(err => {\n      console.log(err)\n    })\n  };\n  const getUsers = () => {\n    customAxios.get(\"/users\").then(res => {\n      dispatch({\n        type: \"FETCH_USERS\",\n        payload: res.data\n      });\n    });\n  };\n  const updateUser = (objId: string, obj: any, publicId: string) => {\n    customAxios\n      .put(`/users/${objId}`, { obj: obj, publicId: publicId })\n      .then(res => {\n        dispatch({\n          type: \"UPDATE_USER\",\n          payload: res.data\n        });\n      });\n  };\n  const removeImage = (publicId: string) => {\n    customAxios.delete(`/assets/${publicId}`).then(res => {\n      dispatch({\n        type: \"REMOVE_IMAGE\",\n        payload: publicId\n      });\n    });\n  };\n  const removeAssets = (publicIds: string[]) => {\n    customAxios.post(\"/assets\", publicIds).then(res => {\n      console.log(res.data);\n    });\n  };\n  const removePost = (blogId: string) => {\n    customAxios.delete(`/posts/${blogId}`).then(res => {\n      dispatch({\n        type: \"REMOVE_POST\",\n        payload: blogId\n      });\n    });\n  };\n  const addComment = (comment: CommentState) => {\n    customAxios\n      .post(\"/comments\", comment)\n      .then(res => {\n        dispatch({\n          type: \"ADD_COMMENT\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n  const removeComment = (commentId: string) => {\n    customAxios\n      .delete(`/comments/${commentId}`)\n      .then(res => {\n        dispatch({\n          type: \"REMOVE_COMMENT\",\n          payload: res.data\n        });\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n  const getGallery = () => {\n    axios\n      .get(\n        `https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/list/xmas.json`\n      )\n      .then(res => {\n        dispatch({\n          type: \"FETCH_GALLERY\",\n          payload: res.data.resources\n        });\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n  };\n  return {\n    getPosts,\n    getGallery,\n    createNewPost,\n    updatePost,\n    removePost,\n    getUsers,\n    updateUser,\n    removeAssets,\n    removeImage,\n    addComment,\n    removeComment\n  };\n};\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.41c9a2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.bfe75be2.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.cb645bcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";"],"sourceRoot":""}