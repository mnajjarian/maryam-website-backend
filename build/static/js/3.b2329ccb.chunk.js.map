{"version":3,"sources":["assets/icons/bubble.svg","assets/icons/linkedin-2.svg","components/Modal/Modal.tsx","assets/icons/facebook-2.svg","assets/icons/linkedin-4.svg","assets/icons/save.svg","assets/icons/twitter-2.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/angel-up.svg","assets/icons/clock-thin.svg","assets/icons/comment.svg","assets/icons/iconCheck.svg","assets/icons/time-3.svg","assets/icons/user.svg","components/Dashboard/PctureChoice/PctureChoice.tsx","components/Dashboard/HeaderStyleDropdown/HeaderStyleDropdown.tsx","components/Dashboard/StyleButton/StyleButton.tsx","components/Dashboard/Gallery/Gallery.tsx","components/Dashboard/StyleTypes/StyleTypes.tsx","components/Dashboard/Toolbar/Toolbar.tsx"],"names":["module","exports","modalRoot","document","createElement","Modal","props","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","className","onClick","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Picture","imgUrl","publicId","handleClick","checked","key","src","alt","type","readOnly","HeaderStyleDropdown","onToggle","active","headerOptions","value","onChange","event","target","heading","label","style","StyleButton","classNames","onMouseDown","preventDefault","require","Gallery","useContext","DataContext","gallery","data","dataDispatch","dataService","DataServices","images","reduce","acc","curr","public_id","useState","checkState","setCheckState","openWidget","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","error","result","payload","info","withCb","cb","checkList","push","handleDelete","a","removeImage","console","log","length","text","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","editorState","onToggleBlock","onToggleInline","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","currentStyle","getCurrentInlineStyle","has","Toolbar","isOpen","setIsOpen","toggle","setToggle","handleChange","onAddImage","handleSave","draft","RichUtils","toggleBlockType","toggleInlineStyle","SaveIcon","toolbar__buttons"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,iCCA3C,8DAQMC,EAAyBC,SAASC,cAAc,UAE/C,SAASC,EAAMC,GAA0C,IACtDC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,SASrB,OARAC,qBAAU,WAGR,OAFAN,SAASO,KAAKC,YAAYT,GAEnB,WACLC,SAASO,KAAKE,YAAYV,MAE3B,IAEIW,uBACL,yBAAKC,UAAU,SACb,yBAAKA,UAAU,iBAAiBC,QAASR,IACzC,yBAAKO,UAAU,eAAeN,IAEhCN,K,oBCzBJF,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3C,IAAIe,EAAM,CACT,mBAAoB,IACpB,aAAc,IACd,kBAAmB,IACnB,cAAe,IACf,eAAgB,IAChB,kBAAmB,IACnB,WAAY,IACZ,eAAgB,IAChB,WAAY,IACZ,kBAAmB,IACnB,iBAAkB,IAClB,eAAgB,IAChB,mBAAoB,IACpB,gBAAiB,IACjB,mBAAoB,IACpB,kBAAmB,IACnB,mBAAoB,IACpB,mBAAoB,IACpB,aAAc,IACd,eAAgB,IAChB,kBAAmB,IACnB,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBpB,EAAOC,QAAUgB,EACjBA,EAAeE,GAAK,K,oBC3CpBnB,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,gCCA3C,mEASO,SAAS4B,EAAQvB,GAA4B,IAC1CwB,EAA2CxB,EAA3CwB,OAAQC,EAAmCzB,EAAnCyB,SAAUC,EAAyB1B,EAAzB0B,YAAaC,EAAY3B,EAAZ2B,QACvC,OACE,yBAAKnB,UAAU,UAAUoB,IAAKH,EAAUhB,QAASiB,EAAYD,IAC3D,yBAAKjB,UAAU,iBAAiBqB,IAAKL,EAAQM,IAAI,QACjD,2BAAOC,KAAK,WAAWC,UAAQ,EAACL,QAASA,EAASnB,UAAU,wB,gCCdlE,+EAOO,SAASyB,EAAoBjC,GAA+C,IACzEkC,EAAoClC,EAApCkC,SAAUC,EAA0BnC,EAA1BmC,OAAQC,EAAkBpC,EAAlBoC,cAK1B,OACE,yBAAK5B,UAAU,sBACb,4BAAQA,UAAU,4BAA4B6B,MAAOF,EAAQG,SAN5C,SAACC,GACpB,IAAMF,EAAQE,EAAMC,OAAOH,MAC3BH,EAASG,KAKL,4BAAQ7B,UAAU,4BAA4BoB,IAAI,WAAWS,MAAM,YAAnE,UAGCD,EAAc1B,KAAI,SAAA+B,GAAO,OACxB,4BAAQjC,UAAU,4BAA4BoB,IAAKa,EAAQC,MAAOL,MAAOI,EAAQE,OAC9EF,EAAQC,c,gICVd,SAASE,EAAY5C,GAAuC,IAAD,EACxDmC,EAAmCnC,EAAnCmC,OAAQQ,EAA2B3C,EAA3B2C,MAAOT,EAAoBlC,EAApBkC,SAAUQ,EAAU1C,EAAV0C,MAMjC,OACE,0BACElC,UAAWqC,IAAW,0BAAD,oDACQH,IAAU,GADlB,cAEnB,0BAA2BP,GAFR,IAIrBW,YAXiB,SAAC7B,GACpBA,EAAE8B,iBACFb,EAASS,KAWP,yBAAKnC,UAAU,8BAA8BqB,IAAKmB,OAAQ,YAAyBN,EAA1B,SAAwCZ,IAAI,Y,mLCdpG,SAASmB,EAAQjD,GAA4B,IAAD,EAI7CkD,qBAAWC,KAFLC,EAFuC,EAE/CC,KAAQD,QACRE,EAH+C,EAG/CA,aAEIC,EAAc,IAAIC,IAAaF,GAC/BG,EAASL,EAAQM,QAAO,SAACC,EAAUC,GAEvC,OADAD,EAAIC,EAAKC,YAAa,EACfF,IACN,IAT8C,EAWbG,mBAASL,GAXI,mBAW1CM,EAX0C,KAW9BC,EAX8B,KAa3CC,EAAa,WACfC,OAAeC,WAAWC,iBAC1B,CACEC,UAAWC,cACXC,aAAcD,WACdE,KAAM,CAAC,UAET,SAACC,EAAcC,GACQ,YAAjBA,EAAOnC,OACTe,EAAa,CACXvB,KAAM,cACN4C,QAASD,EAAOE,WAOpBlD,EAAc,SAACD,GAAD,OAAsB,WACpCzB,EAAM6E,QACR7E,EAAM8E,GAAGrD,GAEXuC,EAAc,eACTD,EADQ,eAEVtC,GAAYsC,EAAWtC,QAItBsD,EAAY3B,EAAQM,QAAO,SAACC,EAAeC,GAI/C,OAHIG,EAAWH,EAAKC,YAClBF,EAAIqB,KAAKpB,EAAKC,WAETF,IACN,IACGsB,EAAY,uCAAG,sBAAAC,EAAA,+EAEX3B,EAAY4B,YAAYJ,EAAU,IAFvB,sDAIjBK,QAAQC,IAAR,MAJiB,wDAAH,qDAQlB,OACE,yBAAK7E,UAAU,WACX4C,EAAQkC,OAKR,oCACE,6BACE,kBAAC,IAAD,CAAQC,KAAK,MAAM7D,YAAauC,IAC/Bc,EAAU,IACT,kBAAC,IAAD,CAAQQ,KAAMR,EAAUO,OAAS,EAAI,aAAe,SAAU5D,YAAauD,KAG/E,yBAAKzE,UAAU,qBACZ4C,EAAQ1C,KAAI,SAAC2C,GAAD,OACX,kBAAC,UAAD,CACE1B,QAASoC,EAAWV,EAAKQ,WACzBnC,YAAaA,EACbE,IAAKyB,EAAKQ,UACVpC,SAAU4B,EAAKQ,UACfrC,OAAM,qCAAgC8C,cAAhC,yBAAgFjB,EAAKQ,UAArF,eAlBd,yBAAKrD,UAAU,kBAAf,yBACwB,kBAAC,IAAD,CAAQ+E,KAAK,cAAc7D,YAAauC,IAAe,Q,gCCvEvF,sFAaMuB,EAA0B,CAC9B,CAAE9C,MAAO,OAAQC,MAAO,OAAQZ,KAAM,eACtC,CAAEW,MAAO,SAAUC,MAAO,SAAUZ,KAAM,eAC1C,CAAEW,MAAO,YAAaC,MAAO,YAAaZ,KAAM,eAChD,CAAEW,MAAO,KAAMC,MAAO,sBAAuBZ,KAAM,cACnD,CAAEW,MAAO,KAAMC,MAAO,oBAAqBZ,KAAM,cACjD,CAAEW,MAAO,aAAcC,MAAO,aAAcZ,KAAM,cAClD,CAAEW,MAAO,YAAaC,MAAO,aAAcZ,KAAM,cACjD,CAAEW,MAAO,YAAaC,MAAO,OAAQZ,KAAM,eAC3C,CAAEW,MAAO,SAAUC,MAAO,gBAAiBZ,KAAM,eACjD,CAAEW,MAAO,QAASC,MAAO,QAASZ,KAAM,UAGpC0D,EAAkC,CACtC,CAAE/C,MAAO,YAAaC,MAAO,aAAcZ,KAAM,cACjD,CAAEW,MAAO,YAAaC,MAAO,aAAcZ,KAAM,cACjD,CAAEW,MAAO,YAAaC,MAAO,eAAgBZ,KAAM,cACnD,CAAEW,MAAO,YAAaC,MAAO,cAAeZ,KAAM,cAClD,CAAEW,MAAO,YAAaC,MAAO,cAAeZ,KAAM,cAClD,CAAEW,MAAO,YAAaC,MAAO,aAAcZ,KAAM,eAS5C,SAAS2D,EAAW1F,GAAsC,IACvD2F,EAA+C3F,EAA/C2F,YAAaC,EAAkC5F,EAAlC4F,cAAeC,EAAmB7F,EAAnB6F,eAC9BC,EAAYH,EAAYI,eACxBC,EAAYL,EACfM,oBACAC,eAAeJ,EAAUK,eACzBC,UACGC,EAAeV,EAAYW,wBAEjC,OACE,oCACE,kBAAC,sBAAD,CAAqBlE,cAAeqD,EAAqBtD,OAAQ6D,EAAW9D,SAAU0D,IACrFJ,EAAY9E,KAAI,SAAAqB,GAAI,OACnB,kBAAC,cAAD,CACEI,OAAsB,eAAdJ,EAAKA,KAAwBA,EAAKY,QAAUqD,EAAYK,EAAaE,IAAIxE,EAAKY,OACtFD,MAAOX,EAAKW,MACZR,SAAwB,eAAdH,EAAKA,KAAwB6D,EAAgBC,EACvDlD,MAAOZ,EAAKY,MACZf,IAAKG,EAAKW,c,wLCxCb,SAAS8D,EAAQxG,GAAmC,IAAD,EAC5B8D,oBAAS,GADmB,mBACjD2C,EADiD,KACzCC,EADyC,OAE5B5C,oBAAS,GAFmB,mBAEjD6C,EAFiD,KAEzCC,EAFyC,KAGhDjB,EAA6D3F,EAA7D2F,YAAakB,EAAgD7G,EAAhD6G,aAAcC,EAAkC9G,EAAlC8G,WAAYC,EAAsB/G,EAAtB+G,WAAYC,EAAUhH,EAAVgH,MAmB3D,OACE,yBAAKxG,UAAU,WACb,yBAAKA,UAAU,uBACb,kBAAC,aAAD,CAAYmF,YAAaA,EAAaC,cAdpB,SAACI,GACvBa,EAAaI,YAAUC,gBAAgBvB,EAAaK,KAasBH,eAVlD,SAAClD,GACX,UAAVA,GACF+D,GAAWD,GAEbI,EAAaI,YAAUE,kBAAkBxB,EAAahD,QAQpD,yBAAKnC,UAAU,kBAAkBC,QAjBhB,kBAAYmG,GAAWD,KAkBtC,yBAAK9E,IAAKuF,IAAUtF,IAAI,UAE1B,yBACEtB,UAAWqC,IAAW,CACpBwE,kBAAkB,EAClB,yBAA0BV,KAG5B,kBAAC,IAAD,CAAQpB,KAAOyB,EAAkB,OAAV,QAAkBtF,YAAaqF,EAAW,UACjE,kBAAC,IAAD,CAAQxB,KAAK,UAAU7D,YAAaqF,EAAW,cAGhDN,GACC,kBAAC,IAAD,CAAOxG,YApCO,kBAAYyG,GAAWD,KAqCnC,kBAAC,UAAD,CAAS5B,QAAQ,EAAMC,GApCd,SAACrD,GAChBqF,EAAWrF,GACXiF,GAAU","file":"static/js/3.b2329ccb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot: HTMLElement = document.createElement('portal')\n\nexport function Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","var map = {\n\t\"./Blockquote.svg\": 151,\n\t\"./Bold.svg\": 152,\n\t\"./CodeBlock.svg\": 153,\n\t\"./Image.svg\": 154,\n\t\"./Italic.svg\": 155,\n\t\"./Monospace.svg\": 156,\n\t\"./OL.svg\": 157,\n\t\"./Strike.svg\": 158,\n\t\"./UL.svg\": 159,\n\t\"./Underline.svg\": 160,\n\t\"./angel-up.svg\": 161,\n\t\"./bubble.svg\": 130,\n\t\"./clock-thin.svg\": 162,\n\t\"./comment.svg\": 163,\n\t\"./facebook-2.svg\": 140,\n\t\"./iconCheck.svg\": 164,\n\t\"./linkedin-2.svg\": 131,\n\t\"./linkedin-4.svg\": 141,\n\t\"./save.svg\": 142,\n\t\"./time-3.svg\": 165,\n\t\"./twitter-2.svg\": 143,\n\t\"./user.svg\": 166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 150;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/angel-up.7b28dc10.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.808af9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","import React from 'react'\n\ntype Props = {\n  checked: boolean\n  imgUrl: string\n  publicId: string\n  handleClick: (publicId: string) => () => void\n}\n\nexport function Picture(props: Props): JSX.Element {\n  const { imgUrl, publicId, handleClick, checked } = props\n  return (\n    <div className=\"picture\" key={publicId} onClick={handleClick(publicId)}>\n      <img className=\"picture__image\" src={imgUrl} alt=\"pic\" />\n      <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n    </div>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { BlockTypes } from '../StyleTypes/StyleTypes'\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes\n  active: string\n  onToggle: (value: string) => void\n}\nexport function HeaderStyleDropdown(props: HeaderStyleDropdownProps): JSX.Element {\n  const { onToggle, active, headerOptions } = props\n  const handleToggle = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const value = event.target.value\n    onToggle(value)\n  }\n  return (\n    <div className=\"RichEditor-headers\">\n      <select className=\"RichEditor-headers-select\" value={active} onChange={handleToggle}>\n        <option className=\"RichEditor-headers-option\" key=\"unstyled\" value=\"unstyled\">\n          Normal\n        </option>\n        {headerOptions.map(heading => (\n          <option className=\"RichEditor-headers-option\" key={heading.label} value={heading.style}>\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, { MouseEvent } from 'react'\nimport classNames from 'classnames'\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js'\n\nexport type StyleButtonProps = {\n  active: boolean\n  style: DraftBlockType | DraftInlineStyleType\n  onToggle: (style: DraftBlockType | DraftInlineStyleType) => void\n  label: string\n}\n\nexport function StyleButton(props: StyleButtonProps): JSX.Element {\n  const { active, style, onToggle, label } = props\n  const handleToggle = (e: MouseEvent): void => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  return (\n    <span\n      className={classNames('RichEditor-styleButton', {\n        [`RichEditor-styleButton-${label}`]: true,\n        'RichEditor-activeButton': active,\n      })}\n      onMouseDown={handleToggle}\n    >\n      <img className=\"RichEditor-styleButton-icon\" src={require(`../../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Button } from '../../Button/Button'\nimport { Picture } from '../PctureChoice/PctureChoice'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { GalleryInterface } from '../../../reducers/dataReducer'\nimport { DataServices } from 'services/dataService'\n\ninterface Props {\n  withCb: boolean\n  cb: (publicId: string) => void\n}\n\nexport function Gallery(props: Props): JSX.Element {\n  const {\n    data: { gallery },\n    dataDispatch,\n  } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const images = gallery.reduce((acc: any, curr: GalleryInterface) => {\n    acc[curr.public_id] = false\n    return acc\n  }, [])\n\n  const [checkState, setCheckState] = useState(images)\n\n  const openWidget = (): void => {\n    ;(window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: ['xmas'],\n      },\n      (error: Error, result: any) => {\n        if (result.event === 'success') {\n          dataDispatch({\n            type: 'ADD_GALLERY',\n            payload: result.info,\n          })\n        }\n      },\n    )\n  }\n\n  const handleClick = (publicId: string) => (): void => {\n    if (props.withCb) {\n      props.cb(publicId)\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId],\n    })\n  }\n\n  const checkList = gallery.reduce((acc: string[], curr: GalleryInterface) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id)\n    }\n    return acc\n  }, [])\n  const handleDelete = async (): Promise<void> => {\n    try {\n      await dataService.removeImage(checkList[0])\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? (\n        <div className=\"gallery__empty\">\n          The gallery is empty! <Button text=\"Add picture\" handleClick={openWidget} />{' '}\n        </div>\n      ) : (\n        <>\n          <div>\n            <Button text=\"Add\" handleClick={openWidget} />\n            {checkList[0] && (\n              <Button text={checkList.length > 1 ? 'Delete all' : 'Delete'} handleClick={handleDelete} />\n            )}\n          </div>\n          <div className=\"gallery__contents\">\n            {gallery.map((data: GalleryInterface) => (\n              <Picture\n                checked={checkState[data.public_id]}\n                handleClick={handleClick}\n                key={data.public_id}\n                publicId={data.public_id}\n                imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { EditorState, DraftBlockType, DraftInlineStyleType } from 'draft-js'\nimport { HeaderStyleDropdown } from '../HeaderStyleDropdown/HeaderStyleDropdown'\nimport { StyleButton } from '../StyleButton/StyleButton'\n\nexport interface BlockType {\n  label: string\n  style: DraftBlockType\n  type: string\n}\n\nexport type BlockTypes = BlockType[]\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: 'Bold', style: 'BOLD', type: 'INLINE_TYPE' },\n  { label: 'Italic', style: 'ITALIC', type: 'INLINE_TYPE' },\n  { label: 'Underline', style: 'UNDERLINE', type: 'INLINE_TYPE' },\n  { label: 'UL', style: 'unordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'OL', style: 'ordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'Blockquote', style: 'blockquote', type: 'BLOCK_TYPE' },\n  { label: 'CodeBlock', style: 'code-block', type: 'BLOCK_TYPE' },\n  { label: 'Monospace', style: 'CODE', type: 'INLINE_TYPE' },\n  { label: 'Strike', style: 'STRIKETHROUGH', type: 'INLINE_TYPE' },\n  { label: 'Image', style: 'image', type: 'IMAGE' },\n]\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: 'Heading 1', style: 'header-one', type: 'BLOCK_TYPE' },\n  { label: 'Heading 2', style: 'header-two', type: 'BLOCK_TYPE' },\n  { label: 'Heading 3', style: 'header-three', type: 'BLOCK_TYPE' },\n  { label: 'Heading 4', style: 'header-four', type: 'BLOCK_TYPE' },\n  { label: 'Heading 5', style: 'header-five', type: 'BLOCK_TYPE' },\n  { label: 'Heading 6', style: 'header-six', type: 'BLOCK_TYPE' },\n]\n\ntype StyleTypesProps = {\n  editorState: EditorState\n  onToggleBlock: (style: DraftBlockType) => void\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void\n}\n\nexport function StyleTypes(props: StyleTypesProps): JSX.Element {\n  const { editorState, onToggleBlock, onToggleInline } = props\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n  const currentStyle = editorState.getCurrentInlineStyle()\n\n  return (\n    <>\n      <HeaderStyleDropdown headerOptions={BLOCK_TYPES_HEADING} active={blockType} onToggle={onToggleBlock} />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={type.type === 'BLOCK_TYPE' ? type.style === blockType : currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={type.type === 'BLOCK_TYPE' ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState } from 'react'\nimport { EditorState, DraftBlockType, RichUtils } from 'draft-js'\nimport classNames from 'classnames'\nimport { Button } from '../../Button/Button'\nimport { StyleTypes } from '../StyleTypes/StyleTypes'\nimport { Modal } from '../../Modal/Modal'\nimport { Gallery } from '../Gallery/Gallery'\nimport SaveIcon from '../../../assets/icons/save.svg'\n\ninterface ToolbarProps {\n  draft: boolean\n  onAddImage: (publicId: string) => void\n  editorState: EditorState\n  handleChange: (editorState: EditorState) => void\n  handleSave: (variant: string) => () => void\n}\n\nexport function Toolbar(props: ToolbarProps): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const { editorState, handleChange, onAddImage, handleSave, draft } = props\n\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  const handleCb = (publicId: string): void => {\n    onAddImage(publicId)\n    setIsOpen(false)\n  }\n  const handleToggle = (): void => setToggle(!toggle)\n  const toggleBlockType = (blockType: DraftBlockType): void => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  const toggleInlineStyle = (style: DraftBlockType): void => {\n    if (style === 'image') {\n      setIsOpen(!isOpen)\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style))\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes editorState={editorState} onToggleBlock={toggleBlockType} onToggleInline={toggleInlineStyle} />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={SaveIcon} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          'toolbar__buttons-hide': !toggle,\n        })}\n      >\n        <Button text={!draft ? 'draft' : 'save'} handleClick={handleSave('save')} />\n        <Button text=\"publish\" handleClick={handleSave('publish')} />\n      </div>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Gallery withCb={true} cb={handleCb} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n"],"sourceRoot":""}