{"version":3,"sources":["Helper/index.ts","assets/icons/linkedin-2.svg","assets/icons/facebook-2.svg","assets/icons/linkedin-4.svg","assets/icons/twitter-2.svg","components/Navbar/Navbar.tsx","components/Footer/Subscription/Subscription.tsx","components/Footer/Footer.tsx","components/Layout/ScrollToTop.tsx","custom-hooks/useScroll.ts","components/Layout/Layout.tsx","pages/Post/AddComment/AddComment.tsx","pages/Post/Comment/Comment.tsx","pages/Post/Post.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","validateDraft","blockHaveHeader1","blockHaveText","undefined","module","exports","Nav","isLoggedIn","useContext","AuthContext","authState","useState","path","setPath","useEffect","el","document","getElementById","scrollFunc","window","scrollY","classList","add","remove","addEventListener","removeEventListener","pathname","useHistory","location","scrollTo","pathName","element","scrollIntoView","behavior","id","className","to","onClick","state","fromBlog","Subscription","setState","shake","setShake","errorMsg","setErrorMsg","classNames","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","console","log","Button","handleClick","setTimeout","Footer","href","rel","src","LinkedinIcon","alt","ScrollToTop","history","unlisten","listen","scroll","setScroll","handler","useScroll","Layout","children","AddComment","props","commenter","comment","post","postId","dataDispatch","DataContext","dataService","DataServices","handleChange","onSubmit","preventDefault","addComment","error","htmlFor","rows","cols","Comment","isOpen","setIsOpen","comments","map","CommentCard","key","_id","item","closeForm","createdAt","Post","blogs","useParams","split","join","find","includes","rawDraft","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","user","firstName","lastName","renderHTML","FacebookIcon","TwitterIcon"],"mappings":"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","file":"static/js/6.e3051c75.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const validateDraft = (content: string): boolean => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blockHaveHeader1 = blocks.filter((block: RawDraftContentBlock) => block.type === 'header-one')[0]\n  const blockHaveText = blocks\n    .filter((block: RawDraftContentBlock) => block.type === 'unstyled')\n    .filter((b: RawDraftContentBlock) => b.text.length > 1)\n  return blockHaveHeader1 !== undefined && blockHaveText.length > 0\n}\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","import React, { useContext, useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\n\nexport function Nav(): JSX.Element {\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n\n  const [path, setPath] = useState('')\n\n  useEffect(() => {\n    const el = document.getElementById('navbar')\n    const scrollFunc = (): void => {\n      if (window.scrollY >= 50 && el) {\n        el.classList.add('sticky')\n      } else if (el) {\n        el.classList.remove('sticky')\n      }\n    }\n    document.addEventListener('scroll', scrollFunc)\n    return (): void => {\n      document.removeEventListener('scroll', scrollFunc)\n    }\n  }, [])\n\n  const {\n    location: { pathname },\n  } = useHistory()\n\n  const scrollTo = (pathName: string) => (): void => setPath(pathName)\n  const element = document.getElementById(path)\n\n  useEffect(() => {\n    if (element) {\n      return element.scrollIntoView({ behavior: 'smooth', block: 'end' })\n    }\n  }, [path, element])\n\n  return (\n    <div id=\"navbar\" className=\"navbar sticky\">\n      <nav id=\"nav\" className=\"navbar__items\">\n        <ul className=\"navbar__items__list\">\n          <NavLink to={{ pathname: '/' }}>home</NavLink>\n          <NavLink onClick={scrollTo('about')} to={{ pathname: '/', state: { fromBlog: pathname === '/blog' } }}>\n            about\n          </NavLink>\n          <NavLink onClick={scrollTo('contact')} to={{ pathname: pathname }}>\n            contact\n          </NavLink>\n          <NavLink to=\"/blog\">blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport { Button } from '../../Button/Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\nexport function Subscription(): JSX.Element {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = (): void => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = (): void => {\n    if (emailValidation(state)) {\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription col-sm-12 col-md-12\">\n      <h2>or subscribe</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\nimport { Subscription } from './Subscription/Subscription'\n\nexport function Footer(): JSX.Element {\n  return (\n    <section id=\"contact\" className=\"footer col-sm-12 col-md-6\">\n      <h1>let&apos;s get in touch!</h1>\n      <div className=\"footer__social\">\n        <a\n          className=\"navbar__social__link\"\n          href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n        </a>\n      </div>\n      <Subscription />\n    </section>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useScroll } from 'custom-hooks/useScroll'\nimport { useHistory } from 'react-router-dom'\n\nexport function ScrollToTop(): JSX.Element {\n  const history = useHistory()\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return (): void => {\n      unlisten()\n    }\n  }, [history])\n\n  const scroll = useScroll()\n  const handleScroll = (): void => window.scrollTo(0, 0)\n\n  if (scroll < 400) return <div />\n\n  return (\n    <div className=\"scroll\" onClick={handleScroll}>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}\n\nexport default ScrollToTop\n","import { useEffect, useState } from 'react'\n\nexport function useScroll(): number {\n  const [scroll, setScroll] = useState(0)\n  useEffect(() => {\n    const handler = (): void => setScroll(window.scrollY)\n    window.addEventListener('scroll', handler)\n    return (): void => {\n      window.removeEventListener('scroll', handler)\n    }\n  }, [])\n  return scroll\n}\n","import React, { ReactNode } from 'react'\nimport { Nav } from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer'\nimport { ScrollToTop } from './ScrollToTop'\n\ntype Props = {\n  children: ReactNode\n}\nexport const Layout = ({ children }: Props): JSX.Element => {\n  return (\n    <div className=\"container--fluid\">\n      <Nav />\n      {children}\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n","import React, { useState, useContext, FormEvent, ChangeEvent } from 'react'\nimport { Button } from '../../../components/Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { DataServices } from 'services/dataService'\n\ninterface CommentForm {\n  closeForm: () => void\n  postId: string\n}\n\ninterface State {\n  commenter: string\n  email: string\n  comment: string\n  post: string\n}\n\nexport function AddComment(props: CommentForm): JSX.Element {\n  const [state, setState] = useState<State>({\n    commenter: '',\n    email: '',\n    comment: '',\n    post: props.postId,\n  })\n  const { dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n    try {\n      dataService.addComment(state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const { commenter, email, comment } = state\n  return (\n    <div className=\"comment__form\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input className=\"form__input\" type=\"text\" name=\"commenter\" value={commenter} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={3}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { formatDate, formatTime } from '../../../Helper'\nimport { AddComment } from '../AddComment/AddComment'\nimport { CommentInterface } from 'reducers/dataReducer'\n\ntype Props = {\n  comments: CommentInterface[]\n  postId: string\n}\n\nexport function Comment(props: Props): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleToggle = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"comment\">\n      {props.comments.length ? <p className=\"comment__header\">Comments</p> : ''}\n      {props.comments.length > 0 &&\n        props.comments.map((comment: CommentInterface) => <CommentCard key={comment._id} item={comment} />)}\n      <AddComment closeForm={handleToggle} postId={props.postId} />\n    </div>\n  )\n}\n\nfunction CommentCard(props: { item: CommentInterface }): JSX.Element {\n  const { comment, commenter, createdAt } = props.item\n  return (\n    <div className=\"comment__card\">\n      <div className=\"comment__body\">\n        <div className=\"comment__title\">\n          <strong>{commenter}</strong>\n          <div className=\"comment__date\">\n            {formatDate(createdAt)}\n            &nbsp;{formatTime(createdAt)}\n          </div>\n        </div>\n        <p className=\"comment__text\">{comment}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { DataContext } from '../../contexts/dataContext'\nimport { convertFromRaw, EditorState, RawDraftContentState } from 'draft-js'\nimport renderHTML from 'react-render-html'\nimport { stateToHTML } from 'draft-js-export-html'\nimport { Comment } from './Comment/Comment'\nimport Loading from '../../components/Loading/Loading'\nimport LinkedinIcon from '../../assets/icons/linkedin-4.svg'\nimport FacebookIcon from '../../assets/icons/facebook-2.svg'\nimport TwitterIcon from '../../assets/icons/twitter-2.svg'\nimport { Layout } from '../../components/Layout/Layout'\nimport { formatDate } from 'Helper'\nimport { useParams } from 'react-router-dom'\nimport { BlogInterface } from 'reducers/dataReducer'\n\ntype Props = {\n  postId: string\n}\nexport function Post(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n\n  const { postId } = useParams<Props>()\n\n  const title: string = postId.split('-').join(' ')\n\n  useEffect(() => {\n    document.title = title\n  }, [title])\n\n  const post: BlogInterface | undefined = blogs.find((p: BlogInterface) => p.content.includes(title))\n\n  if (!post) {\n    return <Loading />\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content)\n\n  const content = convertFromRaw(rawDraft)\n  const editorState: EditorState = EditorState.createWithContent(content)\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent())\n\n  return (\n    <Layout>\n      <div className=\"post row\">\n        <h1 className=\"post__title\">{title}</h1>\n        <div className=\"col-md-8\">\n          <p className=\"post__info\">\n            Published&nbsp;\n            <time>{formatDate(post.createdAt)}</time>\n            &nbsp;|&nbsp;By&nbsp;{post.user.firstName + ' ' + post.user.lastName}\n          </p>\n          <span className=\"post__line\"></span>\n          <div className=\"post__content \">{renderHTML(editorContentHtml)}</div>\n\n          <div className=\"post__social\">\n            <a\n              href={`https://www.facebook.com/sharer/sharer.php?u=https://maryamtavakkoli.com/blog/${postId}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"post__social__icon\"\n            >\n              <img src={FacebookIcon} alt=\"facebook\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.linkedin.com/shareArticle?mini=true&url=https://maryamtavakkoli.com/blog/${postId}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={LinkedinIcon} alt=\"linkedin\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.twitter.com/intent/tweet?url=https://maryamtavakkoli.com/blog/${postId}&text=${title}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={TwitterIcon} alt=\"twitter\" />\n            </a>\n          </div>\n          <span className=\"post__line\"></span>\n          <Comment comments={post.comments} postId={post.id} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}