{"version":3,"sources":["Helper/index.ts","assets/icons/linkedin-2.svg","assets/icons/facebook-2.svg","assets/icons/linkedin-4.svg","assets/icons/twitter-2.svg","components/Navbar/Navbar.tsx","components/Footer/Subscription/Subscription.tsx","components/Footer/Footer.tsx","components/Layout/Layout.tsx","pages/Post/AddComment/AddComment.tsx","pages/Post/Comment/Comment.tsx","components/Loading/Loading.tsx","pages/Post/Post.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","validateDraft","blockHaveHeader1","blockHaveText","console","log","undefined","module","exports","Nav","React","useState","toggle","setToggle","isLoggedIn","useContext","AuthContext","authState","useEffect","el","document","getElementById","scrollFunc","window","scrollY","classList","add","remove","addEventListener","removeEventListener","id","className","classNames","navbar__menu","navbar__menu__change","onClick","navbar__items","show","href","to","Subscription","state","setState","shake","setShake","errorMsg","setErrorMsg","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","Button","handleClick","setTimeout","Footer","rel","src","LinkedinIcon","alt","Layout","children","AddComment","props","commenter","comment","post","postId","dataDispatch","DataContext","dataService","DataServices","handleChange","onSubmit","preventDefault","addComment","error","htmlFor","rows","cols","Comment","isOpen","setIsOpen","comments","map","CommentCard","key","_id","item","closeForm","createdAt","Loading","Post","blogs","params","split","join","find","includes","rawDraft","convertFromRaw","editorState","EditorState","createWithContent","editorContentHtml","stateToHTML","getCurrentContent","user","firstName","lastName","renderHTML","FacebookIcon","TwitterIcon"],"mappings":"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","file":"static/js/6.21c3ed6e.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const validateDraft = (content: string): boolean => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blockHaveHeader1 = blocks.filter((block: RawDraftContentBlock) => block.type === 'header-one')[0]\n  const blockHaveText = blocks\n    .filter((block: RawDraftContentBlock) => block.type === 'unstyled')\n    .filter((b: RawDraftContentBlock) => b.text.length > 1)\n  console.log(blockHaveText)\n  return blockHaveHeader1 !== undefined && blockHaveText.length > 0\n}\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useContext, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\n\nexport function Nav(): JSX.Element {\n  const [toggle, setToggle] = React.useState<boolean>(false)\n  const handleToggle = (): void => setToggle(!toggle)\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n  useEffect(() => {\n    const el = document.getElementById('navbar')\n    const scrollFunc = (): void => {\n      if (window.scrollY >= 50 && el) {\n        el.classList.add('sticky')\n      } else if (el) {\n        el.classList.remove('sticky')\n      }\n    }\n    document.addEventListener('scroll', scrollFunc)\n    return (): void => {\n      document.removeEventListener('scroll', scrollFunc)\n    }\n  }, [])\n  return (\n    <div id=\"navbar\" className=\"navbar sticky\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle,\n        })}\n        onClick={handleToggle}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          navbar__items: true,\n          show: !toggle,\n        })}\n      >\n        <ul className=\"navbar__items__list\">\n          <a href=\"/#home\">home</a>\n          <a href=\"/#about\">about</a>\n          <a href=\"/#contact\">contact</a>\n          <NavLink to=\"/blog\">blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport { Button } from '../../Button/Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\nexport function Subscription(): JSX.Element {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = (): void => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = (): void => {\n    if (emailValidation(state)) {\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription col-sm-12 col-md-12\">\n      <h2>or subscribe</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\nimport { Subscription } from './Subscription/Subscription'\n\nexport function Footer(): JSX.Element {\n  return (\n    <section id=\"contact\" className=\"footer col-sm-12 col-md-6\">\n      <h1>let's get in touch!</h1>\n      <div className=\"footer__social\">\n        <a\n          className=\"navbar__social__link\"\n          href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n        </a>\n      </div>\n      <Subscription />\n    </section>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { Nav } from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer'\n\ntype Props = {\n  children: ReactNode\n}\nexport const Layout = ({ children }: Props): JSX.Element => (\n  <div className=\"container--fluid\">\n    <Nav />\n    {children}\n    <Footer />\n  </div>\n)\n","import React, { useState, useContext, FormEvent, ChangeEvent } from 'react'\nimport { Button } from '../../../components/Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { DataServices } from 'services/dataService'\n\ninterface CommentForm {\n  closeForm: () => void\n  postId: string\n}\n\ninterface State {\n  commenter: string\n  email: string\n  comment: string\n  post: string\n}\n\nexport function AddComment(props: CommentForm): JSX.Element {\n  const [state, setState] = useState<State>({\n    commenter: '',\n    email: '',\n    comment: '',\n    post: props.postId,\n  })\n  const { dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n    try {\n      dataService.addComment(state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const { commenter, email, comment } = state\n  return (\n    <div className=\"comment__form\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input className=\"form__input\" type=\"text\" name=\"commenter\" value={commenter} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={3}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { CommentInterface } from '../../Blog/Blog'\nimport { formatDate, formatTime } from '../../../Helper'\nimport { AddComment } from '../AddComment/AddComment'\n\ntype Props = {\n  comments: CommentInterface[]\n  postId: string\n}\n\nexport function Comment(props: Props): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleToggle = (): void => setIsOpen(!isOpen)\n  return (\n    <div className=\"comment\">\n      {props.comments.length ? <p className=\"comment__header\">Comments</p> : ''}\n      {props.comments.length > 0 &&\n        props.comments.map((comment: CommentInterface) => <CommentCard key={comment._id} item={comment} />)}\n      <AddComment closeForm={handleToggle} postId={props.postId} />\n    </div>\n  )\n}\n\nfunction CommentCard(props: { item: CommentInterface }): JSX.Element {\n  const { comment, commenter, createdAt } = props.item\n  return (\n    <div className=\"comment__card\">\n      <div className=\"comment__body\">\n        <div className=\"comment__title\">\n          <strong>{commenter}</strong>\n          <div className=\"comment__date\">\n            {formatDate(createdAt)}\n            &nbsp;{formatTime(createdAt)}\n          </div>\n        </div>\n        <p className=\"comment__text\">{comment}</p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nfunction Loading(): JSX.Element {\n  return <div className=\"loading\">Loading</div>\n}\n\nexport default Loading\n","import React, { useContext, useEffect } from 'react'\nimport { DataContext } from '../../contexts/dataContext'\nimport { convertFromRaw, EditorState, RawDraftContentState } from 'draft-js'\nimport renderHTML from 'react-render-html'\nimport { stateToHTML } from 'draft-js-export-html'\nimport { BlogType } from '../Blog/Blog'\nimport { Comment } from './Comment/Comment'\nimport Loading from '../../components/Loading/Loading'\nimport LinkedinIcon from '../../assets/icons/linkedin-4.svg'\nimport FacebookIcon from '../../assets/icons/facebook-2.svg'\nimport TwitterIcon from '../../assets/icons/twitter-2.svg'\nimport { Layout } from '../../components/Layout/Layout'\nimport { formatDate } from 'Helper'\nimport { RouteComponentProps } from 'react-router-dom'\n\ntype Props = {\n  postId: string\n}\nexport function Post({ match }: RouteComponentProps<Props>): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  const {\n    params: { postId },\n  } = match\n\n  const title: string = postId.split('-').join(' ')\n  useEffect(() => {\n    document.title = title\n  }, [title])\n\n  const post: BlogType | undefined = blogs.find((p: BlogType) => p.content.includes(title))\n\n  if (!post) {\n    return <Loading />\n  }\n  const rawDraft: RawDraftContentState = JSON.parse(post.content)\n\n  const content = convertFromRaw(rawDraft)\n  const editorState: EditorState = EditorState.createWithContent(content)\n  const editorContentHtml = stateToHTML(editorState.getCurrentContent())\n\n  return (\n    <Layout>\n      <div className=\"post row\">\n        <h1 className=\"post__title\">{title}</h1>\n        <div className=\"col-md-8\">\n          <p className=\"post__info\">\n            Published&nbsp;\n            <time>{formatDate(post.createdAt)}</time>\n            &nbsp;|&nbsp;By&nbsp;{post.user.firstName + ' ' + post.user.lastName}\n          </p>\n          <span className=\"post__line\"></span>\n          <div className=\"post__content \">{renderHTML(editorContentHtml)}</div>\n\n          <div className=\"post__social\">\n            <a\n              href={`https://www.facebook.com/sharer/sharer.php?u=https://maryamtavakkoli.com/blog/${postId}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"post__social__icon\"\n            >\n              <img src={FacebookIcon} alt=\"facebook\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.linkedin.com/shareArticle?mini=true&url=https://maryamtavakkoli.com/blog/${postId}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={LinkedinIcon} alt=\"linkedin\" />\n            </a>\n            <a\n              className=\"post__social__icon\"\n              href={`https://www.twitter.com/intent/tweet?url=https://maryamtavakkoli.com/blog/${postId}&text=${title}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img src={TwitterIcon} alt=\"twitter\" />\n            </a>\n          </div>\n          <span className=\"post__line\"></span>\n          <Comment comments={post.comments} postId={post.id} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}