{"version":3,"sources":["components/Dashboard/Profile/Profile.tsx"],"names":["Profile","useContext","DataContext","users","data","dataDispatch","dataService","DataServices","user","initialState","username","firstName","lastName","title","bio","imageUrl","useState","state","setState","handleChange","e","target","name","value","imageId","split","publicId","length","handleSubmit","a","preventDefault","updateUser","_id","console","log","className","src","AvatarIcon","height","alt","onClick","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","error","result","event","type","payload","userId","obj","info","secure_url","onSubmit","htmlFor","onChange","placeholder","rows","text"],"mappings":"mQAgBO,SAASA,IAAwB,IAAD,EAIjCC,qBAAWC,KAFLC,EAF2B,EAEnCC,KAAQD,MACRE,EAHmC,EAGnCA,aAEIC,EAAc,IAAIC,IAAaF,GAE/BG,EAAOL,EAAM,GAEbM,EAA8C,CAClDC,SAAUF,EAAOA,EAAKE,SAAW,GACjCC,UAAWH,EAAOA,EAAKG,UAAY,GACnCC,SAAUJ,EAAOA,EAAKI,SAAW,GACjCC,MAAOL,EAAOA,EAAKK,MAAQ,GAC3BC,IAAKN,EAAOA,EAAKM,IAAM,GACvBC,SAAUP,EAAOA,EAAKO,SAAW,IAfE,EAiBXC,mBAAuBP,GAjBZ,mBAiB9BQ,EAjB8B,KAiBvBC,EAjBuB,KAmB/BC,EAAe,SAACC,GAAwB,IAAD,EACnBA,EAAEC,OAAlBC,EADmC,EACnCA,KAAMC,EAD6B,EAC7BA,MACdL,EAAS,eACJD,EADG,eAELK,EAAOC,MAIJZ,EAAwDM,EAAxDN,UAAWC,EAA6CK,EAA7CL,SAAUF,EAAmCO,EAAnCP,SAAUG,EAAyBI,EAAzBJ,MAAOC,EAAkBG,EAAlBH,IAAKC,EAAaE,EAAbF,SAC7CS,EAAUT,EAAWA,EAASU,MAAM,KAAO,GAC3CC,EAAWF,EAAQG,OAASH,EAAQA,EAAQG,OAAS,GAAGF,MAAM,KAAK,GAAK,GA2BxEG,EAAY,uCAAG,WAAOR,GAAP,SAAAS,EAAA,6DACnBT,EAAEU,iBADiB,kBAGXxB,EAAYyB,WAAWvB,EAAKwB,IAAKf,GAHtB,sDAKjBgB,QAAQC,IAAR,MALiB,wDAAH,sDASlB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAAeC,IAAKrB,GAAsBsB,IAAYC,OAAO,QAAQC,IAAI,WACxF,yBAAKJ,UAAU,2BACb,4BAAQA,UAAU,uBAAuBK,QAxChC,WACfC,OAAeC,WAAWC,iBAC1B,CACEC,UAAWC,cACXC,aAAcD,WACdE,KAAM,CAAC,aAET,SAACC,EAAcC,GACQ,YAAjBA,EAAOC,QACT7C,EAAa,CACX8C,KAAM,oBACNC,QAAS,CAAEC,OAAQ7C,EAAKwB,IAAKsB,IAAK,CAAEvC,SAAUkC,EAAOM,KAAKC,eAE5DlD,EAAYyB,WACVvB,EAAKwB,IACL,CACEjB,SAAUkC,EAAOM,KAAKC,YAExB9B,SAsBA,YAKJ,0BAAMS,UAAU,OAAOsB,SAAU7B,GAC/B,yBAAKO,UAAU,eACb,2BAAOA,UAAU,cAAcuB,QAAQ,aAAvC,cAGA,2BACEvB,UAAU,cACVgB,KAAK,OACL7B,KAAK,YACLC,MAAOZ,EACPgD,SAAUxC,EACVyC,YAAY,gBAGhB,yBAAKzB,UAAU,eACb,2BAAOA,UAAU,cAAcuB,QAAQ,YAAvC,aAGA,2BACEvB,UAAU,cACVgB,KAAK,OACL7B,KAAK,WACLC,MAAOX,EACP+C,SAAUxC,EACVyC,YAAY,eAGhB,yBAAKzB,UAAU,eACb,2BAAOA,UAAU,cAAcuB,QAAQ,YAAvC,SAGA,2BACEvB,UAAU,cACVgB,KAAK,OACL7B,KAAK,WACLC,MAAOb,EACPiD,SAAUxC,EACVyC,YAAY,WAGhB,yBAAKzB,UAAU,eACb,2BAAOA,UAAU,cAAcuB,QAAQ,SAAvC,SAGA,2BACEvB,UAAU,cACVgB,KAAK,OACL7B,KAAK,QACLC,MAAOV,EACP8C,SAAUxC,EACVyC,YAAY,WAGhB,yBAAKzB,UAAU,eACb,2BAAOA,UAAU,cAAcuB,QAAQ,OAAvC,SAGA,8BACEvB,UAAU,iBACV0B,KAAM,EACNvC,KAAK,MACLC,MAAOT,EACP6C,SAAUxC,EACVyC,YAAY,WAGhB,yBAAKzB,UAAU,gBACb,kBAAC,IAAD,CAAQ2B,KAAK","file":"static/js/23.eff62b56.chunk.js","sourcesContent":["import React, { useState, FormEvent, useContext } from 'react'\nimport { Button } from '../../Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport AvatarIcon from '../../../assets/images/avatar.png'\nimport { DataServices } from 'services/dataService'\nimport { User } from 'reducers/dataReducer'\n\ntype InitialState = {\n  firstName: string\n  lastName: string\n  username: string\n  imageUrl?: string\n  title: string\n  bio: string\n}\n\nexport function Profile(): JSX.Element {\n  const {\n    data: { users },\n    dataDispatch,\n  } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n\n  const user = users[0]\n\n  const initialState: Omit<User, '_id' | 'isAdmin'> = {\n    username: user ? user.username : '',\n    firstName: user ? user.firstName : '',\n    lastName: user ? user.lastName : '',\n    title: user ? user.title : '',\n    bio: user ? user.bio : '',\n    imageUrl: user ? user.imageUrl : '',\n  }\n  const [state, setState] = useState<InitialState>(initialState)\n\n  const handleChange = (e: FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n\n  const { firstName, lastName, username, title, bio, imageUrl } = state\n  const imageId = imageUrl ? imageUrl.split('/') : ''\n  const publicId = imageId.length ? imageId[imageId.length - 1].split('.')[0] : ''\n\n  const openWidget = (): void => {\n    ;(window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: ['profile'],\n      },\n      (error: Error, result: any) => {\n        if (result.event === 'success') {\n          dataDispatch({\n            type: 'UPDATE_USER_IMAGE',\n            payload: { userId: user._id, obj: { imageUrl: result.info.secure_url } },\n          })\n          dataService.updateUser(\n            user._id,\n            {\n              imageUrl: result.info.secure_url,\n            },\n            publicId,\n          )\n        }\n      },\n    )\n  }\n\n  const handleSubmit = async (e: FormEvent): Promise<void> => {\n    e.preventDefault()\n    try {\n      await dataService.updateUser(user._id, state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__content\">\n        <div className=\"profile__photo\">\n          <img className=\"profile__img\" src={imageUrl ? imageUrl : AvatarIcon} height=\"200px\" alt=\"avatar\" />\n          <div className=\"profile__photo__overlay\">\n            <button className=\"profile__photo__edit\" onClick={openWidget}>\n              Change\n            </button>\n          </div>\n        </div>\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={handleChange}\n              placeholder=\"First name\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"lastName\">\n              Last Name\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={handleChange}\n              placeholder=\"Last Name\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"username\">\n              Email\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"title\">\n              Title\n            </label>\n            <input\n              className=\"form__input\"\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n              placeholder=\"title\"\n            />\n          </div>\n          <div className=\"form__group\">\n            <label className=\"form__label\" htmlFor=\"bio\">\n              About\n            </label>\n            <textarea\n              className=\"form__textarea\"\n              rows={6}\n              name=\"bio\"\n              value={bio}\n              onChange={handleChange}\n              placeholder=\"About\"\n            ></textarea>\n          </div>\n          <div className=\"form__button\">\n            <Button text=\"Save\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}