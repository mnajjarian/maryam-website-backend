{"version":3,"sources":["Helper/index.ts","assets/icons/linkedin-2.svg","components/Navbar/Navbar.tsx","components/Footer/Subscription/Subscription.tsx","components/Footer/Footer.tsx","components/Layout/ScrollToTop.tsx","custom-hooks/useScroll.ts","components/Layout/Layout.tsx","pages/Home/About/About.tsx","pages/Home/Header/Header.tsx","pages/Home/LatestPost/LatestPost.tsx","pages/Home/Home.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","validateDraft","blockHaveHeader1","blockHaveText","undefined","module","exports","Nav","isLoggedIn","useContext","AuthContext","authState","useState","path","setPath","useEffect","el","document","getElementById","scrollFunc","window","scrollY","classList","add","remove","addEventListener","removeEventListener","pathname","useHistory","location","scrollTo","pathName","element","scrollIntoView","behavior","id","className","to","onClick","state","fromBlog","Subscription","setState","shake","setShake","errorMsg","setErrorMsg","classNames","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","console","log","Button","handleClick","setTimeout","Footer","href","rel","src","LinkedinIcon","alt","ScrollToTop","history","unlisten","listen","scroll","setScroll","handler","useScroll","Layout","children","About","users","DataContext","ref","useRef","current","bio","Header","fullName","firstName","lastName","imageUrl","LatestPost","blogs","blog","slice","map","key","split","join","substring","dateTime","createdAt","Home","loading"],"mappings":"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","file":"static/js/8.aaa9384a.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const validateDraft = (content: string): boolean => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blockHaveHeader1 = blocks.filter((block: RawDraftContentBlock) => block.type === 'header-one')[0]\n  const blockHaveText = blocks\n    .filter((block: RawDraftContentBlock) => block.type === 'unstyled')\n    .filter((b: RawDraftContentBlock) => b.text.length > 1)\n  return blockHaveHeader1 !== undefined && blockHaveText.length > 0\n}\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","import React, { useContext, useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\n\nexport function Nav(): JSX.Element {\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n\n  const [path, setPath] = useState('')\n\n  useEffect(() => {\n    const el = document.getElementById('navbar')\n    const scrollFunc = (): void => {\n      if (window.scrollY >= 50 && el) {\n        el.classList.add('sticky')\n      } else if (el) {\n        el.classList.remove('sticky')\n      }\n    }\n    document.addEventListener('scroll', scrollFunc)\n    return (): void => {\n      document.removeEventListener('scroll', scrollFunc)\n    }\n  }, [])\n\n  const {\n    location: { pathname },\n  } = useHistory()\n\n  const scrollTo = (pathName: string) => (): void => setPath(pathName)\n  const element = document.getElementById(path)\n\n  useEffect(() => {\n    if (element) {\n      return element.scrollIntoView({ behavior: 'smooth', block: 'end' })\n    }\n  }, [path, element])\n\n  return (\n    <div id=\"navbar\" className=\"navbar sticky\">\n      <nav id=\"nav\" className=\"navbar__items\">\n        <ul className=\"navbar__items__list\">\n          <NavLink to={{ pathname: '/' }}>home</NavLink>\n          <NavLink onClick={scrollTo('about')} to={{ pathname: '/', state: { fromBlog: pathname === '/blog' } }}>\n            about\n          </NavLink>\n          <NavLink onClick={scrollTo('contact')} to={{ pathname: pathname }}>\n            contact\n          </NavLink>\n          <NavLink to=\"/blog\">blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport { Button } from '../../Button/Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\nexport function Subscription(): JSX.Element {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = (): void => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = (): void => {\n    if (emailValidation(state)) {\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription col-sm-12 col-md-12\">\n      <h2>or subscribe</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\nimport { Subscription } from './Subscription/Subscription'\n\nexport function Footer(): JSX.Element {\n  return (\n    <section id=\"contact\" className=\"footer col-sm-12 col-md-6\">\n      <h1>let&apos;s get in touch!</h1>\n      <div className=\"footer__social\">\n        <a\n          className=\"navbar__social__link\"\n          href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n        </a>\n      </div>\n      <Subscription />\n    </section>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useScroll } from 'custom-hooks/useScroll'\nimport { useHistory } from 'react-router-dom'\n\nexport function ScrollToTop(): JSX.Element {\n  const history = useHistory()\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return (): void => {\n      unlisten()\n    }\n  }, [history])\n\n  const scroll = useScroll()\n  const handleScroll = (): void => window.scrollTo(0, 0)\n\n  if (scroll < 400) return <div />\n\n  return (\n    <div className=\"scroll\" onClick={handleScroll}>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}\n\nexport default ScrollToTop\n","import { useEffect, useState } from 'react'\n\nexport function useScroll(): number {\n  const [scroll, setScroll] = useState(0)\n  useEffect(() => {\n    const handler = (): void => setScroll(window.scrollY)\n    window.addEventListener('scroll', handler)\n    return (): void => {\n      window.removeEventListener('scroll', handler)\n    }\n  }, [])\n  return scroll\n}\n","import React, { ReactNode } from 'react'\nimport { Nav } from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer'\nimport { ScrollToTop } from './ScrollToTop'\n\ntype Props = {\n  children: ReactNode\n}\nexport const Layout = ({ children }: Props): JSX.Element => {\n  return (\n    <div className=\"container--fluid\">\n      <Nav />\n      {children}\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n","import React, { useContext, useRef, useEffect } from 'react'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { useHistory } from 'react-router-dom'\n\nexport function About(): JSX.Element {\n  const {\n    data: { users },\n  } = useContext(DataContext)\n\n  const history = useHistory<{ fromBlog: boolean }>()\n\n  const ref = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    const {\n      location: { state },\n    } = history\n    if (state && state.fromBlog) {\n      if (ref && ref.current) {\n        ref.current.scrollIntoView({ behavior: 'smooth' })\n      }\n    }\n  }, [history])\n\n  return (\n    <section id=\"about\" ref={ref} className=\"about col-sm-12 col-md-12\">\n      <p className=\"about-p\">{users[0].bio}</p>\n    </section>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../../contexts/dataContext'\n\nexport function Header(): JSX.Element {\n  const { data } = useContext(DataContext)\n  if (!data.users.length) {\n    return <div></div>\n  }\n  const fullName = data.users[0].firstName + ' ' + data.users[0].lastName\n\n  return (\n    <section id=\"home\" className=\"header col-sm-12 col-md-12\">\n      {data.users[0].imageUrl && <img src={data.users[0].imageUrl} alt=\"author\" />}\n      <h1>{fullName}</h1>\n      <p>{data.users[0].title}</p>\n      <a href=\"#about\" className=\"header__scroll\">\n        <div className=\"header__scroll-down\"></div>\n      </a>\n    </section>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DataContext } from 'contexts/dataContext'\nimport { extractFromDraft, formatDate } from 'Helper'\nimport { BlogInterface } from 'reducers/dataReducer'\nimport { Link } from 'react-router-dom'\n\nexport function LatestPost(): JSX.Element {\n  const { data } = useContext(DataContext)\n  const blogs: BlogInterface[] = data.blogs.filter((blog: BlogInterface) => blog.draft !== false).slice(0, 3)\n  if (blogs.length < 1) {\n    return <div />\n  }\n  return (\n    <section className=\"latest col-sm-12 col-md-10\">\n      <h1>the latest blog posts</h1>\n      {blogs.map(blog => (\n        <div key={blog.id} className=\"latest__card\">\n          <div className=\"latest__card__title\">\n            <Link\n              to={`/blog/${extractFromDraft(blog.content)\n                .title.split(' ')\n                .join('-')}`}\n            >\n              {extractFromDraft(blog.content).title}\n            </Link>\n          </div>\n          <p>{extractFromDraft(blog.content).p.substring(0, 250)}...</p>\n          <div className=\"latest__card__date\">\n            <time dateTime={blog.createdAt}>{formatDate(blog.createdAt)}</time>\n          </div>\n        </div>\n      ))}\n    </section>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Layout } from '../../components/Layout/Layout'\nimport { Header } from './Header/Header'\nimport { About } from 'pages/Home/About/About'\nimport { LatestPost } from './LatestPost/LatestPost'\nimport { DataContext } from 'contexts/dataContext'\nimport Loading from 'components/Loading/Loading'\n\nexport function Home(): JSX.Element {\n  const {\n    data: { loading },\n  } = useContext(DataContext)\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <Layout>\n      <Header />\n      <About />\n      <LatestPost />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}