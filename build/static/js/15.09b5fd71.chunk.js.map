{"version":3,"sources":["components/Table/Table.tsx","components/Dashboard/CommentList/CommentList.tsx"],"names":["Table","props","heads","map","head","key","children","CommentRow","item","comment","commenter","email","_id","index","handleDelete","text","handleClick","CommentList","dataDispatch","useContext","DataContext","dataService","DataServices","commentId","a","removeComment","console","log","className","comments"],"mappings":"yGAAA,sDAMO,SAASA,EAAMC,GACpB,OACE,+BACE,+BACE,4BACGA,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACnB,wBAAIC,IAAKD,GAAOA,QAItB,+BAAQH,EAAMK,a,4MCAb,SAASC,EAAWN,GAA+B,IAAD,EAKnDA,EAHFO,KAAQC,EAF6C,EAE7CA,QAASC,EAFoC,EAEpCA,UAAWC,EAFyB,EAEzBA,MAAOC,EAFkB,EAElBA,IACnCC,EAEEZ,EAFFY,MACAC,EACEb,EADFa,aAGF,OACE,4BACE,4BAAKD,EAAQ,GACb,4BAAKJ,GACL,4BAAKC,GACL,4BAAKC,GACL,4BACE,kBAAC,IAAD,CAAQI,KAAK,SAASC,YAAaF,EAAaF,OAMjD,SAASK,EAAYhB,GAA4B,IAC9CiB,EAAiBC,qBAAWC,KAA5BF,aACFG,EAAc,IAAIC,IAAaJ,GAC/BJ,EAAe,SAACS,GAAD,6BAAuB,sBAAAC,EAAA,+EAElCH,EAAYI,cAAcF,GAFQ,sDAIxCG,QAAQC,IAAR,MAJwC,yDAU5C,OACE,yBAAKC,UAAU,YACb,kBAAC,IAAD,CAAO1B,MAJG,CAAC,SAAU,UAAW,YAAa,QAAS,WAKnDD,EAAM4B,SAAS1B,KAAI,SAACM,EAA2BI,GAA5B,OAClB,kBAACN,EAAD,CAAYC,KAAMC,EAASJ,IAAKI,EAAQG,IAAKC,MAAOA,EAAOC,aAAcA","file":"static/js/15.09b5fd71.chunk.js","sourcesContent":["import React, { ReactNode } from 'react'\n\ninterface TableProps {\n  children: ReactNode\n  heads: string[]\n}\nexport function Table(props: TableProps): JSX.Element {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {props.heads.map(head => (\n            <th key={head}>{head}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>{props.children}</tbody>\n    </table>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CommentInterface } from '../../../pages/Blog/Blog'\nimport { Button } from '../../Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { Table } from '../../Table/Table'\nimport { DataServices } from '../../../services/dataService'\n\ntype Props = {\n  comments: CommentInterface[]\n}\n\ntype TableRow = {\n  item: CommentInterface\n  index: number\n  handleDelete: (args: string) => () => void\n}\nexport function CommentRow(props: TableRow): JSX.Element {\n  const {\n    item: { comment, commenter, email, _id },\n    index,\n    handleDelete,\n  } = props\n\n  return (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{comment}</td>\n      <td>{commenter}</td>\n      <td>{email}</td>\n      <td>\n        <Button text=\"Delete\" handleClick={handleDelete(_id)} />\n      </td>\n    </tr>\n  )\n}\n\nexport function CommentList(props: Props): JSX.Element {\n  const { dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const handleDelete = (commentId: string) => async (): Promise<void> => {\n    try {\n      await dataService.removeComment(commentId)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const heads = ['number', 'comment', 'commenter', 'email', 'action']\n\n  return (\n    <div className=\"comments\">\n      <Table heads={heads}>\n        {props.comments.map((comment: CommentInterface, index: number) => (\n          <CommentRow item={comment} key={comment._id} index={index} handleDelete={handleDelete} />\n        ))}\n      </Table>\n    </div>\n  )\n}\n"],"sourceRoot":""}