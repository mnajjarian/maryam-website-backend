{"version":3,"sources":["Helper/index.ts","assets/icons/bubble.svg","assets/icons/linkedin-2.svg","components/Modal/Modal.tsx","assets/icons/facebook-2.svg","assets/icons/linkedin-4.svg","assets/icons/save.svg","assets/icons/twitter-2.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/angel-up.svg","assets/icons/clock-thin.svg","assets/icons/comment.svg","assets/icons/iconCheck.svg","assets/icons/time-3.svg","assets/icons/user.svg","components/Dashboard/PctureChoice/PctureChoice.tsx","components/Dashboard/HeaderStyleDropdown/HeaderStyleDropdown.tsx","components/Dashboard/StyleButton/StyleButton.tsx","components/Dashboard/Gallery/Gallery.tsx","components/Dashboard/Media/Media.tsx","components/Dashboard/StyleTypes/StyleTypes.tsx","components/Dashboard/MediaBlockRenderer/MediaBlockRenderer.tsx","components/Dashboard/Toolbar/Toolbar.tsx","components/Dashboard/RichEditor/RichEditor.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","validateDraft","blockHaveHeader1","blockHaveText","undefined","module","exports","modalRoot","document","createElement","Modal","props","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","className","onClick","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Picture","publicId","handleClick","checked","key","src","alt","readOnly","HeaderStyleDropdown","onToggle","active","headerOptions","value","onChange","event","target","heading","label","style","StyleButton","classNames","onMouseDown","preventDefault","require","Gallery","useContext","DataContext","gallery","dataDispatch","dataService","DataServices","images","reduce","acc","curr","public_id","useState","checkState","setCheckState","openWidget","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","error","result","payload","info","withCb","cb","checkList","push","handleDelete","a","removeImage","console","log","Image","Media","entity","contentState","getEntity","getEntityAt","getData","media","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","editorState","onToggleBlock","onToggleInline","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","currentStyle","getCurrentInlineStyle","has","mediaBlockRenderer","component","editable","Toolbar","isOpen","setIsOpen","toggle","setToggle","handleChange","onAddImage","handleSave","RichUtils","toggleBlockType","toggleInlineStyle","SaveIcon","toolbar__buttons","RichEditor","postId","params","blogPost","blogs","blogState","EditorState","createWithContent","convertFromRaw","createEmpty","setEditorState","history","useHistory","editor","createRef","focusEditor","current","focus","hasText","getBlockMap","first","urlValue","contentStateWithEntitiy","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","setTimeout","variant","editorContent","stringify","convertToRaw","updatePost","createNewPost","userId","users","_id","ref","blockStyleFn","blockRendererFn","handleKeyCommand","command","newState","keyBindingFn","keyCode","onTab","getDefaultKeyBinding","placeholder"],"mappings":"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","file":"static/js/2.e75819e9.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const validateDraft = (content: string): boolean => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blockHaveHeader1 = blocks.filter((block: RawDraftContentBlock) => block.type === 'header-one')[0]\n  const blockHaveText = blocks\n    .filter((block: RawDraftContentBlock) => block.type === 'unstyled')\n    .filter((b: RawDraftContentBlock) => b.text.length > 1)\n  return blockHaveHeader1 !== undefined && blockHaveText.length > 0\n}\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot: HTMLElement = document.createElement('portal')\n\nexport function Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/facebook-2.51f42ec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-4.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.9a35c67b.svg\";","var map = {\n\t\"./Blockquote.svg\": 151,\n\t\"./Bold.svg\": 152,\n\t\"./CodeBlock.svg\": 153,\n\t\"./Image.svg\": 154,\n\t\"./Italic.svg\": 155,\n\t\"./Monospace.svg\": 156,\n\t\"./OL.svg\": 157,\n\t\"./Strike.svg\": 158,\n\t\"./UL.svg\": 159,\n\t\"./Underline.svg\": 160,\n\t\"./angel-up.svg\": 161,\n\t\"./bubble.svg\": 130,\n\t\"./clock-thin.svg\": 162,\n\t\"./comment.svg\": 163,\n\t\"./facebook-2.svg\": 140,\n\t\"./iconCheck.svg\": 164,\n\t\"./linkedin-2.svg\": 131,\n\t\"./linkedin-4.svg\": 141,\n\t\"./save.svg\": 142,\n\t\"./time-3.svg\": 165,\n\t\"./twitter-2.svg\": 143,\n\t\"./user.svg\": 166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 150;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/angel-up.7b28dc10.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.808af9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","import React from 'react'\n\ntype Props = {\n  checked: boolean\n  imgUrl: string\n  publicId: string\n  handleClick: (publicId: string) => () => void\n}\n\nexport function Picture(props: Props): JSX.Element {\n  const { imgUrl, publicId, handleClick, checked } = props\n  return (\n    <div className=\"picture\" key={publicId} onClick={handleClick(publicId)}>\n      <img className=\"picture__image\" src={imgUrl} alt=\"pic\" />\n      <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n    </div>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { BlockTypes } from '../StyleTypes/StyleTypes'\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes\n  active: string\n  onToggle: (value: string) => void\n}\nexport function HeaderStyleDropdown(props: HeaderStyleDropdownProps): JSX.Element {\n  const { onToggle, active, headerOptions } = props\n  const handleToggle = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const value = event.target.value\n    onToggle(value)\n  }\n  return (\n    <div className=\"RichEditor-headers\">\n      <select className=\"RichEditor-headers-select\" value={active} onChange={handleToggle}>\n        <option className=\"RichEditor-headers-option\" key=\"unstyled\" value=\"unstyled\">\n          Normal\n        </option>\n        {headerOptions.map(heading => (\n          <option className=\"RichEditor-headers-option\" key={heading.label} value={heading.style}>\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, { MouseEvent } from 'react'\nimport classNames from 'classnames'\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js'\n\nexport type StyleButtonProps = {\n  active: boolean\n  style: DraftBlockType | DraftInlineStyleType\n  onToggle: (style: DraftBlockType | DraftInlineStyleType) => void\n  label: string\n}\n\nexport function StyleButton(props: StyleButtonProps): JSX.Element {\n  const { active, style, onToggle, label } = props\n  const handleToggle = (e: MouseEvent): void => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  return (\n    <span\n      className={classNames('RichEditor-styleButton', {\n        [`RichEditor-styleButton-${label}`]: true,\n        'RichEditor-activeButton': active,\n      })}\n      onMouseDown={handleToggle}\n    >\n      <img className=\"RichEditor-styleButton-icon\" src={require(`../../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Button } from '../../Button/Button'\nimport { Picture } from '../PctureChoice/PctureChoice'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { GalleryInterface } from '../../../reducers/dataReducer'\nimport { DataServices } from 'services/dataService'\n\ninterface Props {\n  withCb: boolean\n  cb: (publicId: string) => void\n}\n\nexport function Gallery(props: Props): JSX.Element {\n  const {\n    data: { gallery },\n    dataDispatch,\n  } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const images = gallery.reduce((acc: any, curr: GalleryInterface) => {\n    acc[curr.public_id] = false\n    return acc\n  }, [])\n\n  const [checkState, setCheckState] = useState(images)\n\n  const openWidget = (): void => {\n    ;(window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: ['xmas'],\n      },\n      (error: Error, result: any) => {\n        if (result.event === 'success') {\n          dataDispatch({\n            type: 'ADD_GALLERY',\n            payload: result.info,\n          })\n        }\n      },\n    )\n  }\n\n  const handleClick = (publicId: string) => (): void => {\n    if (props.withCb) {\n      props.cb(publicId)\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId],\n    })\n  }\n\n  const checkList = gallery.reduce((acc: string[], curr: GalleryInterface) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id)\n    }\n    return acc\n  }, [])\n  const handleDelete = async (): Promise<void> => {\n    try {\n      await dataService.removeImage(checkList[0])\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? (\n        <div className=\"gallery__empty\">\n          The gallery is empty! <Button text=\"Add picture\" handleClick={openWidget} />{' '}\n        </div>\n      ) : (\n        <>\n          <div>\n            <Button text=\"Add\" handleClick={openWidget} />\n            {checkList[0] && (\n              <Button text={checkList.length > 1 ? 'Delete all' : 'Delete'} handleClick={handleDelete} />\n            )}\n          </div>\n          <div className=\"gallery__contents\">\n            {gallery.map((data: GalleryInterface) => (\n              <Picture\n                checked={checkState[data.public_id]}\n                handleClick={handleClick}\n                key={data.public_id}\n                publicId={data.public_id}\n                imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js'\n\ntype ImageProps = {\n  src: string\n}\ntype MediaProps = {\n  block: ContentBlock\n  contentState: ContentState\n}\nfunction Image(props: ImageProps): JSX.Element | null {\n  if (!!props.src) {\n    return <img src={props.src} alt=\"upload to cloud\" />\n  }\n  return null\n}\nexport function Media(props: MediaProps): JSX.Element {\n  const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0))\n  const { src } = entity.getData()\n  const type = entity.getType()\n\n  let media: JSX.Element = <></>\n\n  if (type === 'image') {\n    media = <Image src={src} />\n  }\n  return media\n}\n","import React from 'react'\nimport { EditorState, DraftBlockType, DraftInlineStyleType } from 'draft-js'\nimport { HeaderStyleDropdown } from '../HeaderStyleDropdown/HeaderStyleDropdown'\nimport { StyleButton } from '../StyleButton/StyleButton'\n\nexport interface BlockType {\n  label: string\n  style: DraftBlockType\n  type: string\n}\n\nexport type BlockTypes = BlockType[]\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: 'Bold', style: 'BOLD', type: 'INLINE_TYPE' },\n  { label: 'Italic', style: 'ITALIC', type: 'INLINE_TYPE' },\n  { label: 'Underline', style: 'UNDERLINE', type: 'INLINE_TYPE' },\n  { label: 'UL', style: 'unordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'OL', style: 'ordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'Blockquote', style: 'blockquote', type: 'BLOCK_TYPE' },\n  { label: 'CodeBlock', style: 'code-block', type: 'BLOCK_TYPE' },\n  { label: 'Monospace', style: 'CODE', type: 'INLINE_TYPE' },\n  { label: 'Strike', style: 'STRIKETHROUGH', type: 'INLINE_TYPE' },\n  { label: 'Image', style: 'image', type: 'IMAGE' },\n]\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: 'Heading 1', style: 'header-one', type: 'BLOCK_TYPE' },\n  { label: 'Heading 2', style: 'header-two', type: 'BLOCK_TYPE' },\n  { label: 'Heading 3', style: 'header-three', type: 'BLOCK_TYPE' },\n  { label: 'Heading 4', style: 'header-four', type: 'BLOCK_TYPE' },\n  { label: 'Heading 5', style: 'header-five', type: 'BLOCK_TYPE' },\n  { label: 'Heading 6', style: 'header-six', type: 'BLOCK_TYPE' },\n]\n\ntype StyleTypesProps = {\n  editorState: EditorState\n  onToggleBlock: (style: DraftBlockType) => void\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void\n}\n\nexport function StyleTypes(props: StyleTypesProps): JSX.Element {\n  const { editorState, onToggleBlock, onToggleInline } = props\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n  const currentStyle = editorState.getCurrentInlineStyle()\n\n  return (\n    <>\n      <HeaderStyleDropdown headerOptions={BLOCK_TYPES_HEADING} active={blockType} onToggle={onToggleBlock} />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={type.type === 'BLOCK_TYPE' ? type.style === blockType : currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={type.type === 'BLOCK_TYPE' ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </>\n  )\n}\n","import { ContentBlock } from 'draft-js'\nimport { Media } from '../Media/Media'\nimport { ReactNode } from 'react'\n\ntype MediaBlock = {\n  component: ReactNode\n  editable: boolean\n}\nexport function mediaBlockRenderer(block: ContentBlock): MediaBlock | null {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false,\n    }\n  }\n  return null\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState } from 'react'\nimport { EditorState, DraftBlockType, RichUtils } from 'draft-js'\nimport classNames from 'classnames'\nimport { Button } from '../../Button/Button'\nimport { StyleTypes } from '../StyleTypes/StyleTypes'\nimport { Modal } from '../../Modal/Modal'\nimport { Gallery } from '../Gallery/Gallery'\nimport SaveIcon from '../../../assets/icons/save.svg'\n\ninterface ToolbarProps {\n  draft: boolean\n  onAddImage: (publicId: string) => void\n  editorState: EditorState\n  handleChange: (editorState: EditorState) => void\n  handleSave: (variant: string) => () => void\n}\n\nexport function Toolbar(props: ToolbarProps): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const { editorState, handleChange, onAddImage, handleSave, draft } = props\n\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  const handleCb = (publicId: string): void => {\n    onAddImage(publicId)\n    setIsOpen(false)\n  }\n  const handleToggle = (): void => setToggle(!toggle)\n  const toggleBlockType = (blockType: DraftBlockType): void => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  const toggleInlineStyle = (style: DraftBlockType): void => {\n    if (style === 'image') {\n      setIsOpen(!isOpen)\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style))\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes editorState={editorState} onToggleBlock={toggleBlockType} onToggleInline={toggleInlineStyle} />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={SaveIcon} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          'toolbar__buttons-hide': !toggle,\n        })}\n      >\n        <Button text={!draft ? 'draft' : 'save'} handleClick={handleSave('save')} />\n        <Button text=\"publish\" handleClick={handleSave('publish')} />\n      </div>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Gallery withCb={true} cb={handleCb} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n","import React, { useState, KeyboardEvent, createRef, useContext } from 'react'\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  convertToRaw,\n  AtomicBlockUtils,\n  convertFromRaw,\n} from 'draft-js'\nimport { Toolbar } from '../Toolbar/Toolbar'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { mediaBlockRenderer } from '../MediaBlockRenderer/MediaBlockRenderer'\nimport { useHistory, RouteComponentProps } from 'react-router-dom'\nimport { getBlockStyle, validateDraft } from 'Helper'\nimport { DataServices } from 'services/dataService'\nimport { BlogInterface } from 'reducers/dataReducer'\n\ntype HandleKeyCommand = 'handled' | 'not-handled'\n\ntype Props = {\n  postId: string\n}\nexport function RichEditor({ match }: RouteComponentProps<Props>): JSX.Element {\n  const {\n    params: { postId },\n  } = match\n\n  const { data, dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n  const blogPost = postId ? data.blogs.filter((b: BlogInterface) => b.id === postId)[0] : null\n  const blogState: EditorState = blogPost\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(blogPost.content)))\n    : EditorState.createEmpty()\n\n  const [editorState, setEditorState] = useState<EditorState>(blogState)\n\n  const history = useHistory()\n\n  const editor = createRef<Editor>()\n  const focusEditor = (): void => {\n    if (editor.current) {\n      editor.current.focus()\n    }\n  }\n  const handleChange = (editorState: EditorState): void => {\n    setEditorState(editorState)\n  }\n\n  const handleSave = (variant: string) => (): void => {\n    console.log(variant)\n    const content = editorState.getCurrentContent()\n    const editorContent = JSON.stringify(convertToRaw(content))\n    if (!validateDraft(editorContent)) {\n      focusEditor()\n    } else if (!postId) {\n      dataService.createNewPost({\n        content: editorContent,\n        userId: data.users[0]._id,\n        draft: variant === 'draft',\n      })\n    } else if (blogPost && variant === 'save') {\n      dataService.updatePost(postId, { ...blogPost, content: editorContent, draft: true })\n    } else if (blogPost && variant === 'publish') {\n      dataService.updatePost(postId, { ...blogPost, content: editorContent, draft: false })\n    }\n    history.push('/dashboard')\n  }\n\n  const handleKeyCommand = (command: DraftEditorCommand, editorState: EditorState): HandleKeyCommand => {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n\n    if (newState) {\n      handleChange(newState)\n      return 'handled'\n    } else {\n      return 'not-handled'\n    }\n  }\n  const mapKeyToEditorCommand = (e: KeyboardEvent): DraftEditorCommand | null => {\n    if (e.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4)\n      if (newEditorState !== editorState) {\n        handleChange(newEditorState)\n      }\n      return null\n    }\n    return getDefaultKeyBinding(e)\n  }\n\n  const onAddImage = (publicId: string): void => {\n    const urlValue = `https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${publicId}.jpg`\n    const contentState = editorState.getCurrentContent()\n    const contentStateWithEntitiy = contentState.createEntity('image', 'IMMUTABLE', { src: urlValue })\n    const entityKey = contentStateWithEntitiy.getLastCreatedEntityKey()\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntitiy,\n    })\n    setEditorState(AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' '))\n    setTimeout(() => focusEditor(), 0)\n  }\n\n  const contentState = editorState.getCurrentContent()\n  let className = 'RichEditor-editor'\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    ) {\n      className += ' RichEditor-hidePlaceholder'\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <div className=\"RichEditor\">\n        <Toolbar\n          draft={(blogPost && blogPost.draft) || false}\n          onAddImage={onAddImage}\n          editorState={editorState}\n          handleChange={handleChange}\n          handleSave={handleSave}\n        />\n        <div className={className} onClick={focusEditor}>\n          <Editor\n            ref={editor}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={mediaBlockRenderer}\n            editorState={editorState}\n            handleKeyCommand={handleKeyCommand}\n            keyBindingFn={mapKeyToEditorCommand}\n            onChange={handleChange}\n            placeholder=\"Tell a story...\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}