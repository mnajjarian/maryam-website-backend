{"version":3,"sources":["Helper/index.ts","assets/icons/bubble.svg","assets/icons/linkedin-2.svg","components/Navbar/Navbar.tsx","components/Footer/Subscription/Subscription.tsx","components/Footer/Footer.tsx","components/Layout/Layout.tsx","pages/Blog/CardPost/CardPost.tsx","pages/Blog/BlogBody/BlogBody.tsx","pages/Blog/Jumbotron/Jumbotrun.tsx","pages/Blog/Blog.tsx"],"names":["formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","text","length","title","type","p","imgUrl","entityMap","data","url","validateDraft","blockHaveHeader1","blockHaveText","console","log","undefined","module","exports","Nav","React","useState","toggle","setToggle","isLoggedIn","useContext","AuthContext","authState","useEffect","el","document","getElementById","scrollFunc","window","scrollY","classList","add","remove","addEventListener","removeEventListener","id","className","classNames","navbar__menu","navbar__menu__change","onClick","navbar__items","show","href","to","Subscription","state","setState","shake","setShake","errorMsg","setErrorMsg","subscription__error","subscription__shake","name","placeholder","onChange","e","target","value","onBlur","Button","handleClick","setTimeout","Footer","rel","src","LinkedinIcon","alt","Layout","children","CardPost","props","post","split","join","comments","IconBubble","dateTime","createdAt","BlogBody","blogs","DataContext","map","key","Jumbotron","Blog"],"mappings":"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","file":"static/js/7.13c28992.chunk.js","sourcesContent":["import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const validateDraft = (content: string): boolean => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blockHaveHeader1 = blocks.filter((block: RawDraftContentBlock) => block.type === 'header-one')[0]\n  const blockHaveText = blocks\n    .filter((block: RawDraftContentBlock) => block.type === 'unstyled')\n    .filter((b: RawDraftContentBlock) => b.text.length > 1)\n  console.log(blockHaveText)\n  return blockHaveHeader1 !== undefined && blockHaveText.length > 0\n}\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.4c13d5e4.svg\";","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useContext, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../contexts/authContext'\n\nexport function Nav(): JSX.Element {\n  const [toggle, setToggle] = React.useState<boolean>(false)\n  const handleToggle = (): void => setToggle(!toggle)\n  const {\n    authState: { isLoggedIn },\n  } = useContext(AuthContext)\n  useEffect(() => {\n    const el = document.getElementById('navbar')\n    const scrollFunc = (): void => {\n      if (window.scrollY >= 50 && el) {\n        el.classList.add('sticky')\n      } else if (el) {\n        el.classList.remove('sticky')\n      }\n    }\n    document.addEventListener('scroll', scrollFunc)\n    return (): void => {\n      document.removeEventListener('scroll', scrollFunc)\n    }\n  }, [])\n  return (\n    <div id=\"navbar\" className=\"navbar sticky\">\n      <div\n        className={classNames({\n          navbar__menu: true,\n          navbar__menu__change: toggle,\n        })}\n        onClick={handleToggle}\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <nav\n        id=\"nav\"\n        className={classNames({\n          navbar__items: true,\n          show: !toggle,\n        })}\n      >\n        <ul className=\"navbar__items__list\">\n          <a href=\"/#home\">home</a>\n          <a href=\"/#about\">about</a>\n          <a href=\"/#contact\">contact</a>\n          <NavLink to=\"/blog\">blog</NavLink>\n          {isLoggedIn && <NavLink to=\"/dashboard\">Dashboard</NavLink>}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, ChangeEvent } from 'react'\nimport { Button } from '../../Button/Button'\nimport { emailValidation } from 'Helper'\nimport classNames from 'classnames'\n\nexport function Subscription(): JSX.Element {\n  const [state, setState] = useState('')\n  const [shake, setShake] = useState(false)\n  const [errorMsg, setErrorMsg] = useState<string | null>(null)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setState(e.target.value)\n  }\n\n  const validateEmail = (): void => {\n    console.log('blur')\n    if (state.length > 0 && !emailValidation(state)) {\n      setErrorMsg('Please enter a valid email address')\n    } else {\n      setErrorMsg(null)\n    }\n  }\n  const handleSubmit = (): void => {\n    if (emailValidation(state)) {\n    } else {\n      setShake(true)\n      setTimeout(() => {\n        setShake(false)\n      }, 500)\n    }\n  }\n  return (\n    <div className=\"subscription col-sm-12 col-md-12\">\n      <h2>or subscribe</h2>\n      <div className=\"subscription__text\">\n        Recive updates and latest post direct in your email, Simply enter your email below\n      </div>\n      <div className=\"form\">\n        <p\n          className={classNames({\n            subscription__error: true,\n            subscription__shake: shake,\n          })}\n        >\n          {errorMsg}\n        </p>\n        <div className=\"form__group\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n            onBlur={validateEmail}\n          />\n          <Button text=\"submit\" handleClick={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport LinkedinIcon from '../../assets/icons/linkedin-2.svg'\nimport { Subscription } from './Subscription/Subscription'\n\nexport function Footer(): JSX.Element {\n  return (\n    <section id=\"contact\" className=\"footer col-sm-12 col-md-6\">\n      <h1>let's get in touch!</h1>\n      <div className=\"footer__social\">\n        <a\n          className=\"navbar__social__link\"\n          href=\"https://www.linkedin.com/in/maryam-tavakoli/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img className=\"navbar__social__icon\" src={LinkedinIcon} alt=\"icon\" />\n        </a>\n      </div>\n      <Subscription />\n    </section>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { Nav } from '../Navbar/Navbar'\nimport { Footer } from '../Footer/Footer'\n\ntype Props = {\n  children: ReactNode\n}\nexport const Layout = ({ children }: Props): JSX.Element => (\n  <div className=\"container--fluid\">\n    <Nav />\n    {children}\n    <Footer />\n  </div>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { RawDraftContentBlock, RawDraftContentState } from 'draft-js'\nimport { BlogType } from '../Blog'\nimport { formatDate } from '../../../Helper'\nimport IconBubble from '../../../assets/icons/bubble.svg'\n\ntype PostProps = {\n  post: BlogType\n  type?: string\n}\n\nexport function CardPost(props: PostProps): JSX.Element {\n  const {\n    post,\n    post: { content },\n  } = props\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  //const imgUrl: string = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <Link to={`/blog/${title.text.split(' ').join('-')}`} className=\"card__title\">\n          <h5>{title.text}</h5>\n        </Link>\n        {post.comments.length > 0 && (\n          <div className=\"card__icon\">\n            <span>{post.comments.length}</span>\n            <img src={IconBubble} alt=\"comment icon\" />\n          </div>\n        )}\n      </div>\n      <div className=\"card__text\">{p.text}</div>\n      <div className=\"card__footer\">\n        <time dateTime={post.createdAt}>{formatDate(post.createdAt)}</time>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CardPost } from '../CardPost/CardPost'\nimport { BlogType } from '../Blog'\nimport { DataContext } from '../../../contexts/dataContext'\n\nexport function BlogBody(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n  if (!blogs.length) {\n    return (\n      <div className=\"blog\">\n        <div className=\"blog__empty\">\n          <div>There is nothing here!</div>\n          <div>\n            You can create new post through your{' '}\n            <a className=\"blog__empty__link\" href=\"/dashboard/create\">\n              Dashboard\n            </a>\n            .\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"row articles\">\n      <div className=\"col-sm-12 col-md-8\">\n        {blogs.map((post: BlogType) => (\n          <CardPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport function Jumbotron(): JSX.Element {\n  return (\n    <section className=\"row jumbotron\">\n      <div className=\"col-sm-12 col-md-8\">\n        <h1 className=\"jumbotron__title\">articles</h1>\n        <p className=\"jumbotron__text\">\n          <em>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua. Fames ac turpis egestas integer eget. Feugiat nibh sed pulvinar proin gravida\n            hendrerit. Vitae justo eget magna fermentum. Aliquet porttitor lacus luctus accumsan tortor posuere ac ut.\n            Venenatis urna cursus eget nunc scelerisque viverra mauris in.\n          </em>\n        </p>\n      </div>\n    </section>\n  )\n}\n","import React, { useContext } from 'react'\nimport { BlogBody } from './BlogBody/BlogBody'\nimport { DataContext } from '../../contexts/dataContext'\nimport { User } from 'reducers/dataReducer'\nimport { Layout } from '../../components/Layout/Layout'\nimport { Jumbotron } from './Jumbotron/Jumbotrun'\n\nexport interface CommentInterface {\n  _id: string\n  comment: string\n  post: string\n  commenter: string\n  email: string\n  createdAt: string\n}\nexport interface BlogType {\n  id: string\n  content: string\n  user: User\n  createdAt: string\n  updatedAt: string\n  comments: CommentInterface[]\n}\n\nexport function Blog(): JSX.Element {\n  const {\n    data: { blogs },\n  } = useContext(DataContext)\n\n  if (!blogs.length) {\n    return <div></div>\n  }\n\n  return (\n    <Layout>\n      <Jumbotron />\n      <BlogBody />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}