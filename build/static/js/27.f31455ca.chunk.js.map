{"version":3,"sources":["pages/Post/AddComment/AddComment.tsx"],"names":["AddComment","props","useState","commenter","email","comment","post","postId","state","setState","dataDispatch","useContext","DataContext","dataService","DataServices","handleChange","e","target","name","value","className","onSubmit","preventDefault","addComment","error","console","log","htmlFor","type","onChange","rows","cols","text"],"mappings":"6NAiBO,SAASA,EAAWC,GAAkC,IAAD,EAChCC,mBAAgB,CACxCC,UAAW,GACXC,MAAO,GACPC,QAAS,GACTC,KAAML,EAAMM,SAL4C,mBACnDC,EADmD,KAC5CC,EAD4C,KAOlDC,EAAiBC,qBAAWC,KAA5BF,aACFG,EAAc,IAAIC,IAAaJ,GAE/BK,EAAe,SAACC,GAAkE,IAAD,EAC7DA,EAAEC,OAAlBC,EAD6E,EAC7EA,KAAMC,EADuE,EACvEA,MACdV,EAAS,eACJD,EADG,eAELU,EAAOC,MAYJhB,EAA8BK,EAA9BL,UAAWC,EAAmBI,EAAnBJ,MAAOC,EAAYG,EAAZH,QAC1B,OACE,yBAAKe,UAAU,iBACb,0BAAMA,UAAU,OAAOC,SAZN,SAACL,GACpBA,EAAEM,iBACF,IACET,EAAYU,WAAWf,GACvB,MAAOgB,GACPC,QAAQC,IAAIF,MAQV,+CACA,yBAAKJ,UAAU,eACb,2BAAOA,UAAU,cAAcO,QAAQ,aAAvC,QAGA,2BAAOP,UAAU,cAAcQ,KAAK,OAAOV,KAAK,YAAYC,MAAOhB,EAAW0B,SAAUd,KAE1F,yBAAKK,UAAU,eACb,2BAAOA,UAAU,cAAcO,QAAQ,SAAvC,SAGA,2BAAOP,UAAU,cAAcQ,KAAK,QAAQV,KAAK,QAAQC,MAAOf,EAAOyB,SAAUd,KAEnF,yBAAKK,UAAU,eACb,2BAAOA,UAAU,cAAcO,QAAQ,WAAvC,WAGA,8BACEP,UAAU,iBACVF,KAAK,UACLC,MAAOd,EACPwB,SAAUd,EACVe,KAAM,EACNC,KAAM,MAGV,yBAAKX,UAAU,gBACb,kBAAC,IAAD,CAAQY,KAAK","file":"static/js/27.f31455ca.chunk.js","sourcesContent":["import React, { useState, useContext, FormEvent, ChangeEvent } from 'react'\nimport { Button } from '../../../components/Button/Button'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { DataServices } from 'services/dataService'\n\ninterface CommentForm {\n  closeForm: () => void\n  postId: string\n}\n\ninterface State {\n  commenter: string\n  email: string\n  comment: string\n  post: string\n}\n\nexport function AddComment(props: CommentForm): JSX.Element {\n  const [state, setState] = useState<State>({\n    commenter: '',\n    email: '',\n    comment: '',\n    post: props.postId,\n  })\n  const { dataDispatch } = useContext(DataContext)\n  const dataService = new DataServices(dataDispatch)\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const { name, value } = e.target\n    setState({\n      ...state,\n      [name]: value,\n    })\n  }\n  const handleSubmit = (e: FormEvent): void => {\n    e.preventDefault()\n    try {\n      dataService.addComment(state)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const { commenter, email, comment } = state\n  return (\n    <div className=\"comment__form\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h3>Leave a comment</h3>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"commentor\">\n            Name\n          </label>\n          <input className=\"form__input\" type=\"text\" name=\"commenter\" value={commenter} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"email\">\n            Email\n          </label>\n          <input className=\"form__input\" type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n        </div>\n        <div className=\"form__group\">\n          <label className=\"form__label\" htmlFor=\"comment\">\n            Comment\n          </label>\n          <textarea\n            className=\"form__textarea\"\n            name=\"comment\"\n            value={comment}\n            onChange={handleChange}\n            rows={3}\n            cols={12}\n          />\n        </div>\n        <div className=\"form__button\">\n          <Button text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n"],"sourceRoot":""}