{"version":3,"sources":["components/Button/index.tsx","Helper/index.ts","../node_modules/classnames/index.js","components/Modal/index.tsx","assets/icons/linkedin-2.svg","assets/icons/time-3.svg","assets/icons/user.svg","assets/icons/bubble.svg","assets/icons/facebook-2.svg","assets/icons/save.svg","assets/icons/twitter-2.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/Blockquote.svg","assets/icons/Bold.svg","assets/icons/CodeBlock.svg","assets/icons/Image.svg","assets/icons/Italic.svg","assets/icons/Monospace.svg","assets/icons/OL.svg","assets/icons/Strike.svg","assets/icons/UL.svg","assets/icons/Underline.svg","assets/icons/clock-thin.svg","assets/icons/comment.svg","assets/icons/iconCheck.svg","components/Dashboard/HeaderStyleDropdown/index.tsx","components/Dashboard/StyleButton/index.tsx","components/Dashboard/PctureChoice/index.tsx","components/Dashboard/StyleTypes/index.tsx","components/Dashboard/Gallery/index.tsx","components/Dashboard/Media/index.tsx","components/Dashboard/Toolbar/index.tsx","components/Dashboard/MediaBlockRenderer/index.tsx","components/Dashboard/Editor/index.tsx"],"names":["Button","text","handleClick","type","className","onClick","formatDate","date","Intl","DateTimeFormat","year","month","day","format","Date","formatTime","hour","minute","emailValidation","email","match","getBlockStyle","block","getType","extractFromDraft","content","draft","JSON","parse","blocksWithText","blocks","filter","b","length","title","p","imgUrl","entityMap","data","url","formatDateAndTime","second","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","modalRoot","document","createElement","Modal","props","toggleModal","children","useEffect","body","appendChild","removeChild","createPortal","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","HeaderStyleDropdown","onToggle","active","headerOptions","value","onChange","event","target","heading","label","style","StyleButton","onMouseDown","preventDefault","src","require","alt","Picture","publicId","checked","readOnly","BLOCK_TYPES","BLOCK_TYPES_HEADING","StyleTypes","editorState","onToggleBlock","onToggleInline","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","currentStyle","getCurrentInlineStyle","has","Gallery","useContext","DataContext","gallery","dataDispatch","dataService","images","reduce","acc","curr","public_id","useState","checkState","setCheckState","openWidget","window","cloudinary","openUploadWidget","cloudName","process","uploadPreset","tags","error","result","payload","info","withCb","cb","checkList","removeImage","Image","Media","entity","contentState","getEntity","getEntityAt","getData","media","Toolbar","isOpen","setIsOpen","toggle","setToggle","handleChange","onAddImage","handleSave","variant","RichUtils","toggleBlockType","toggleInlineStyle","SaveIcon","toolbar__buttons","mediaBlockRenderer","component","editable","RichEditor","blogPost","blogId","blogs","blogState","EditorState","createWithContent","convertFromRaw","createEmpty","setEditorState","stringify","convertToRaw","editorContent","setEditorContent","history","useHistory","editor","createRef","focusEditor","current","focus","hasText","getBlockMap","first","urlValue","contentStateWithEntitiy","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","setTimeout","createNewPost","userId","users","_id","updatePost","ref","blockStyleFn","blockRendererFn","handleKeyCommand","command","newState","keyBindingFn","keyCode","onTab","getDefaultKeyBinding","placeholder"],"mappings":"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","file":"static/js/2.2fd255ef.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ButtonProps {\n    text: string;\n    handleClick?: () => void;\n}\nconst Button: React.FC<ButtonProps> = ({ text, handleClick }) => {    \n    return(\n        <button type=\"submit\" className=\"button\" onClick={handleClick} >{text}</button>\n    );\n};\n\nexport default Button;","import { RawDraftContentState, RawDraftContentBlock } from 'draft-js'\nimport { ContentBlock } from 'draft-js'\n\ntype DraftType = {\n  title: string\n  p: string\n  url: string\n}\n\nexport const formatDate = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n  }).format(new Date(date))\n\nexport const formatTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    hour: 'numeric',\n    minute: 'numeric',\n  }).format(new Date(date))\nexport const emailValidation = (email: string): RegExpMatchArray | null =>\n  email.match(/^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-\\\\.]+)\\.([a-zA-Z]{2,5})$/)\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    case 'unstyled':\n      return 'RichEditor-paragraph'\n    case 'CODE':\n      return 'RichEditor-blockcode'\n    case 'STRIKETHROUGH':\n      return 'RichEditor-strikethrough'\n    default:\n      return ''\n  }\n}\nexport const extractFromDraft = (content: string): DraftType => {\n  const draft: RawDraftContentState = JSON.parse(content)\n  const { blocks } = draft\n  const blocksWithText = blocks.filter((b: RawDraftContentBlock) => b.text.length)\n  const title = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'header-one')[0]\n  const p = blocksWithText.filter((b: RawDraftContentBlock) => b.type === 'unstyled')[0]\n  const imgUrl = draft.entityMap[0] ? draft.entityMap[0].data['src'] : null\n  return {\n    title: title.text,\n    p: p.text,\n    url: imgUrl,\n  }\n}\n\nexport const formatDateAndTime = (date: string): string =>\n  new Intl.DateTimeFormat('en-us', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }).format(new Date(date))\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { useEffect, ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  children: ReactNode\n  toggleModal: () => void\n}\n\nconst modalRoot = document.createElement('portal')\nfunction Modal(props: Props): React.ReactElement | null {\n  const { toggleModal, children } = props\n  useEffect(() => {\n    document.body.appendChild(modalRoot)\n\n    return (): void => {\n      document.body.removeChild(modalRoot)\n    }\n  }, [])\n\n  return createPortal(\n    <div className=\"modal\">\n      <div className=\"modal__overlay\" onClick={toggleModal} />\n      <div className=\"modal__body\">{children}</div>\n    </div>,\n    modalRoot as HTMLElement,\n  )\n}\n\nexport default Modal\n","module.exports = __webpack_public_path__ + \"static/media/linkedin-2.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/time-3.9c3f305b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.8702dc53.svg\";","module.exports = __webpack_public_path__ + \"static/media/bubble.3eaa3469.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-2.bfe75be2.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.70f9c9cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-2.cb645bcf.svg\";","var map = {\n\t\"./Blockquote.svg\": 196,\n\t\"./Bold.svg\": 197,\n\t\"./CodeBlock.svg\": 198,\n\t\"./Image.svg\": 199,\n\t\"./Italic.svg\": 200,\n\t\"./Monospace.svg\": 201,\n\t\"./OL.svg\": 202,\n\t\"./Strike.svg\": 203,\n\t\"./UL.svg\": 204,\n\t\"./Underline.svg\": 205,\n\t\"./bubble.svg\": 178,\n\t\"./clock-thin.svg\": 206,\n\t\"./comment.svg\": 207,\n\t\"./facebook-2.svg\": 185,\n\t\"./iconCheck.svg\": 208,\n\t\"./linkedin-2.svg\": 173,\n\t\"./save.svg\": 186,\n\t\"./time-3.svg\": 176,\n\t\"./twitter-2.svg\": 187,\n\t\"./user.svg\": 177\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 195;","module.exports = __webpack_public_path__ + \"static/media/Blockquote.5244267c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bold.24e86c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/CodeBlock.a2745814.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image.0195355f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italic.431c4f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Monospace.a4c355c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/OL.735619e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Strike.e35d7f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/UL.ff2d3d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/Underline.2f0cc38b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock-thin.565fe25f.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.808af9ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconCheck.a0b8efcf.svg\";","import React, { ChangeEvent } from 'react'\nimport { BlockTypes } from '../StyleTypes'\ninterface HeaderStyleDropdownProps {\n  headerOptions: BlockTypes\n  active: string\n  onToggle: (value: string) => void\n}\nfunction HeaderStyleDropdown(props: HeaderStyleDropdownProps): JSX.Element {\n  const { onToggle, active, headerOptions } = props\n  const handleToggle = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const value = event.target.value\n    onToggle(value)\n  }\n  return (\n    <div className=\"RichEditor-headers\">\n      <select className=\"RichEditor-headers-select\" value={active} onChange={handleToggle}>\n        <option className=\"RichEditor-headers-option\" key=\"unstyled\" value=\"unstyled\">\n          Normal\n        </option>\n        {headerOptions.map(heading => (\n          <option className=\"RichEditor-headers-option\" key={heading.label} value={heading.style}>\n            {heading.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nexport default HeaderStyleDropdown\n","import React, { MouseEvent } from 'react'\nimport classNames from 'classnames'\nimport { DraftBlockType, DraftInlineStyleType } from 'draft-js'\n\nexport type StyleButtonProps = {\n  active: boolean\n  style: DraftBlockType | DraftInlineStyleType\n  onToggle: (style: DraftBlockType | DraftInlineStyleType) => void\n  label: string\n}\n\nfunction StyleButton(props: StyleButtonProps): JSX.Element {\n  const { active, style, onToggle, label } = props\n  const handleToggle = (e: MouseEvent): void => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  return (\n    <span\n      className={classNames('RichEditor-styleButton', {\n        [`RichEditor-styleButton-${label}`]: true,\n        'RichEditor-activeButton': active,\n      })}\n      onMouseDown={handleToggle}\n    >\n      <img className=\"RichEditor-styleButton-icon\" src={require(`../../../assets/icons/${label}.svg`)} alt=\"icon\" />\n    </span>\n  )\n}\n\nexport default StyleButton\n","import React from 'react'\n\ntype Props = {\n  checked: boolean\n  imgUrl: string\n  publicId: string\n  handleClick: (publicId: string) => () => void\n}\n\nexport function Picture(props: Props): JSX.Element {\n  const { imgUrl, publicId, handleClick, checked } = props\n  return (\n    <div className=\"picture\" key={publicId} onClick={handleClick(publicId)}>\n      <img className=\"picture__image\" src={imgUrl} alt=\"pic\" />\n      <input type=\"checkbox\" readOnly checked={checked} className=\"picture__checked\" />\n    </div>\n  )\n}\n\nexport default Picture\n","import React from 'react'\nimport { EditorState, DraftBlockType, DraftInlineStyleType } from 'draft-js'\nimport HeaderStyleDropdown from '../HeaderStyleDropdown'\nimport StyleButton from '../StyleButton'\n\nexport interface BlockType {\n  label: string\n  style: DraftBlockType\n  type: string\n}\n\nexport type BlockTypes = BlockType[]\n\nconst BLOCK_TYPES: BlockTypes = [\n  { label: 'Bold', style: 'BOLD', type: 'INLINE_TYPE' },\n  { label: 'Italic', style: 'ITALIC', type: 'INLINE_TYPE' },\n  { label: 'Underline', style: 'UNDERLINE', type: 'INLINE_TYPE' },\n  { label: 'UL', style: 'unordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'OL', style: 'ordered-list-item', type: 'BLOCK_TYPE' },\n  { label: 'Blockquote', style: 'blockquote', type: 'BLOCK_TYPE' },\n  { label: 'CodeBlock', style: 'code-block', type: 'BLOCK_TYPE' },\n  { label: 'Monospace', style: 'CODE', type: 'INLINE_TYPE' },\n  { label: 'Strike', style: 'STRIKETHROUGH', type: 'INLINE_TYPE' },\n  { label: 'Image', style: 'image', type: 'IMAGE' },\n]\n\nconst BLOCK_TYPES_HEADING: BlockTypes = [\n  { label: 'Heading 1', style: 'header-one', type: 'BLOCK_TYPE' },\n  { label: 'Heading 2', style: 'header-two', type: 'BLOCK_TYPE' },\n  { label: 'Heading 3', style: 'header-three', type: 'BLOCK_TYPE' },\n  { label: 'Heading 4', style: 'header-four', type: 'BLOCK_TYPE' },\n  { label: 'Heading 5', style: 'header-five', type: 'BLOCK_TYPE' },\n  { label: 'Heading 6', style: 'header-six', type: 'BLOCK_TYPE' },\n]\n\ntype StyleTypesProps = {\n  editorState: EditorState\n  onToggleBlock: (style: DraftBlockType) => void\n  onToggleInline: (style: DraftBlockType | DraftInlineStyleType) => void\n}\n\nfunction StyleTypes(props: StyleTypesProps): JSX.Element {\n  const { editorState, onToggleBlock, onToggleInline } = props\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n  const currentStyle = editorState.getCurrentInlineStyle()\n\n  return (\n    <>\n      <HeaderStyleDropdown headerOptions={BLOCK_TYPES_HEADING} active={blockType} onToggle={onToggleBlock} />\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          active={type.type === 'BLOCK_TYPE' ? type.style === blockType : currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={type.type === 'BLOCK_TYPE' ? onToggleBlock : onToggleInline}\n          style={type.style}\n          key={type.label}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default StyleTypes\n","import React, { useContext, useState } from 'react'\nimport Button from '../../Button'\nimport Picture from '../PctureChoice'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { GalleryInterface } from '../../../reducers/dataReducer'\n\ninterface Props {\n  withCb: boolean\n  cb: (publicId: string) => void\n}\n\nfunction Gallery(props: Props): JSX.Element {\n  const {\n    data: { gallery },\n    dataDispatch,\n    dataService,\n  } = useContext(DataContext)\n\n  const images = gallery.reduce((acc: any, curr: GalleryInterface) => {\n    acc[curr.public_id] = false\n    return acc\n  }, [])\n\n  const [checkState, setCheckState] = useState(images)\n\n  const openWidget = (): void => {\n    ;(window as any).cloudinary.openUploadWidget(\n      {\n        cloudName: process.env.REACT_APP_CLOUDNAME,\n        uploadPreset: process.env.REACT_APP_PRESET,\n        tags: ['xmas'],\n      },\n      (error: Error, result: any) => {\n        if (result.event === 'success') {\n          dataDispatch({\n            type: 'ADD_GALLERY',\n            payload: result.info,\n          })\n        }\n      },\n    )\n  }\n\n  const handleClick = (publicId: string) => (): void => {\n    if (props.withCb) {\n      props.cb(publicId)\n    }\n    setCheckState({\n      ...checkState,\n      [publicId]: !checkState[publicId],\n    })\n  }\n\n  const checkList = gallery.reduce((acc: string[], curr: GalleryInterface) => {\n    if (checkState[curr.public_id]) {\n      acc.push(curr.public_id)\n    }\n    return acc\n  }, [])\n  const handleDelete = (): void => {\n    dataService.removeImage(checkList[0])\n  }\n\n  return (\n    <div className=\"gallery\">\n      {!gallery.length ? (\n        <div className=\"gallery__empty\">\n          The gallery is empty! <Button text=\"Add picture\" handleClick={openWidget} />{' '}\n        </div>\n      ) : (\n        <>\n          <div>\n            <Button text=\"Add\" handleClick={openWidget} />\n            {checkList[0] && (\n              <Button text={checkList.length > 1 ? 'Delete all' : 'Delete'} handleClick={handleDelete} />\n            )}\n          </div>\n          <div className=\"gallery__contents\">\n            {gallery.map((data: GalleryInterface) => (\n              <Picture\n                checked={checkState[data.public_id]}\n                handleClick={handleClick}\n                key={data.public_id}\n                publicId={data.public_id}\n                imgUrl={`https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${data.public_id}.jpg`}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Gallery\n","import React from 'react'\nimport { EntityInstance, ContentBlock, ContentState } from 'draft-js'\n\ntype ImageProps = {\n  src: string\n}\ntype MediaProps = {\n  block: ContentBlock\n  contentState: ContentState\n}\nfunction Image(props: ImageProps): JSX.Element | null {\n  if (!!props.src) {\n    return <img src={props.src} alt=\"upload to cloud\" />\n  }\n  return null\n}\nfunction Media(props: MediaProps): JSX.Element {\n  const entity: EntityInstance = props.contentState.getEntity(props.block.getEntityAt(0))\n  const { src } = entity.getData()\n  const type = entity.getType()\n\n  let media: JSX.Element = <></>\n\n  if (type === 'image') {\n    media = <Image src={src} />\n  }\n  return media\n}\n\nexport default Media\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState } from 'react'\nimport { EditorState, DraftBlockType, RichUtils } from 'draft-js'\nimport classNames from 'classnames'\nimport Button from '../../Button'\nimport StyleTypes from '../StyleTypes'\nimport Modal from '../../Modal'\nimport Gallery from '../Gallery'\nimport SaveIcon from '../../../assets/icons/save.svg'\n\ninterface ToolbarProps {\n  variant: string\n  onAddImage: (publicId: string) => void\n  editorState: EditorState\n  handleChange: (editorState: EditorState) => void\n  handleSave: (type: string) => () => void\n}\nfunction Toolbar(props: ToolbarProps): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false)\n  const [toggle, setToggle] = useState(false)\n  const { editorState, handleChange, onAddImage, handleSave, variant } = props\n\n  const toggleModal = (): void => setIsOpen(!isOpen)\n  const handleCb = (publicId: string): void => {\n    onAddImage(publicId)\n    setIsOpen(false)\n  }\n  const handleToggle = (): void => setToggle(!toggle)\n  const toggleBlockType = (blockType: DraftBlockType): void => {\n    handleChange(RichUtils.toggleBlockType(editorState, blockType))\n  }\n\n  const toggleInlineStyle = (style: DraftBlockType): void => {\n    if (style === 'image') {\n      setIsOpen(!isOpen)\n    }\n    handleChange(RichUtils.toggleInlineStyle(editorState, style))\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"RichEditor-controls\">\n        <StyleTypes editorState={editorState} onToggleBlock={toggleBlockType} onToggleInline={toggleInlineStyle} />\n      </div>\n      <div className=\"toolbar__toggle\" onClick={handleToggle}>\n        <img src={SaveIcon} alt=\"menu\" />\n      </div>\n      <div\n        className={classNames({\n          toolbar__buttons: true,\n          'toolbar__buttons-hide': !toggle,\n        })}\n      >\n        <Button text={variant} handleClick={handleSave(variant)} />\n      </div>\n\n      {isOpen && (\n        <Modal toggleModal={toggleModal}>\n          <Gallery withCb={true} cb={handleCb} />\n        </Modal>\n      )}\n    </div>\n  )\n}\n\nexport default Toolbar\n","import { ContentBlock } from 'draft-js'\nimport Media from '../Media'\nimport { ReactNode } from 'react'\n\ntype MediaBlock = {\n  component: ReactNode\n  editable: boolean\n}\nexport function mediaBlockRenderer(block: ContentBlock): MediaBlock | null {\n  if (block.getType() === 'atomic') {\n    return {\n      component: Media,\n      editable: false,\n    }\n  }\n  return null\n}\n","import React, { useState, KeyboardEvent, createRef, useContext } from 'react'\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  convertToRaw,\n  AtomicBlockUtils,\n  convertFromRaw,\n} from 'draft-js'\nimport Toolbar from '../Toolbar'\nimport { DataContext } from '../../../contexts/dataContext'\nimport { mediaBlockRenderer } from '../MediaBlockRenderer'\nimport { useHistory } from 'react-router-dom'\nimport { getBlockStyle } from 'Helper'\nimport { BlogType } from 'components/Blog'\n\ntype HandleKeyCommand = 'handled' | 'not-handled'\ntype Props = {\n  blogId: {\n    id?: string\n  }\n}\nfunction RichEditor(props: Props): JSX.Element {\n  const { data, dataService } = useContext(DataContext)\n  const blogPost = props.blogId ? data.blogs.filter((b: BlogType) => b.id === props.blogId.id)[0] : null\n  const blogState: EditorState = blogPost\n    ? EditorState.createWithContent(convertFromRaw(JSON.parse(blogPost.content)))\n    : EditorState.createEmpty()\n\n  const [editorState, setEditorState] = useState<EditorState>(blogState)\n  const content = editorState.getCurrentContent()\n\n  const [editorContent, setEditorContent] = useState<string>(JSON.stringify(convertToRaw(content)))\n\n  const history = useHistory()\n\n  const editor = createRef<Editor>()\n  const focusEditor = (): void => {\n    if (editor.current) {\n      editor.current.focus()\n    }\n  }\n  const handleChange = (editorState: EditorState): void => {\n    setEditorState(editorState)\n    setEditorContent(JSON.stringify(convertToRaw(content)))\n  }\n\n  const handleSave = (type: string) => (): void => {\n    if (type === 'Publish') {\n      dataService.createNewPost({\n        content: editorContent,\n        userId: data.users[0]._id,\n      })\n      history.push('/dashboard/posts')\n    } else {\n      dataService.updatePost(props.blogId.id, editorContent)\n      history.push('/dashboard/posts')\n    }\n  }\n\n  const handleKeyCommand = (command: DraftEditorCommand, editorState: EditorState): HandleKeyCommand => {\n    const newState = RichUtils.handleKeyCommand(editorState, command)\n    if (newState) {\n      handleChange(newState)\n      return 'handled'\n    } else {\n      return 'not-handled'\n    }\n  }\n  const mapKeyToEditorCommand = (e: KeyboardEvent): any => {\n    if (e.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(e, editorState, 4)\n      if (newEditorState !== editorState) {\n        handleChange(newEditorState)\n      }\n      return null\n    }\n    return getDefaultKeyBinding(e)\n  }\n\n  const onAddImage = (publicId: string): void => {\n    const urlValue = `https://res.cloudinary.com/${process.env.REACT_APP_CLOUDNAME}/image/upload/${publicId}.jpg`\n    const contentState = editorState.getCurrentContent()\n    const contentStateWithEntitiy = contentState.createEntity('image', 'IMMUTABLE', { src: urlValue })\n    const entityKey = contentStateWithEntitiy.getLastCreatedEntityKey()\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntitiy,\n    })\n    setEditorState(AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' '))\n    setTimeout(() => focusEditor(), 0)\n  }\n\n  const contentState = editorState.getCurrentContent()\n  let className = 'RichEditor-editor'\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    ) {\n      className += ' RichEditor-hidePlaceholder'\n    }\n  }\n\n  return (\n    <div className=\"editor\">\n      <div className=\"RichEditor\">\n        <Toolbar\n          variant={props.blogId ? 'Save' : 'Publish'}\n          onAddImage={onAddImage}\n          editorState={editorState}\n          handleChange={handleChange}\n          handleSave={handleSave}\n        />\n        <div className={className} onClick={focusEditor}>\n          <Editor\n            ref={editor}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={mediaBlockRenderer}\n            editorState={editorState}\n            handleKeyCommand={handleKeyCommand}\n            keyBindingFn={mapKeyToEditorCommand}\n            onChange={handleChange}\n            placeholder=\"Tell a story...\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RichEditor\n"],"sourceRoot":""}